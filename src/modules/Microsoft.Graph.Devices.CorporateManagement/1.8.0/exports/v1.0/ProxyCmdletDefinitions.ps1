
# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of apps to which the policy is deployed.
.Description
List of apps to which the policy is deployed.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtandroidmanagedappprotectionapp
#>
function Get-MgDeviceAppMgtAndroidManagedAppProtectionApp {
[Alias('Get-MgDeviceAppManagementAndroidManagedAppProtectionApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedMobileApp
    ${ManagedMobileAppId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtAndroidManagedAppProtectionApp_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtAndroidManagedAppProtectionApp_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtAndroidManagedAppProtectionApp_List';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Navigation property to deployment summary of the configuration.
.Description
Navigation property to deployment summary of the configuration.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtandroidmanagedappprotectiondeploymentsummary
#>
function Get-MgDeviceAppMgtAndroidManagedAppProtectionDeploymentSummary {
[Alias('Get-MgDeviceAppManagementAndroidManagedAppProtectionDeploymentSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary])]
[CmdletBinding(DefaultParameterSetName='Get1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtAndroidManagedAppProtectionDeploymentSummary_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtAndroidManagedAppProtectionDeploymentSummary_GetViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Android managed app policies.
.Description
Android managed app policies.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphAndroidManagedAppProtection1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtandroidmanagedappprotection
#>
function Get-MgDeviceAppMgtAndroidManagedAppProtection {
[Alias('Get-MgDeviceAppManagementAndroidManagedAppProtection')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphAndroidManagedAppProtection1])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtAndroidManagedAppProtection_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtAndroidManagedAppProtection_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtAndroidManagedAppProtection_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of apps to which the policy is deployed.
.Description
List of apps to which the policy is deployed.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtdefaultmanagedappprotectionapp
#>
function Get-MgDeviceAppMgtDefaultManagedAppProtectionApp {
[Alias('Get-MgDeviceAppManagementDefaultManagedAppProtectionApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Parameter(ParameterSetName='List1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of defaultManagedAppProtection
    ${DefaultManagedAppProtectionId},

    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedMobileApp
    ${ManagedMobileAppId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtDefaultManagedAppProtectionApp_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtDefaultManagedAppProtectionApp_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtDefaultManagedAppProtectionApp_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Navigation property to deployment summary of the configuration.
.Description
Navigation property to deployment summary of the configuration.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtdefaultmanagedappprotectiondeploymentsummary
#>
function Get-MgDeviceAppMgtDefaultManagedAppProtectionDeploymentSummary {
[Alias('Get-MgDeviceAppManagementDefaultManagedAppProtectionDeploymentSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary])]
[CmdletBinding(DefaultParameterSetName='Get1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of defaultManagedAppProtection
    ${DefaultManagedAppProtectionId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtDefaultManagedAppProtectionDeploymentSummary_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtDefaultManagedAppProtectionDeploymentSummary_GetViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Default managed app policies.
.Description
Default managed app policies.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDefaultManagedAppProtection1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtdefaultmanagedappprotection
#>
function Get-MgDeviceAppMgtDefaultManagedAppProtection {
[Alias('Get-MgDeviceAppManagementDefaultManagedAppProtection')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDefaultManagedAppProtection1])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of defaultManagedAppProtection
    ${DefaultManagedAppProtectionId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtDefaultManagedAppProtection_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtDefaultManagedAppProtection_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtDefaultManagedAppProtection_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of apps to which the policy is deployed.
.Description
List of apps to which the policy is deployed.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtiosmanagedappprotectionapp
#>
function Get-MgDeviceAppMgtiOSManagedAppProtectionApp {
[Alias('Get-MgDeviceAppManagementiOSManagedAppProtectionApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedMobileApp
    ${ManagedMobileAppId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtiOSManagedAppProtectionApp_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtiOSManagedAppProtectionApp_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtiOSManagedAppProtectionApp_List';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Navigation property to deployment summary of the configuration.
.Description
Navigation property to deployment summary of the configuration.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtiosmanagedappprotectiondeploymentsummary
#>
function Get-MgDeviceAppMgtiOSManagedAppProtectionDeploymentSummary {
[Alias('Get-MgDeviceAppManagementiOSManagedAppProtectionDeploymentSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary])]
[CmdletBinding(DefaultParameterSetName='Get', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtiOSManagedAppProtectionDeploymentSummary_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtiOSManagedAppProtectionDeploymentSummary_GetViaIdentity';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
iOS managed app policies.
.Description
iOS managed app policies.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphIosManagedAppProtection1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtiosmanagedappprotection
#>
function Get-MgDeviceAppMgtiOSManagedAppProtection {
[Alias('Get-MgDeviceAppManagementiOSManagedAppProtection')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphIosManagedAppProtection1])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtiOSManagedAppProtection_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtiOSManagedAppProtection_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtiOSManagedAppProtection_List';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Managed app policies.
.Description
Managed app policies.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtmanagedapppolicy
#>
function Get-MgDeviceAppMgtManagedAppPolicy {
[Alias('Get-MgDeviceAppManagementManagedAppPolicy')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedAppPolicy_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedAppPolicy_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedAppPolicy_List';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Zero or more policys already applied on the registered app when it last synchronized with managment service.
.Description
Zero or more policys already applied on the registered app when it last synchronized with managment service.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtmanagedappregistrationappliedpolicy
#>
function Get-MgDeviceAppMgtManagedAppRegistrationAppliedPolicy {
[Alias('Get-MgDeviceAppManagementManagedAppRegistrationAppliedPolicy')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='Get', Mandatory)]
    [Parameter(ParameterSetName='List', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedAppRegistrationAppliedPolicy_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedAppRegistrationAppliedPolicy_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedAppRegistrationAppliedPolicy_List';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Zero or more policies admin intended for the app as of now.
.Description
Zero or more policies admin intended for the app as of now.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtmanagedappregistrationintendedpolicy
#>
function Get-MgDeviceAppMgtManagedAppRegistrationIntendedPolicy {
[Alias('Get-MgDeviceAppManagementManagedAppRegistrationIntendedPolicy')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Parameter(ParameterSetName='List1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedAppRegistrationIntendedPolicy_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedAppRegistrationIntendedPolicy_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedAppRegistrationIntendedPolicy_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Zero or more long running operations triggered on the app registration.
.Description
Zero or more long running operations triggered on the app registration.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppOperation
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtmanagedappregistrationoperation
#>
function Get-MgDeviceAppMgtManagedAppRegistrationOperation {
[Alias('Get-MgDeviceAppManagementManagedAppRegistrationOperation')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppOperation])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppOperation
    ${ManagedAppOperationId},

    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Parameter(ParameterSetName='List1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedAppRegistrationOperation_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedAppRegistrationOperation_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedAppRegistrationOperation_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Invoke function getUserIdsWithFlaggedAppRegistration
.Description
Invoke function getUserIdsWithFlaggedAppRegistration

.Outputs
System.String
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtmanagedappregistrationuserid
#>
function Get-MgDeviceAppMgtManagedAppRegistrationUserId {
[Alias('Get-MgDeviceAppManagementManagedAppRegistrationUserId')]
[OutputType([System.String])]
[CmdletBinding(DefaultParameterSetName='Get1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedAppRegistrationUserId_Get1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The managed app registrations.
.Description
The managed app registrations.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppRegistration1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtmanagedappregistration
#>
function Get-MgDeviceAppMgtManagedAppRegistration {
[Alias('Get-MgDeviceAppManagementManagedAppRegistration')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppRegistration1])]
[CmdletBinding(DefaultParameterSetName='List', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='GetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedAppRegistration_Get';
            GetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedAppRegistration_GetViaIdentity';
            List = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedAppRegistration_List';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The managed app statuses.
.Description
The managed app statuses.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppStatus
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtmanagedappstatuses
#>
function Get-MgDeviceAppMgtManagedAppStatuses {
[Alias('Get-MgDeviceAppManagementManagedAppStatuses')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppStatus])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppStatus
    ${ManagedAppStatusId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedAppStatuses_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedAppStatuses_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedAppStatuses_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of assignments for this eBook.
.Description
The list of assignments for this eBook.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBookAssignment1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtmanagedebookassignment
#>
function Get-MgDeviceAppMgtManagedEBookAssignment {
[Alias('Get-MgDeviceAppManagementManagedEBookAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBookAssignment1])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBookAssignment
    ${ManagedEBookAssignmentId},

    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Parameter(ParameterSetName='List1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedEBookAssignment_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedEBookAssignment_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedEBookAssignment_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of installation states for this eBook.
.Description
The list of installation states for this eBook.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtmanagedebookdevicestate
#>
function Get-MgDeviceAppMgtManagedEBookDeviceState {
[Alias('Get-MgDeviceAppManagementManagedEBookDeviceState')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of deviceInstallState
    ${DeviceInstallStateId},

    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Parameter(ParameterSetName='List1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedEBookDeviceState_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedEBookDeviceState_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedEBookDeviceState_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Mobile App Install Summary.
.Description
Mobile App Install Summary.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphEBookInstallSummary
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtmanagedebookinstallsummary
#>
function Get-MgDeviceAppMgtManagedEBookInstallSummary {
[Alias('Get-MgDeviceAppManagementManagedEBookInstallSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphEBookInstallSummary])]
[CmdletBinding(DefaultParameterSetName='Get1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedEBookInstallSummary_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedEBookInstallSummary_GetViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The install state of the eBook.
.Description
The install state of the eBook.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtmanagedebookuserstatesummarydevicestate
#>
function Get-MgDeviceAppMgtManagedEBookUserStateSummaryDeviceState {
[Alias('Get-MgDeviceAppManagementManagedEBookUserStateSummaryDeviceState')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of deviceInstallState
    ${DeviceInstallStateId},

    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Parameter(ParameterSetName='List1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Parameter(ParameterSetName='List1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of userInstallStateSummary
    ${UserInstallStateSummaryId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedEBookUserStateSummaryDeviceState_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedEBookUserStateSummaryDeviceState_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedEBookUserStateSummaryDeviceState_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of installation states for this eBook.
.Description
The list of installation states for this eBook.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUserInstallStateSummary
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtmanagedebookuserstatesummary
#>
function Get-MgDeviceAppMgtManagedEBookUserStateSummary {
[Alias('Get-MgDeviceAppManagementManagedEBookUserStateSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUserInstallStateSummary])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Parameter(ParameterSetName='List1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of userInstallStateSummary
    ${UserInstallStateSummaryId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedEBookUserStateSummary_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedEBookUserStateSummary_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedEBookUserStateSummary_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The Managed eBook.
.Description
The Managed eBook.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBook1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtmanagedebook
#>
function Get-MgDeviceAppMgtManagedEBook {
[Alias('Get-MgDeviceAppManagementManagedEBook')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBook1])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedEBook_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedEBook_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtManagedEBook_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Windows information protection for apps running on devices which are MDM enrolled.
.Description
Windows information protection for apps running on devices which are MDM enrolled.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMdmWindowsInformationProtectionPolicy1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtmdmwindowinformationprotectionpolicy
#>
function Get-MgDeviceAppMgtMdmWindowInformationProtectionPolicy {
[Alias('Get-MgDeviceAppManagementMdmWindowInformationProtectionPolicy')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMdmWindowsInformationProtectionPolicy1])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of mdmWindowsInformationProtectionPolicy
    ${MdmWindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMdmWindowInformationProtectionPolicy_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMdmWindowInformationProtectionPolicy_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMdmWindowInformationProtectionPolicy_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of group assignments for this mobile app.
.Description
The list of group assignments for this mobile app.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignment1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtmobileappassignment
#>
function Get-MgDeviceAppMgtMobileAppAssignment {
[Alias('Get-MgDeviceAppManagementMobileAppAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignment1])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of mobileAppAssignment
    ${MobileAppAssignmentId},

    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Parameter(ParameterSetName='List1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of mobileApp
    ${MobileAppId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileAppAssignment_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileAppAssignment_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileAppAssignment_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of categories for this app.
.Description
The list of categories for this app.

.Outputs
System.String
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtmobileappcategorybyref
#>
function Get-MgDeviceAppMgtMobileAppCategoryByRef {
[Alias('Get-MgDeviceAppManagementMobileAppGraphRefCategory')]
[OutputType([System.String])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of mobileApp
    ${MobileAppId},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter()]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter()]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter()]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileAppCategoryByRef_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The mobile app categories.
.Description
The mobile app categories.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppCategory
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtmobileappcategory
#>
function Get-MgDeviceAppMgtMobileAppCategory {
[Alias('Get-MgDeviceAppManagementMobileAppCategory')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppCategory])]
[CmdletBinding(DefaultParameterSetName='List2', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of mobileAppCategory
    ${MobileAppCategoryId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='List3', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of mobileApp
    ${MobileAppId},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List2')]
    [Parameter(ParameterSetName='List3')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List2')]
    [Parameter(ParameterSetName='List3')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List2')]
    [Parameter(ParameterSetName='List3')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List2')]
    [Parameter(ParameterSetName='List3')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List2')]
    [Parameter(ParameterSetName='List3')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List2')]
    [Parameter(ParameterSetName='List3')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List2')]
    [Parameter(ParameterSetName='List3')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List2')]
    [Parameter(ParameterSetName='List3')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileAppCategory_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileAppCategory_GetViaIdentity1';
            List2 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileAppCategory_List2';
            List3 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileAppCategory_List3';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of group assignemenets for app configration.
.Description
The list of group assignemenets for app configration.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtmobileappconfigurationassignment
#>
function Get-MgDeviceAppMgtMobileAppConfigurationAssignment {
[Alias('Get-MgDeviceAppManagementMobileAppConfigurationAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment1])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfigurationAssignment
    ${ManagedDeviceMobileAppConfigurationAssignmentId},

    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Parameter(ParameterSetName='List1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileAppConfigurationAssignment_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileAppConfigurationAssignment_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileAppConfigurationAssignment_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of ManagedDeviceMobileAppConfigurationDeviceStatus.
.Description
List of ManagedDeviceMobileAppConfigurationDeviceStatus.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtmobileappconfigurationdevicestatuses
#>
function Get-MgDeviceAppMgtMobileAppConfigurationDeviceStatuses {
[Alias('Get-MgDeviceAppManagementMobileAppConfigurationDeviceStatuses')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus1])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfigurationDeviceStatus
    ${ManagedDeviceMobileAppConfigurationDeviceStatusId},

    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Parameter(ParameterSetName='List1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileAppConfigurationDeviceStatuses_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileAppConfigurationDeviceStatuses_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileAppConfigurationDeviceStatuses_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
App configuration device status summary.
.Description
App configuration device status summary.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtmobileappconfigurationdevicestatussummary
#>
function Get-MgDeviceAppMgtMobileAppConfigurationDeviceStatusSummary {
[Alias('Get-MgDeviceAppManagementMobileAppConfigurationDeviceStatusSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary1])]
[CmdletBinding(DefaultParameterSetName='Get1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileAppConfigurationDeviceStatusSummary_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileAppConfigurationDeviceStatusSummary_GetViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of ManagedDeviceMobileAppConfigurationUserStatus.
.Description
List of ManagedDeviceMobileAppConfigurationUserStatus.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtmobileappconfigurationuserstatuses
#>
function Get-MgDeviceAppMgtMobileAppConfigurationUserStatuses {
[Alias('Get-MgDeviceAppManagementMobileAppConfigurationUserStatuses')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Parameter(ParameterSetName='List1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfigurationUserStatus
    ${ManagedDeviceMobileAppConfigurationUserStatusId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileAppConfigurationUserStatuses_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileAppConfigurationUserStatuses_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileAppConfigurationUserStatuses_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
App configuration user status summary.
.Description
App configuration user status summary.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtmobileappconfigurationuserstatussummary
#>
function Get-MgDeviceAppMgtMobileAppConfigurationUserStatusSummary {
[Alias('Get-MgDeviceAppManagementMobileAppConfigurationUserStatusSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary1])]
[CmdletBinding(DefaultParameterSetName='Get1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileAppConfigurationUserStatusSummary_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileAppConfigurationUserStatusSummary_GetViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The Managed Device Mobile Application Configurations.
.Description
The Managed Device Mobile Application Configurations.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfiguration1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtmobileappconfiguration
#>
function Get-MgDeviceAppMgtMobileAppConfiguration {
[Alias('Get-MgDeviceAppManagementMobileAppConfiguration')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfiguration1])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileAppConfiguration_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileAppConfiguration_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileAppConfiguration_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The mobile apps.
.Description
The mobile apps.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileApp1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtmobileapp
#>
function Get-MgDeviceAppMgtMobileApp {
[Alias('Get-MgDeviceAppManagementMobileApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileApp1])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of mobileApp
    ${MobileAppId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileApp_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileApp_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtMobileApp_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of apps to which the policy is deployed.
.Description
List of apps to which the policy is deployed.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgttargetedmanagedappconfigurationapp
#>
function Get-MgDeviceAppMgtTargetedManagedAppConfigurationApp {
[Alias('Get-MgDeviceAppManagementTargetedManagedAppConfigurationApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedMobileApp
    ${ManagedMobileAppId},

    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Parameter(ParameterSetName='List1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtTargetedManagedAppConfigurationApp_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtTargetedManagedAppConfigurationApp_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtTargetedManagedAppConfigurationApp_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
.Description
Navigation property to list of inclusion and exclusion groups to which the policy is deployed.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgttargetedmanagedappconfigurationassignment
#>
function Get-MgDeviceAppMgtTargetedManagedAppConfigurationAssignment {
[Alias('Get-MgDeviceAppManagementTargetedManagedAppConfigurationAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment1])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Parameter(ParameterSetName='List1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of targetedManagedAppPolicyAssignment
    ${TargetedManagedAppPolicyAssignmentId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtTargetedManagedAppConfigurationAssignment_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtTargetedManagedAppConfigurationAssignment_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtTargetedManagedAppConfigurationAssignment_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Navigation property to deployment summary of the configuration.
.Description
Navigation property to deployment summary of the configuration.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgttargetedmanagedappconfigurationdeploymentsummary
#>
function Get-MgDeviceAppMgtTargetedManagedAppConfigurationDeploymentSummary {
[Alias('Get-MgDeviceAppManagementTargetedManagedAppConfigurationDeploymentSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary])]
[CmdletBinding(DefaultParameterSetName='Get1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtTargetedManagedAppConfigurationDeploymentSummary_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtTargetedManagedAppConfigurationDeploymentSummary_GetViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Targeted managed app configurations.
.Description
Targeted managed app configurations.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppConfiguration1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgttargetedmanagedappconfiguration
#>
function Get-MgDeviceAppMgtTargetedManagedAppConfiguration {
[Alias('Get-MgDeviceAppManagementTargetedManagedAppConfiguration')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppConfiguration1])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtTargetedManagedAppConfiguration_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtTargetedManagedAppConfiguration_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtTargetedManagedAppConfiguration_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of Vpp tokens for this organization.
.Description
List of Vpp tokens for this organization.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphVppToken1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtvpptoken
#>
function Get-MgDeviceAppMgtVppToken {
[Alias('Get-MgDeviceAppManagementVppToken')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphVppToken1])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of vppToken
    ${VppTokenId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtVppToken_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtVppToken_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtVppToken_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Windows information protection for apps running on devices which are not MDM enrolled.
.Description
Windows information protection for apps running on devices which are not MDM enrolled.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionPolicy1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgtwindowinformationprotectionpolicy
#>
function Get-MgDeviceAppMgtWindowInformationProtectionPolicy {
[Alias('Get-MgDeviceAppManagementWindowInformationProtectionPolicy')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionPolicy1])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of windowsInformationProtectionPolicy
    ${WindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtWindowInformationProtectionPolicy_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtWindowInformationProtectionPolicy_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgtWindowInformationProtectionPolicy_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Get deviceAppManagement
.Description
Get deviceAppManagement

.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAppManagement1
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgdeviceappmgt
#>
function Get-MgDeviceAppMgt {
[Alias('Get-MgDeviceAppManagement')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAppManagement1])]
[CmdletBinding(DefaultParameterSetName='Get1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgDeviceAppMgt_Get1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of troubleshooting events for this user.
.Description
The list of troubleshooting events for this user.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceManagementTroubleshootingEvent1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mguserdevicemanagementtroubleshootingevent
#>
function Get-MgUserDeviceManagementTroubleshootingEvent {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceManagementTroubleshootingEvent1])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of deviceManagementTroubleshootingEvent
    ${DeviceManagementTroubleshootingEventId},

    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Parameter(ParameterSetName='List1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of user
    ${UserId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserDeviceManagementTroubleshootingEvent_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserDeviceManagementTroubleshootingEvent_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserDeviceManagementTroubleshootingEvent_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Zero or more managed app registrations that belong to the user.
.Description
Zero or more managed app registrations that belong to the user.

.Outputs
System.String
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgusermanagedappregistrationbyref
#>
function Get-MgUserManagedAppRegistrationByRef {
[OutputType([System.String])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of user
    ${UserId},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter()]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter()]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter()]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedAppRegistrationByRef_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Zero or more managed app registrations that belong to the user.
.Description
Zero or more managed app registrations that belong to the user.

.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppRegistration1
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgusermanagedappregistration
#>
function Get-MgUserManagedAppRegistration {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppRegistration1])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of user
    ${UserId},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter()]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter()]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter()]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedAppRegistration_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Device category
.Description
Device category

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCategory2
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgusermanageddevicecategory
#>
function Get-MgUserManagedDeviceCategory {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCategory2])]
[CmdletBinding(DefaultParameterSetName='Get1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of user
    ${UserId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceCategory_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceCategory_GetViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Device compliance policy states for this device.
.Description
Device compliance policy states for this device.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicyState1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgusermanageddevicecompliancepolicystate
#>
function Get-MgUserManagedDeviceCompliancePolicyState {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicyState1])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of deviceCompliancePolicyState
    ${DeviceCompliancePolicyStateId},

    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Parameter(ParameterSetName='List1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Parameter(ParameterSetName='List1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of user
    ${UserId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceCompliancePolicyState_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceCompliancePolicyState_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceCompliancePolicyState_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Device configuration states for this device.
.Description
Device configuration states for this device.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationState1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgusermanageddeviceconfigurationstate
#>
function Get-MgUserManagedDeviceConfigurationState {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationState1])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of deviceConfigurationState
    ${DeviceConfigurationStateId},

    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Parameter(ParameterSetName='List1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Parameter(ParameterSetName='List1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of user
    ${UserId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceConfigurationState_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceConfigurationState_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDeviceConfigurationState_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The managed devices associated with the user.
.Description
The managed devices associated with the user.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDevice1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/get-mgusermanageddevice
#>
function Get-MgUserManagedDevice {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDevice1])]
[CmdletBinding(DefaultParameterSetName='List1', PositionalBinding=$false)]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Get1', Mandatory)]
    [Parameter(ParameterSetName='List1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of user
    ${UserId},

    [Parameter(ParameterSetName='GetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Alias('Expand')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Expand related entities
    ${ExpandProperty},

    [Parameter()]
    [Alias('Select')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Select properties to be returned
    ${Property},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Filter items by property values
    ${Filter},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String]
    # Search items by search phrases
    ${Search},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Skip the first n items
    ${Skip},

    [Parameter(ParameterSetName='List1')]
    [Alias('OrderBy')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.String[]]
    # Order items by property values
    ${Sort},

    [Parameter(ParameterSetName='List1')]
    [Alias('Limit')]
    [Microsoft.Graph.PowerShell.Category('Query')]
    [System.Int32]
    # Show only the first n items
    ${Top},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Int32]
    # Sets the page size of results.
    ${PageSize},

    [Parameter(ParameterSetName='List1')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # List all pages.
    ${All},

    [Parameter(ParameterSetName='List1')]
    [Alias('CV')]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.String]
    # Specifies a count of the total number of items in a collection.
    # By default, this variable will be set in the global scope.
    ${CountVariable}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Get1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDevice_Get1';
            GetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDevice_GetViaIdentity1';
            List1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Get-MgUserManagedDevice_List1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Invoke action targetApps
.Description
Invoke action targetApps

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IPaths14Nj8OcDeviceappmanagementManagedapppoliciesManagedapppolicyIdMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: .
  [Id <String>]: Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

BODYPARAMETER <IPaths14Nj8OcDeviceappmanagementManagedapppoliciesManagedapppolicyIdMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema>: .
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: 
    [Id <String>]: Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/invoke-mgtargetdeviceappmgtmanagedapppolicyapp
#>
function Invoke-MgTargetDeviceAppMgtManagedAppPolicyApp {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='TargetExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Target', Mandatory)]
    [Parameter(ParameterSetName='TargetExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='TargetViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Target', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='TargetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IPaths14Nj8OcDeviceappmanagementManagedapppoliciesManagedapppolicyIdMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema]
    # .
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='TargetExpanded')]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='TargetExpanded')]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # .
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Target = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppMgtManagedAppPolicyApp_Target';
            TargetExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppMgtManagedAppPolicyApp_TargetExpanded';
            TargetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppMgtManagedAppPolicyApp_TargetViaIdentity';
            TargetViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppMgtManagedAppPolicyApp_TargetViaIdentityExpanded';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Invoke action targetApps
.Description
Invoke action targetApps

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IPaths450Gs6DeviceappmanagementManagedapppoliciesManagedapppolicyIdMicrosoftGraphManagedappprotectionMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: .
  [Id <String>]: Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

BODYPARAMETER <IPaths450Gs6DeviceappmanagementManagedapppoliciesManagedapppolicyIdMicrosoftGraphManagedappprotectionMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema>: .
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: 
    [Id <String>]: Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/invoke-mgtargetdeviceappmgtmanagedapppolicymicrosoftgraphmanagedappprotectionapp
#>
function Invoke-MgTargetDeviceAppMgtManagedAppPolicyMicrosoftGraphManagedAppProtectionApp {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='TargetExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Target', Mandatory)]
    [Parameter(ParameterSetName='TargetExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='TargetViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Target', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='TargetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IPaths450Gs6DeviceappmanagementManagedapppoliciesManagedapppolicyIdMicrosoftGraphManagedappprotectionMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema]
    # .
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='TargetExpanded')]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='TargetExpanded')]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # .
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Target = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppMgtManagedAppPolicyMicrosoftGraphManagedAppProtectionApp_Target';
            TargetExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppMgtManagedAppPolicyMicrosoftGraphManagedAppProtectionApp_TargetExpanded';
            TargetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppMgtManagedAppPolicyMicrosoftGraphManagedAppProtectionApp_TargetViaIdentity';
            TargetViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppMgtManagedAppPolicyMicrosoftGraphManagedAppProtectionApp_TargetViaIdentityExpanded';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Invoke action targetApps
.Description
Invoke action targetApps

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IPathsQpliqhDeviceappmanagementManagedapppoliciesManagedapppolicyIdMicrosoftGraphTargetedmanagedappprotectionMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: .
  [Id <String>]: Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

BODYPARAMETER <IPathsQpliqhDeviceappmanagementManagedapppoliciesManagedapppolicyIdMicrosoftGraphTargetedmanagedappprotectionMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema>: .
  [(Any) <Object>]: This indicates any property can be added to this object.
  [AppGroupType <String>]: Indicates a collection of apps to target which can be one of several pre-defined lists of apps or a manually selected list of apps
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: 
    [Id <String>]: Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/invoke-mgtargetdeviceappmgtmanagedapppolicymicrosoftgraphtargetedmanagedappprotectionapp
#>
function Invoke-MgTargetDeviceAppMgtManagedAppPolicyMicrosoftGraphTargetedManagedAppProtectionApp {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='TargetExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Target', Mandatory)]
    [Parameter(ParameterSetName='TargetExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='TargetViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Target', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='TargetViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IPathsQpliqhDeviceappmanagementManagedapppoliciesManagedapppolicyIdMicrosoftGraphTargetedmanagedappprotectionMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema]
    # .
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='TargetExpanded')]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='TargetExpanded')]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Indicates a collection of apps to target which can be one of several pre-defined lists of apps or a manually selected list of apps
    ${AppGroupType},

    [Parameter(ParameterSetName='TargetExpanded')]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # .
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Target = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppMgtManagedAppPolicyMicrosoftGraphTargetedManagedAppProtectionApp_Target';
            TargetExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppMgtManagedAppPolicyMicrosoftGraphTargetedManagedAppProtectionApp_TargetExpanded';
            TargetViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppMgtManagedAppPolicyMicrosoftGraphTargetedManagedAppProtectionApp_TargetViaIdentity';
            TargetViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppMgtManagedAppPolicyMicrosoftGraphTargetedManagedAppProtectionApp_TargetViaIdentityExpanded';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Invoke action targetApps
.Description
Invoke action targetApps

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IPathsVf2Dh9DeviceappmanagementManagedappregistrationsManagedappregistrationIdAppliedpoliciesManagedapppolicyIdMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: .
  [Id <String>]: Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

BODYPARAMETER <IPathsVf2Dh9DeviceappmanagementManagedappregistrationsManagedappregistrationIdAppliedpoliciesManagedapppolicyIdMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema>: .
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: 
    [Id <String>]: Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/invoke-mgtargetdeviceappmgtmanagedappregistrationappliedpolicyapp
#>
function Invoke-MgTargetDeviceAppMgtManagedAppRegistrationAppliedPolicyApp {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='TargetExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Target1', Mandatory)]
    [Parameter(ParameterSetName='TargetExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='Target1', Mandatory)]
    [Parameter(ParameterSetName='TargetExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='TargetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Target1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='TargetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IPathsVf2Dh9DeviceappmanagementManagedappregistrationsManagedappregistrationIdAppliedpoliciesManagedapppolicyIdMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema]
    # .
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='TargetExpanded1')]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='TargetExpanded1')]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # .
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Target1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppMgtManagedAppRegistrationAppliedPolicyApp_Target1';
            TargetExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppMgtManagedAppRegistrationAppliedPolicyApp_TargetExpanded1';
            TargetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppMgtManagedAppRegistrationAppliedPolicyApp_TargetViaIdentity1';
            TargetViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppMgtManagedAppRegistrationAppliedPolicyApp_TargetViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Invoke action targetApps
.Description
Invoke action targetApps

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IPaths1Mv9GnvDeviceappmanagementManagedappregistrationsManagedappregistrationIdIntendedpoliciesManagedapppolicyIdMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: .
  [Id <String>]: Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

BODYPARAMETER <IPaths1Mv9GnvDeviceappmanagementManagedappregistrationsManagedappregistrationIdIntendedpoliciesManagedapppolicyIdMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema>: .
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: 
    [Id <String>]: Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/invoke-mgtargetdeviceappmgtmanagedappregistrationintendedpolicyapp
#>
function Invoke-MgTargetDeviceAppMgtManagedAppRegistrationIntendedPolicyApp {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='TargetExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Target1', Mandatory)]
    [Parameter(ParameterSetName='TargetExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='Target1', Mandatory)]
    [Parameter(ParameterSetName='TargetExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='TargetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Target1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='TargetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IPaths1Mv9GnvDeviceappmanagementManagedappregistrationsManagedappregistrationIdIntendedpoliciesManagedapppolicyIdMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema]
    # .
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='TargetExpanded1')]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='TargetExpanded1')]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # .
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Target1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppMgtManagedAppRegistrationIntendedPolicyApp_Target1';
            TargetExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppMgtManagedAppRegistrationIntendedPolicyApp_TargetExpanded1';
            TargetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppMgtManagedAppRegistrationIntendedPolicyApp_TargetViaIdentity1';
            TargetViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppMgtManagedAppRegistrationIntendedPolicyApp_TargetViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Invoke action targetApps
.Description
Invoke action targetApps

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IPathsXzr66BDeviceappmanagementTargetedmanagedappconfigurationsTargetedmanagedappconfigurationIdMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: .
  [Id <String>]: Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

BODYPARAMETER <IPathsXzr66BDeviceappmanagementTargetedmanagedappconfigurationsTargetedmanagedappconfigurationIdMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema>: .
  [(Any) <Object>]: This indicates any property can be added to this object.
  [AppGroupType <String>]: Indicates a collection of apps to target which can be one of several pre-defined lists of apps or a manually selected list of apps
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: 
    [Id <String>]: Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/invoke-mgtargetdeviceappmgttargetedmanagedappconfigurationapp
#>
function Invoke-MgTargetDeviceAppMgtTargetedManagedAppConfigurationApp {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='TargetExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Target1', Mandatory)]
    [Parameter(ParameterSetName='TargetExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='TargetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Target1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='TargetViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IPathsXzr66BDeviceappmanagementTargetedmanagedappconfigurationsTargetedmanagedappconfigurationIdMicrosoftGraphTargetappsPostRequestbodyContentApplicationJsonSchema]
    # .
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='TargetExpanded1')]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='TargetExpanded1')]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Indicates a collection of apps to target which can be one of several pre-defined lists of apps or a manually selected list of apps
    ${AppGroupType},

    [Parameter(ParameterSetName='TargetExpanded1')]
    [Parameter(ParameterSetName='TargetViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # .
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Target1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppMgtTargetedManagedAppConfigurationApp_Target1';
            TargetExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppMgtTargetedManagedAppConfigurationApp_TargetExpanded1';
            TargetViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppMgtTargetedManagedAppConfigurationApp_TargetViaIdentity1';
            TargetViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Invoke-MgTargetDeviceAppMgtTargetedManagedAppConfigurationApp_TargetViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of apps to which the policy is deployed.
.Description
List of apps to which the policy is deployed.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedMobileApp>: The identifier for the deployment an app.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtandroidmanagedappprotectionapp
#>
function New-MgDeviceAppMgtAndroidManagedAppProtectionApp {
[Alias('New-MgDeviceAppManagementAndroidManagedAppProtectionApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp]
    # The identifier for the deployment an app.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppIdentifier]))]
    [System.Collections.Hashtable]
    # The identifier for a mobile app.
    ${MobileAppIdentifier},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtAndroidManagedAppProtectionApp_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtAndroidManagedAppProtectionApp_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtAndroidManagedAppProtectionApp_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtAndroidManagedAppProtectionApp_CreateViaIdentityExpanded';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Android managed app policies.
.Description
Android managed app policies.

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphAndroidManagedAppProtection1
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphAndroidManagedAppProtection1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: List of apps to which the policy is deployed.
  [Id <String>]: Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

ASSIGNMENTS <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
  [Id <String>]: Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphAndroidManagedAppProtection1>: Policy used to configure detailed management settings targeted to specific security groups and for a specified set of apps on an Android device
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>]: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    [Id <String>]: Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
  [AllowedDataStorageLocations <String[]>]: Data storage locations where a user may store managed data.
  [AllowedInboundDataTransferSources <String>]: Data can be transferred from/to these classes of apps
  [AllowedOutboundClipboardSharingLevel <String>]: Represents the level to which the device's clipboard may be shared between apps
  [AllowedOutboundDataTransferDestinations <String>]: Data can be transferred from/to these classes of apps
  [ContactSyncBlocked <Boolean?>]: Indicates whether contacts can be synced to the user's device.
  [DataBackupBlocked <Boolean?>]: Indicates whether the backup of a managed app's data is blocked.
  [DeviceComplianceRequired <Boolean?>]: Indicates whether device compliance is required.
  [DisableAppPinIfDevicePinIsSet <Boolean?>]: Indicates whether use of the app pin is required if the device pin is set.
  [FingerprintBlocked <Boolean?>]: Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
  [ManagedBrowser <String>]: Type of managed browser
  [ManagedBrowserToOpenLinksRequired <Boolean?>]: Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
  [MaximumPinRetries <Int32?>]: Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
  [MinimumPinLength <Int32?>]: Minimum pin length required for an app-level pin if PinRequired is set to True
  [MinimumRequiredAppVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumRequiredOSVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumWarningAppVersion <String>]: Versions less than the specified version will result in warning message on the managed app.
  [MinimumWarningOSVersion <String>]: Versions less than the specified version will result in warning message on the managed app from accessing company data.
  [OrganizationalCredentialsRequired <Boolean?>]: Indicates whether organizational credentials are required for app use.
  [PeriodBeforePinReset <TimeSpan?>]: TimePeriod before the all-level pin must be reset if PinRequired is set to True.
  [PeriodOfflineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is not connected to the internet.
  [PeriodOfflineBeforeWipeIsEnforced <TimeSpan?>]: The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
  [PeriodOnlineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is connected to the internet.
  [PinCharacterSet <String>]: Character set which is to be used for a user's app PIN
  [PinRequired <Boolean?>]: Indicates whether an app-level pin is required.
  [PrintBlocked <Boolean?>]: Indicates whether printing is allowed from managed apps.
  [SaveAsBlocked <Boolean?>]: Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
  [SimplePinBlocked <Boolean?>]: Indicates whether simplePin is blocked.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: Read-only.
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Id <String>]: Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.
  [CustomBrowserDisplayName <String>]: Friendly name of the preferred custom browser to open weblink on Android. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
  [CustomBrowserPackageId <String>]: Unique identifier of the preferred custom browser to open weblink on Android. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
  [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
  [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: Read-only.
    [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
    [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
      [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [DisplayName <String>]: Not yet documented
    [LastRefreshTime <DateTime?>]: Not yet documented
    [Version <String>]: Version of the entity.
  [DisableAppEncryptionIfDeviceEncryptionIsEnabled <Boolean?>]: When this setting is enabled, app level encryption is disabled if device level encryption is enabled
  [EncryptAppData <Boolean?>]: Indicates whether application data for managed apps should be encrypted
  [MinimumRequiredPatchVersion <String>]: Define the oldest required Android security patch level a user can have to gain secure access to the app.
  [MinimumWarningPatchVersion <String>]: Define the oldest recommended Android security patch level a user can have for secure access to the app.
  [ScreenCaptureBlocked <Boolean?>]: Indicates whether a managed user can take screen captures of managed apps

DEPLOYMENTSUMMARY <IMicrosoftGraphManagedAppPolicyDeploymentSummary>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
  [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
    [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DisplayName <String>]: Not yet documented
  [LastRefreshTime <DateTime?>]: Not yet documented
  [Version <String>]: Version of the entity.
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtandroidmanagedappprotection
#>
function New-MgDeviceAppMgtAndroidManagedAppProtection {
[Alias('New-MgDeviceAppManagementAndroidManagedAppProtection')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphAndroidManagedAppProtection1])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphAndroidManagedAppProtection1]
    # Policy used to configure detailed management settings targeted to specific security groups and for a specified set of apps on an Android device
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String[]]
    # Data storage locations where a user may store managed data.
    ${AllowedDataStorageLocations},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Data can be transferred from/to these classes of apps
    ${AllowedInboundDataTransferSources},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Represents the level to which the device's clipboard may be shared between apps
    ${AllowedOutboundClipboardSharingLevel},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Data can be transferred from/to these classes of apps
    ${AllowedOutboundDataTransferDestinations},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # List of apps to which the policy is deployed.
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]]
    # Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether contacts can be synced to the user's device.
    ${ContactSyncBlocked},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Friendly name of the preferred custom browser to open weblink on Android.
    # When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
    ${CustomBrowserDisplayName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Unique identifier of the preferred custom browser to open weblink on Android.
    # When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
    ${CustomBrowserPackageId},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether the backup of a managed app's data is blocked.
    ${DataBackupBlocked},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Count of apps to which the current policy is deployed.
    ${DeployedAppCount},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for DEPLOYMENTSUMMARY properties and create a hash table.
    ${DeploymentSummary},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether device compliance is required.
    ${DeviceComplianceRequired},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # When this setting is enabled, app level encryption is disabled if device level encryption is enabled
    ${DisableAppEncryptionIfDeviceEncryptionIsEnabled},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the app pin is required if the device pin is set.
    ${DisableAppPinIfDevicePinIsSet},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether application data for managed apps should be encrypted
    ${EncryptAppData},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
    ${FingerprintBlocked},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates if the policy is deployed to any inclusion groups or not.
    ${IsAssigned},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Type of managed browser
    ${ManagedBrowser},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
    ${ManagedBrowserToOpenLinksRequired},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
    ${MaximumPinRetries},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Minimum pin length required for an app-level pin if PinRequired is set to True
    ${MinimumPinLength},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredAppVersion},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredOSVersion},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Define the oldest required Android security patch level a user can have to gain secure access to the app.
    ${MinimumRequiredPatchVersion},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will result in warning message on the managed app.
    ${MinimumWarningAppVersion},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will result in warning message on the managed app from accessing company data.
    ${MinimumWarningOSVersion},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Define the oldest recommended Android security patch level a user can have for secure access to the app.
    ${MinimumWarningPatchVersion},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether organizational credentials are required for app use.
    ${OrganizationalCredentialsRequired},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # TimePeriod before the all-level pin must be reset if PinRequired is set to True.
    ${PeriodBeforePinReset},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The period after which access is checked when the device is not connected to the internet.
    ${PeriodOfflineBeforeAccessCheck},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
    ${PeriodOfflineBeforeWipeIsEnforced},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The period after which access is checked when the device is connected to the internet.
    ${PeriodOnlineBeforeAccessCheck},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Character set which is to be used for a user's app PIN
    ${PinCharacterSet},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether an app-level pin is required.
    ${PinRequired},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether printing is allowed from managed apps.
    ${PrintBlocked},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
    ${SaveAsBlocked},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether a managed user can take screen captures of managed apps
    ${ScreenCaptureBlocked},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether simplePin is blocked.
    ${SimplePinBlocked},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtAndroidManagedAppProtection_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtAndroidManagedAppProtection_CreateExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of apps to which the policy is deployed.
.Description
List of apps to which the policy is deployed.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedMobileApp>: The identifier for the deployment an app.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtdefaultmanagedappprotectionapp
#>
function New-MgDeviceAppMgtDefaultManagedAppProtectionApp {
[Alias('New-MgDeviceAppManagementDefaultManagedAppProtectionApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of defaultManagedAppProtection
    ${DefaultManagedAppProtectionId},

    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp]
    # The identifier for the deployment an app.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppIdentifier]))]
    [System.Collections.Hashtable]
    # The identifier for a mobile app.
    ${MobileAppIdentifier},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtDefaultManagedAppProtectionApp_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtDefaultManagedAppProtectionApp_CreateExpanded1';
            CreateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtDefaultManagedAppProtectionApp_CreateViaIdentity1';
            CreateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtDefaultManagedAppProtectionApp_CreateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Default managed app policies.
.Description
Default managed app policies.

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDefaultManagedAppProtection1
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDefaultManagedAppProtection1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: List of apps to which the policy is deployed.
  [Id <String>]: Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

BODYPARAMETER <IMicrosoftGraphDefaultManagedAppProtection1>: Policy used to configure detailed management settings for a specified set of apps for all users not targeted by a TargetedManagedAppProtection Policy
  [(Any) <Object>]: This indicates any property can be added to this object.
  [AllowedDataStorageLocations <String[]>]: Data storage locations where a user may store managed data.
  [AllowedInboundDataTransferSources <String>]: Data can be transferred from/to these classes of apps
  [AllowedOutboundClipboardSharingLevel <String>]: Represents the level to which the device's clipboard may be shared between apps
  [AllowedOutboundDataTransferDestinations <String>]: Data can be transferred from/to these classes of apps
  [ContactSyncBlocked <Boolean?>]: Indicates whether contacts can be synced to the user's device.
  [DataBackupBlocked <Boolean?>]: Indicates whether the backup of a managed app's data is blocked.
  [DeviceComplianceRequired <Boolean?>]: Indicates whether device compliance is required.
  [DisableAppPinIfDevicePinIsSet <Boolean?>]: Indicates whether use of the app pin is required if the device pin is set.
  [FingerprintBlocked <Boolean?>]: Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
  [ManagedBrowser <String>]: Type of managed browser
  [ManagedBrowserToOpenLinksRequired <Boolean?>]: Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
  [MaximumPinRetries <Int32?>]: Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
  [MinimumPinLength <Int32?>]: Minimum pin length required for an app-level pin if PinRequired is set to True
  [MinimumRequiredAppVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumRequiredOSVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumWarningAppVersion <String>]: Versions less than the specified version will result in warning message on the managed app.
  [MinimumWarningOSVersion <String>]: Versions less than the specified version will result in warning message on the managed app from accessing company data.
  [OrganizationalCredentialsRequired <Boolean?>]: Indicates whether organizational credentials are required for app use.
  [PeriodBeforePinReset <TimeSpan?>]: TimePeriod before the all-level pin must be reset if PinRequired is set to True.
  [PeriodOfflineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is not connected to the internet.
  [PeriodOfflineBeforeWipeIsEnforced <TimeSpan?>]: The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
  [PeriodOnlineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is connected to the internet.
  [PinCharacterSet <String>]: Character set which is to be used for a user's app PIN
  [PinRequired <Boolean?>]: Indicates whether an app-level pin is required.
  [PrintBlocked <Boolean?>]: Indicates whether printing is allowed from managed apps.
  [SaveAsBlocked <Boolean?>]: Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
  [SimplePinBlocked <Boolean?>]: Indicates whether simplePin is blocked.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: Read-only.
  [AppDataEncryptionType <String>]: Represents the level to which app data is encrypted for managed apps
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Id <String>]: Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.
  [CustomSettings <IMicrosoftGraphKeyValuePair[]>]: A set of string key and string value pairs to be sent to the affected users, unalterned by this service
    [Name <String>]: Name for this key-value pair
    [Value <String>]: Value for this key-value pair
  [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
  [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: Read-only.
    [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
    [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
      [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [DisplayName <String>]: Not yet documented
    [LastRefreshTime <DateTime?>]: Not yet documented
    [Version <String>]: Version of the entity.
  [DisableAppEncryptionIfDeviceEncryptionIsEnabled <Boolean?>]: When this setting is enabled, app level encryption is disabled if device level encryption is enabled. (Android only)
  [EncryptAppData <Boolean?>]: Indicates whether managed-app data should be encrypted. (Android only)
  [FaceIdBlocked <Boolean?>]: Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True. (iOS Only)
  [MinimumRequiredPatchVersion <String>]: Define the oldest required Android security patch level a user can have to gain secure access to the app. (Android only)
  [MinimumRequiredSdkVersion <String>]: Versions less than the specified version will block the managed app from accessing company data. (iOS Only)
  [MinimumWarningPatchVersion <String>]: Define the oldest recommended Android security patch level a user can have for secure access to the app. (Android only)
  [ScreenCaptureBlocked <Boolean?>]: Indicates whether screen capture is blocked. (Android only)

CUSTOMSETTINGS <IMicrosoftGraphKeyValuePair[]>: A set of string key and string value pairs to be sent to the affected users, unalterned by this service
  [Name <String>]: Name for this key-value pair
  [Value <String>]: Value for this key-value pair

DEPLOYMENTSUMMARY <IMicrosoftGraphManagedAppPolicyDeploymentSummary>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
  [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
    [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DisplayName <String>]: Not yet documented
  [LastRefreshTime <DateTime?>]: Not yet documented
  [Version <String>]: Version of the entity.
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtdefaultmanagedappprotection
#>
function New-MgDeviceAppMgtDefaultManagedAppProtection {
[Alias('New-MgDeviceAppManagementDefaultManagedAppProtection')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDefaultManagedAppProtection1])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDefaultManagedAppProtection1]
    # Policy used to configure detailed management settings for a specified set of apps for all users not targeted by a TargetedManagedAppProtection Policy
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String[]]
    # Data storage locations where a user may store managed data.
    ${AllowedDataStorageLocations},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Data can be transferred from/to these classes of apps
    ${AllowedInboundDataTransferSources},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Represents the level to which the device's clipboard may be shared between apps
    ${AllowedOutboundClipboardSharingLevel},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Data can be transferred from/to these classes of apps
    ${AllowedOutboundDataTransferDestinations},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Represents the level to which app data is encrypted for managed apps
    ${AppDataEncryptionType},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # List of apps to which the policy is deployed.
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether contacts can be synced to the user's device.
    ${ContactSyncBlocked},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphKeyValuePair[]]
    # A set of string key and string value pairs to be sent to the affected users, unalterned by this service
    # To construct, see NOTES section for CUSTOMSETTINGS properties and create a hash table.
    ${CustomSettings},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether the backup of a managed app's data is blocked.
    ${DataBackupBlocked},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Count of apps to which the current policy is deployed.
    ${DeployedAppCount},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for DEPLOYMENTSUMMARY properties and create a hash table.
    ${DeploymentSummary},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether device compliance is required.
    ${DeviceComplianceRequired},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # When this setting is enabled, app level encryption is disabled if device level encryption is enabled.
    # (Android only)
    ${DisableAppEncryptionIfDeviceEncryptionIsEnabled},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the app pin is required if the device pin is set.
    ${DisableAppPinIfDevicePinIsSet},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether managed-app data should be encrypted.
    # (Android only)
    ${EncryptAppData},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True.
    # (iOS Only)
    ${FaceIdBlocked},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
    ${FingerprintBlocked},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Type of managed browser
    ${ManagedBrowser},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
    ${ManagedBrowserToOpenLinksRequired},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
    ${MaximumPinRetries},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Minimum pin length required for an app-level pin if PinRequired is set to True
    ${MinimumPinLength},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredAppVersion},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredOSVersion},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Define the oldest required Android security patch level a user can have to gain secure access to the app.
    # (Android only)
    ${MinimumRequiredPatchVersion},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    # (iOS Only)
    ${MinimumRequiredSdkVersion},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will result in warning message on the managed app.
    ${MinimumWarningAppVersion},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will result in warning message on the managed app from accessing company data.
    ${MinimumWarningOSVersion},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Define the oldest recommended Android security patch level a user can have for secure access to the app.
    # (Android only)
    ${MinimumWarningPatchVersion},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether organizational credentials are required for app use.
    ${OrganizationalCredentialsRequired},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # TimePeriod before the all-level pin must be reset if PinRequired is set to True.
    ${PeriodBeforePinReset},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The period after which access is checked when the device is not connected to the internet.
    ${PeriodOfflineBeforeAccessCheck},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
    ${PeriodOfflineBeforeWipeIsEnforced},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The period after which access is checked when the device is connected to the internet.
    ${PeriodOnlineBeforeAccessCheck},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Character set which is to be used for a user's app PIN
    ${PinCharacterSet},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether an app-level pin is required.
    ${PinRequired},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether printing is allowed from managed apps.
    ${PrintBlocked},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
    ${SaveAsBlocked},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether screen capture is blocked.
    # (Android only)
    ${ScreenCaptureBlocked},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether simplePin is blocked.
    ${SimplePinBlocked},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtDefaultManagedAppProtection_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtDefaultManagedAppProtection_CreateExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of apps to which the policy is deployed.
.Description
List of apps to which the policy is deployed.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedMobileApp>: The identifier for the deployment an app.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtiosmanagedappprotectionapp
#>
function New-MgDeviceAppMgtiOSManagedAppProtectionApp {
[Alias('New-MgDeviceAppManagementiOSManagedAppProtectionApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp]
    # The identifier for the deployment an app.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppIdentifier]))]
    [System.Collections.Hashtable]
    # The identifier for a mobile app.
    ${MobileAppIdentifier},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtiOSManagedAppProtectionApp_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtiOSManagedAppProtectionApp_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtiOSManagedAppProtectionApp_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtiOSManagedAppProtectionApp_CreateViaIdentityExpanded';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
iOS managed app policies.
.Description
iOS managed app policies.

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphIosManagedAppProtection1
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphIosManagedAppProtection1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: List of apps to which the policy is deployed.
  [Id <String>]: Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

ASSIGNMENTS <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
  [Id <String>]: Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphIosManagedAppProtection1>: Policy used to configure detailed management settings targeted to specific security groups and for a specified set of apps on an iOS device
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>]: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    [Id <String>]: Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
  [AllowedDataStorageLocations <String[]>]: Data storage locations where a user may store managed data.
  [AllowedInboundDataTransferSources <String>]: Data can be transferred from/to these classes of apps
  [AllowedOutboundClipboardSharingLevel <String>]: Represents the level to which the device's clipboard may be shared between apps
  [AllowedOutboundDataTransferDestinations <String>]: Data can be transferred from/to these classes of apps
  [ContactSyncBlocked <Boolean?>]: Indicates whether contacts can be synced to the user's device.
  [DataBackupBlocked <Boolean?>]: Indicates whether the backup of a managed app's data is blocked.
  [DeviceComplianceRequired <Boolean?>]: Indicates whether device compliance is required.
  [DisableAppPinIfDevicePinIsSet <Boolean?>]: Indicates whether use of the app pin is required if the device pin is set.
  [FingerprintBlocked <Boolean?>]: Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
  [ManagedBrowser <String>]: Type of managed browser
  [ManagedBrowserToOpenLinksRequired <Boolean?>]: Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
  [MaximumPinRetries <Int32?>]: Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
  [MinimumPinLength <Int32?>]: Minimum pin length required for an app-level pin if PinRequired is set to True
  [MinimumRequiredAppVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumRequiredOSVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumWarningAppVersion <String>]: Versions less than the specified version will result in warning message on the managed app.
  [MinimumWarningOSVersion <String>]: Versions less than the specified version will result in warning message on the managed app from accessing company data.
  [OrganizationalCredentialsRequired <Boolean?>]: Indicates whether organizational credentials are required for app use.
  [PeriodBeforePinReset <TimeSpan?>]: TimePeriod before the all-level pin must be reset if PinRequired is set to True.
  [PeriodOfflineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is not connected to the internet.
  [PeriodOfflineBeforeWipeIsEnforced <TimeSpan?>]: The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
  [PeriodOnlineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is connected to the internet.
  [PinCharacterSet <String>]: Character set which is to be used for a user's app PIN
  [PinRequired <Boolean?>]: Indicates whether an app-level pin is required.
  [PrintBlocked <Boolean?>]: Indicates whether printing is allowed from managed apps.
  [SaveAsBlocked <Boolean?>]: Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
  [SimplePinBlocked <Boolean?>]: Indicates whether simplePin is blocked.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: Read-only.
  [AppDataEncryptionType <String>]: Represents the level to which app data is encrypted for managed apps
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Id <String>]: Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.
  [CustomBrowserProtocol <String>]: A custom browser protocol to open weblink on iOS. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
  [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
  [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: Read-only.
    [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
    [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
      [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [DisplayName <String>]: Not yet documented
    [LastRefreshTime <DateTime?>]: Not yet documented
    [Version <String>]: Version of the entity.
  [FaceIdBlocked <Boolean?>]: Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True.
  [MinimumRequiredSdkVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.

DEPLOYMENTSUMMARY <IMicrosoftGraphManagedAppPolicyDeploymentSummary>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
  [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
    [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DisplayName <String>]: Not yet documented
  [LastRefreshTime <DateTime?>]: Not yet documented
  [Version <String>]: Version of the entity.
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtiosmanagedappprotection
#>
function New-MgDeviceAppMgtiOSManagedAppProtection {
[Alias('New-MgDeviceAppManagementiOSManagedAppProtection')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphIosManagedAppProtection1])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphIosManagedAppProtection1]
    # Policy used to configure detailed management settings targeted to specific security groups and for a specified set of apps on an iOS device
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String[]]
    # Data storage locations where a user may store managed data.
    ${AllowedDataStorageLocations},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Data can be transferred from/to these classes of apps
    ${AllowedInboundDataTransferSources},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Represents the level to which the device's clipboard may be shared between apps
    ${AllowedOutboundClipboardSharingLevel},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Data can be transferred from/to these classes of apps
    ${AllowedOutboundDataTransferDestinations},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Represents the level to which app data is encrypted for managed apps
    ${AppDataEncryptionType},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # List of apps to which the policy is deployed.
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]]
    # Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether contacts can be synced to the user's device.
    ${ContactSyncBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # A custom browser protocol to open weblink on iOS.
    # When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
    ${CustomBrowserProtocol},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether the backup of a managed app's data is blocked.
    ${DataBackupBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Count of apps to which the current policy is deployed.
    ${DeployedAppCount},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for DEPLOYMENTSUMMARY properties and create a hash table.
    ${DeploymentSummary},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether device compliance is required.
    ${DeviceComplianceRequired},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the app pin is required if the device pin is set.
    ${DisableAppPinIfDevicePinIsSet},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True.
    ${FaceIdBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
    ${FingerprintBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates if the policy is deployed to any inclusion groups or not.
    ${IsAssigned},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Type of managed browser
    ${ManagedBrowser},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
    ${ManagedBrowserToOpenLinksRequired},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
    ${MaximumPinRetries},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Minimum pin length required for an app-level pin if PinRequired is set to True
    ${MinimumPinLength},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredAppVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredOSVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredSdkVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will result in warning message on the managed app.
    ${MinimumWarningAppVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will result in warning message on the managed app from accessing company data.
    ${MinimumWarningOSVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether organizational credentials are required for app use.
    ${OrganizationalCredentialsRequired},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # TimePeriod before the all-level pin must be reset if PinRequired is set to True.
    ${PeriodBeforePinReset},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The period after which access is checked when the device is not connected to the internet.
    ${PeriodOfflineBeforeAccessCheck},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
    ${PeriodOfflineBeforeWipeIsEnforced},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The period after which access is checked when the device is connected to the internet.
    ${PeriodOnlineBeforeAccessCheck},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Character set which is to be used for a user's app PIN
    ${PinCharacterSet},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether an app-level pin is required.
    ${PinRequired},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether printing is allowed from managed apps.
    ${PrintBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
    ${SaveAsBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether simplePin is blocked.
    ${SimplePinBlocked},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtiOSManagedAppProtection_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtiOSManagedAppProtection_CreateExpanded';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Managed app policies.
.Description
Managed app policies.

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppPolicy1>: The ManagedAppPolicy resource represents a base type for platform specific policies.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtmanagedapppolicy
#>
function New-MgDeviceAppMgtManagedAppPolicy {
[Alias('New-MgDeviceAppManagementManagedAppPolicy')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1]
    # The ManagedAppPolicy resource represents a base type for platform specific policies.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedAppPolicy_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedAppPolicy_CreateExpanded';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Zero or more policys already applied on the registered app when it last synchronized with managment service.
.Description
Zero or more policys already applied on the registered app when it last synchronized with managment service.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppPolicy1>: The ManagedAppPolicy resource represents a base type for platform specific policies.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtmanagedappregistrationappliedpolicy
#>
function New-MgDeviceAppMgtManagedAppRegistrationAppliedPolicy {
[Alias('New-MgDeviceAppManagementManagedAppRegistrationAppliedPolicy')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1]
    # The ManagedAppPolicy resource represents a base type for platform specific policies.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedAppRegistrationAppliedPolicy_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedAppRegistrationAppliedPolicy_CreateExpanded';
            CreateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedAppRegistrationAppliedPolicy_CreateViaIdentity';
            CreateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedAppRegistrationAppliedPolicy_CreateViaIdentityExpanded';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Zero or more policies admin intended for the app as of now.
.Description
Zero or more policies admin intended for the app as of now.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppPolicy1>: The ManagedAppPolicy resource represents a base type for platform specific policies.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtmanagedappregistrationintendedpolicy
#>
function New-MgDeviceAppMgtManagedAppRegistrationIntendedPolicy {
[Alias('New-MgDeviceAppManagementManagedAppRegistrationIntendedPolicy')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1]
    # The ManagedAppPolicy resource represents a base type for platform specific policies.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedAppRegistrationIntendedPolicy_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedAppRegistrationIntendedPolicy_CreateExpanded1';
            CreateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedAppRegistrationIntendedPolicy_CreateViaIdentity1';
            CreateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedAppRegistrationIntendedPolicy_CreateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Zero or more long running operations triggered on the app registration.
.Description
Zero or more long running operations triggered on the app registration.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppOperation
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppOperation
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppOperation>: Represents an operation applied against an app registration.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [DisplayName <String>]: The operation name.
  [LastModifiedDateTime <DateTime?>]: The last time the app operation was modified.
  [State <String>]: The current state of the operation
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtmanagedappregistrationoperation
#>
function New-MgDeviceAppMgtManagedAppRegistrationOperation {
[Alias('New-MgDeviceAppManagementManagedAppRegistrationOperation')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppOperation])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppOperation]
    # Represents an operation applied against an app registration.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The operation name.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The last time the app operation was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The current state of the operation
    ${State},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedAppRegistrationOperation_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedAppRegistrationOperation_CreateExpanded1';
            CreateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedAppRegistrationOperation_CreateViaIdentity1';
            CreateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedAppRegistrationOperation_CreateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The managed app registrations.
.Description
The managed app registrations.

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppRegistration1
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppRegistration1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPLIEDPOLICIES <IMicrosoftGraphManagedAppPolicy1[]>: Zero or more policys already applied on the registered app when it last synchronized with managment service.
  [Id <String>]: Read-only.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.

BODYPARAMETER <IMicrosoftGraphManagedAppRegistration1>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [AppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [ApplicationVersion <String>]: App version
  [AppliedPolicies <IMicrosoftGraphManagedAppPolicy1[]>]: Zero or more policys already applied on the registered app when it last synchronized with managment service.
    [Id <String>]: Read-only.
    [CreatedDateTime <DateTime?>]: The date and time the policy was created.
    [Description <String>]: The policy's description.
    [DisplayName <String>]: Policy display name.
    [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
    [Version <String>]: Version of the entity.
  [CreatedDateTime <DateTime?>]: Date and time of creation
  [DeviceName <String>]: Host device name
  [DeviceTag <String>]: App management SDK generated tag, which helps relate apps hosted on the same device. Not guaranteed to relate apps in all conditions.
  [DeviceType <String>]: Host device type
  [FlaggedReasons <String[]>]: Zero or more reasons an app registration is flagged. E.g. app running on rooted device
  [IntendedPolicies <IMicrosoftGraphManagedAppPolicy1[]>]: Zero or more policies admin intended for the app as of now.
  [LastSyncDateTime <DateTime?>]: Date and time of last the app synced with management service.
  [ManagementSdkVersion <String>]: App management SDK version
  [Operations <IMicrosoftGraphManagedAppOperation[]>]: Zero or more long running operations triggered on the app registration.
    [Id <String>]: Read-only.
    [DisplayName <String>]: The operation name.
    [LastModifiedDateTime <DateTime?>]: The last time the app operation was modified.
    [State <String>]: The current state of the operation
    [Version <String>]: Version of the entity.
  [PlatformVersion <String>]: Operating System version
  [UserId <String>]: The user Id to who this app registration belongs.
  [Version <String>]: Version of the entity.

INTENDEDPOLICIES <IMicrosoftGraphManagedAppPolicy1[]>: Zero or more policies admin intended for the app as of now.
  [Id <String>]: Read-only.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.

OPERATIONS <IMicrosoftGraphManagedAppOperation[]>: Zero or more long running operations triggered on the app registration.
  [Id <String>]: Read-only.
  [DisplayName <String>]: The operation name.
  [LastModifiedDateTime <DateTime?>]: The last time the app operation was modified.
  [State <String>]: The current state of the operation
  [Version <String>]: Version of the entity.
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtmanagedappregistration
#>
function New-MgDeviceAppMgtManagedAppRegistration {
[Alias('New-MgDeviceAppManagementManagedAppRegistration')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppRegistration1])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppRegistration1]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppIdentifier]))]
    [System.Collections.Hashtable]
    # The identifier for a mobile app.
    ${AppIdentifier},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # App version
    ${ApplicationVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1[]]
    # Zero or more policys already applied on the registered app when it last synchronized with managment service.
    # To construct, see NOTES section for APPLIEDPOLICIES properties and create a hash table.
    ${AppliedPolicies},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Date and time of creation
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Host device name
    ${DeviceName},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # App management SDK generated tag, which helps relate apps hosted on the same device.
    # Not guaranteed to relate apps in all conditions.
    ${DeviceTag},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Host device type
    ${DeviceType},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String[]]
    # Zero or more reasons an app registration is flagged.
    # E.g.
    # app running on rooted device
    ${FlaggedReasons},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1[]]
    # Zero or more policies admin intended for the app as of now.
    # To construct, see NOTES section for INTENDEDPOLICIES properties and create a hash table.
    ${IntendedPolicies},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Date and time of last the app synced with management service.
    ${LastSyncDateTime},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # App management SDK version
    ${ManagementSdkVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppOperation[]]
    # Zero or more long running operations triggered on the app registration.
    # To construct, see NOTES section for OPERATIONS properties and create a hash table.
    ${Operations},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Operating System version
    ${PlatformVersion},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The user Id to who this app registration belongs.
    ${UserId},

    [Parameter(ParameterSetName='CreateExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedAppRegistration_Create';
            CreateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedAppRegistration_CreateExpanded';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The managed app statuses.
.Description
The managed app statuses.

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppStatus
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppStatus
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppStatus>: Represents app protection and configuration status for the organization.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [DisplayName <String>]: Friendly name of the status report.
  [Version <String>]: Version of the entity.
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtmanagedappstatuses
#>
function New-MgDeviceAppMgtManagedAppStatuses {
[Alias('New-MgDeviceAppManagementManagedAppStatuses')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppStatus])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppStatus]
    # Represents app protection and configuration status for the organization.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Friendly name of the status report.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedAppStatuses_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedAppStatuses_CreateExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of assignments for this eBook.
.Description
The list of assignments for this eBook.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBookAssignment1
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBookAssignment1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedEBookAssignment1>: Contains properties used to assign a eBook to a group.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [InstallIntent <String>]: Possible values for the install intent chosen by the admin.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtmanagedebookassignment
#>
function New-MgDeviceAppMgtManagedEBookAssignment {
[Alias('New-MgDeviceAppManagementManagedEBookAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBookAssignment1])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBookAssignment1]
    # Contains properties used to assign a eBook to a group.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Possible values for the install intent chosen by the admin.
    ${InstallIntent},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1]))]
    [System.Collections.Hashtable]
    # Base type for assignment targets.
    ${Target},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedEBookAssignment_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedEBookAssignment_CreateExpanded1';
            CreateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedEBookAssignment_CreateViaIdentity1';
            CreateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedEBookAssignment_CreateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of installation states for this eBook.
.Description
The list of installation states for this eBook.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphDeviceInstallState>: Contains properties for the installation state for a device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [DeviceId <String>]: Device Id.
  [DeviceName <String>]: Device name.
  [ErrorCode <String>]: The error code for install failures.
  [InstallState <String>]: Possible values for install state.
  [LastSyncDateTime <DateTime?>]: Last sync date and time.
  [OSDescription <String>]: OS Description.
  [OSVersion <String>]: OS Version.
  [UserName <String>]: Device User Name.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtmanagedebookdevicestate
#>
function New-MgDeviceAppMgtManagedEBookDeviceState {
[Alias('New-MgDeviceAppManagementManagedEBookDeviceState')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState]
    # Contains properties for the installation state for a device.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device Id.
    ${DeviceId},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device name.
    ${DeviceName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The error code for install failures.
    ${ErrorCode},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Possible values for install state.
    ${InstallState},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last sync date and time.
    ${LastSyncDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # OS Description.
    ${OSDescription},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # OS Version.
    ${OSVersion},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device User Name.
    ${UserName},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedEBookDeviceState_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedEBookDeviceState_CreateExpanded1';
            CreateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedEBookDeviceState_CreateViaIdentity1';
            CreateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedEBookDeviceState_CreateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The install state of the eBook.
.Description
The install state of the eBook.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphDeviceInstallState>: Contains properties for the installation state for a device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [DeviceId <String>]: Device Id.
  [DeviceName <String>]: Device name.
  [ErrorCode <String>]: The error code for install failures.
  [InstallState <String>]: Possible values for install state.
  [LastSyncDateTime <DateTime?>]: Last sync date and time.
  [OSDescription <String>]: OS Description.
  [OSVersion <String>]: OS Version.
  [UserName <String>]: Device User Name.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtmanagedebookuserstatesummarydevicestate
#>
function New-MgDeviceAppMgtManagedEBookUserStateSummaryDeviceState {
[Alias('New-MgDeviceAppManagementManagedEBookUserStateSummaryDeviceState')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='Create1', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of userInstallStateSummary
    ${UserInstallStateSummaryId},

    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState]
    # Contains properties for the installation state for a device.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device Id.
    ${DeviceId},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device name.
    ${DeviceName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The error code for install failures.
    ${ErrorCode},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Possible values for install state.
    ${InstallState},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last sync date and time.
    ${LastSyncDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # OS Description.
    ${OSDescription},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # OS Version.
    ${OSVersion},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device User Name.
    ${UserName},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedEBookUserStateSummaryDeviceState_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedEBookUserStateSummaryDeviceState_CreateExpanded1';
            CreateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedEBookUserStateSummaryDeviceState_CreateViaIdentity1';
            CreateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedEBookUserStateSummaryDeviceState_CreateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of installation states for this eBook.
.Description
The list of installation states for this eBook.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUserInstallStateSummary
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUserInstallStateSummary
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphUserInstallStateSummary>: Contains properties for the installation state summary for a user.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [DeviceStates <IMicrosoftGraphDeviceInstallState[]>]: The install state of the eBook.
    [Id <String>]: Read-only.
    [DeviceId <String>]: Device Id.
    [DeviceName <String>]: Device name.
    [ErrorCode <String>]: The error code for install failures.
    [InstallState <String>]: Possible values for install state.
    [LastSyncDateTime <DateTime?>]: Last sync date and time.
    [OSDescription <String>]: OS Description.
    [OSVersion <String>]: OS Version.
    [UserName <String>]: Device User Name.
  [FailedDeviceCount <Int32?>]: Failed Device Count.
  [InstalledDeviceCount <Int32?>]: Installed Device Count.
  [NotInstalledDeviceCount <Int32?>]: Not installed device count.
  [UserName <String>]: User name.

DEVICESTATES <IMicrosoftGraphDeviceInstallState[]>: The install state of the eBook.
  [Id <String>]: Read-only.
  [DeviceId <String>]: Device Id.
  [DeviceName <String>]: Device name.
  [ErrorCode <String>]: The error code for install failures.
  [InstallState <String>]: Possible values for install state.
  [LastSyncDateTime <DateTime?>]: Last sync date and time.
  [OSDescription <String>]: OS Description.
  [OSVersion <String>]: OS Version.
  [UserName <String>]: Device User Name.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtmanagedebookuserstatesummary
#>
function New-MgDeviceAppMgtManagedEBookUserStateSummary {
[Alias('New-MgDeviceAppManagementManagedEBookUserStateSummary')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUserInstallStateSummary])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUserInstallStateSummary]
    # Contains properties for the installation state summary for a user.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState[]]
    # The install state of the eBook.
    # To construct, see NOTES section for DEVICESTATES properties and create a hash table.
    ${DeviceStates},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Failed Device Count.
    ${FailedDeviceCount},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Installed Device Count.
    ${InstalledDeviceCount},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Not installed device count.
    ${NotInstalledDeviceCount},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # User name.
    ${UserName},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedEBookUserStateSummary_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedEBookUserStateSummary_CreateExpanded1';
            CreateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedEBookUserStateSummary_CreateViaIdentity1';
            CreateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedEBookUserStateSummary_CreateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The Managed eBook.
.Description
The Managed eBook.

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBook1
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBook1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphManagedEBookAssignment1[]>: The list of assignments for this eBook.
  [Id <String>]: Read-only.
  [InstallIntent <String>]: Possible values for the install intent chosen by the admin.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphManagedEBook1>: An abstract class containing the base properties for Managed eBook.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [Assignments <IMicrosoftGraphManagedEBookAssignment1[]>]: The list of assignments for this eBook.
    [Id <String>]: Read-only.
    [InstallIntent <String>]: Possible values for the install intent chosen by the admin.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [CreatedDateTime <DateTime?>]: The date and time when the eBook file was created.
  [Description <String>]: Description.
  [DeviceStates <IMicrosoftGraphDeviceInstallState[]>]: The list of installation states for this eBook.
    [Id <String>]: Read-only.
    [DeviceId <String>]: Device Id.
    [DeviceName <String>]: Device name.
    [ErrorCode <String>]: The error code for install failures.
    [InstallState <String>]: Possible values for install state.
    [LastSyncDateTime <DateTime?>]: Last sync date and time.
    [OSDescription <String>]: OS Description.
    [OSVersion <String>]: OS Version.
    [UserName <String>]: Device User Name.
  [DisplayName <String>]: Name of the eBook.
  [InformationUrl <String>]: The more information Url.
  [InstallSummary <IMicrosoftGraphEBookInstallSummary>]: Contains properties for the installation summary of a book for a device.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: Read-only.
    [FailedDeviceCount <Int32?>]: Number of Devices that have failed to install this book.
    [FailedUserCount <Int32?>]: Number of Users that have 1 or more device that failed to install this book.
    [InstalledDeviceCount <Int32?>]: Number of Devices that have successfully installed this book.
    [InstalledUserCount <Int32?>]: Number of Users whose devices have all succeeded to install this book.
    [NotInstalledDeviceCount <Int32?>]: Number of Devices that does not have this book installed.
    [NotInstalledUserCount <Int32?>]: Number of Users that did not install this book.
  [LargeCover <IMicrosoftGraphMimeContent>]: Contains properties for a generic mime content.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Type <String>]: Indicates the content mime type.
    [Value <Byte[]>]: The byte array that contains the actual content.
  [LastModifiedDateTime <DateTime?>]: The date and time when the eBook was last modified.
  [PrivacyInformationUrl <String>]: The privacy statement Url.
  [PublishedDateTime <DateTime?>]: The date and time when the eBook was published.
  [Publisher <String>]: Publisher.
  [UserStateSummary <IMicrosoftGraphUserInstallStateSummary[]>]: The list of installation states for this eBook.
    [Id <String>]: Read-only.
    [DeviceStates <IMicrosoftGraphDeviceInstallState[]>]: The install state of the eBook.
    [FailedDeviceCount <Int32?>]: Failed Device Count.
    [InstalledDeviceCount <Int32?>]: Installed Device Count.
    [NotInstalledDeviceCount <Int32?>]: Not installed device count.
    [UserName <String>]: User name.

DEVICESTATES <IMicrosoftGraphDeviceInstallState[]>: The list of installation states for this eBook.
  [Id <String>]: Read-only.
  [DeviceId <String>]: Device Id.
  [DeviceName <String>]: Device name.
  [ErrorCode <String>]: The error code for install failures.
  [InstallState <String>]: Possible values for install state.
  [LastSyncDateTime <DateTime?>]: Last sync date and time.
  [OSDescription <String>]: OS Description.
  [OSVersion <String>]: OS Version.
  [UserName <String>]: Device User Name.

INSTALLSUMMARY <IMicrosoftGraphEBookInstallSummary>: Contains properties for the installation summary of a book for a device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [FailedDeviceCount <Int32?>]: Number of Devices that have failed to install this book.
  [FailedUserCount <Int32?>]: Number of Users that have 1 or more device that failed to install this book.
  [InstalledDeviceCount <Int32?>]: Number of Devices that have successfully installed this book.
  [InstalledUserCount <Int32?>]: Number of Users whose devices have all succeeded to install this book.
  [NotInstalledDeviceCount <Int32?>]: Number of Devices that does not have this book installed.
  [NotInstalledUserCount <Int32?>]: Number of Users that did not install this book.

LARGECOVER <IMicrosoftGraphMimeContent>: Contains properties for a generic mime content.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Type <String>]: Indicates the content mime type.
  [Value <Byte[]>]: The byte array that contains the actual content.

USERSTATESUMMARY <IMicrosoftGraphUserInstallStateSummary[]>: The list of installation states for this eBook.
  [Id <String>]: Read-only.
  [DeviceStates <IMicrosoftGraphDeviceInstallState[]>]: The install state of the eBook.
    [Id <String>]: Read-only.
    [DeviceId <String>]: Device Id.
    [DeviceName <String>]: Device name.
    [ErrorCode <String>]: The error code for install failures.
    [InstallState <String>]: Possible values for install state.
    [LastSyncDateTime <DateTime?>]: Last sync date and time.
    [OSDescription <String>]: OS Description.
    [OSVersion <String>]: OS Version.
    [UserName <String>]: Device User Name.
  [FailedDeviceCount <Int32?>]: Failed Device Count.
  [InstalledDeviceCount <Int32?>]: Installed Device Count.
  [NotInstalledDeviceCount <Int32?>]: Not installed device count.
  [UserName <String>]: User name.
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtmanagedebook
#>
function New-MgDeviceAppMgtManagedEBook {
[Alias('New-MgDeviceAppManagementManagedEBook')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBook1])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBook1]
    # An abstract class containing the base properties for Managed eBook.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBookAssignment1[]]
    # The list of assignments for this eBook.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time when the eBook file was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Description.
    ${Description},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState[]]
    # The list of installation states for this eBook.
    # To construct, see NOTES section for DEVICESTATES properties and create a hash table.
    ${DeviceStates},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Name of the eBook.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The more information Url.
    ${InformationUrl},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphEBookInstallSummary]
    # Contains properties for the installation summary of a book for a device.
    # To construct, see NOTES section for INSTALLSUMMARY properties and create a hash table.
    ${InstallSummary},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMimeContent]
    # Contains properties for a generic mime content.
    # To construct, see NOTES section for LARGECOVER properties and create a hash table.
    ${LargeCover},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time when the eBook was last modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The privacy statement Url.
    ${PrivacyInformationUrl},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time when the eBook was published.
    ${PublishedDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Publisher.
    ${Publisher},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUserInstallStateSummary[]]
    # The list of installation states for this eBook.
    # To construct, see NOTES section for USERSTATESUMMARY properties and create a hash table.
    ${UserStateSummary},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedEBook_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtManagedEBook_CreateExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Windows information protection for apps running on devices which are MDM enrolled.
.Description
Windows information protection for apps running on devices which are MDM enrolled.

.Inputs
System.Collections.Hashtable
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMdmWindowsInformationProtectionPolicy1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>: Navigation property to list of security groups targeted for policy.
  [Id <String>]: Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

DATARECOVERYCERTIFICATE <IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate>: Windows Information Protection DataRecoveryCertificate
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Certificate <Byte[]>]: Data recovery Certificate
  [Description <String>]: Data recovery Certificate description
  [ExpirationDateTime <DateTime?>]: Data recovery Certificate expiration datetime
  [SubjectName <String>]: Data recovery Certificate subject name

ENTERPRISEINTERNALPROXYSERVERS <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: This is the comma-separated list of internal proxy servers. For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'. These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

ENTERPRISEIPRANGES <IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]>: Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to
  [DisplayName <String>]: Display name
  [Ranges <IMicrosoftGraphIPRange[]>]: Collection of ip ranges

ENTERPRISENETWORKDOMAINNAMES <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

ENTERPRISEPROTECTEDDOMAINNAMES <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: List of enterprise domains to be protected
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

ENTERPRISEPROXIEDDOMAINS <IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]>: Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
  [DisplayName <String>]: Display name
  [ProxiedDomains <IMicrosoftGraphProxiedDomain[]>]: Collection of proxied domains
    [IPAddressOrFqdn <String>]: The IP address or FQDN
    [Proxy <String>]: Proxy IP or FQDN

ENTERPRISEPROXYSERVERS <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: This is a list of proxy servers. Any server not on this list is considered non-enterprise
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

EXEMPTAPPLOCKERFILES <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>: Another way to input exempt apps through xml files
  [Id <String>]: Read-only.
  [DisplayName <String>]: The friendly name
  [File <Byte[]>]: File as a byte array
  [FileHash <String>]: SHA256 hash of the file
  [Version <String>]: Version of the entity.

EXEMPTAPPS <IMicrosoftGraphWindowsInformationProtectionApp[]>: Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data.
  [Denied <Boolean?>]: If true, app is denied protection or exemption.
  [Description <String>]: The app's description.
  [DisplayName <String>]: App display name.
  [ProductName <String>]: The product name.
  [PublisherName <String>]: The publisher name

NEUTRALDOMAINRESOURCES <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: List of domain names that can used for work or personal resource
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

PROTECTEDAPPLOCKERFILES <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>: Another way to input protected apps through xml files
  [Id <String>]: Read-only.
  [DisplayName <String>]: The friendly name
  [File <Byte[]>]: File as a byte array
  [FileHash <String>]: SHA256 hash of the file
  [Version <String>]: Version of the entity.

PROTECTEDAPPS <IMicrosoftGraphWindowsInformationProtectionApp[]>: Protected applications can access enterprise data and the data handled by those applications are protected with encryption
  [Denied <Boolean?>]: If true, app is denied protection or exemption.
  [Description <String>]: The app's description.
  [DisplayName <String>]: App display name.
  [ProductName <String>]: The product name.
  [PublisherName <String>]: The publisher name

SMBAUTOENCRYPTEDFILEEXTENSIONS <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtmdmwindowinformationprotectionpolicy
#>
function New-MgDeviceAppMgtMdmWindowInformationProtectionPolicy {
[Alias('New-MgDeviceAppManagementMdmWindowInformationProtectionPolicy')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMdmWindowsInformationProtectionPolicy1])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(Required, PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMdmWindowsInformationProtectionPolicy1]))]
    [System.Collections.Hashtable]
    # Policy for Windows information protection with MDM
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]]
    # Navigation property to list of security groups targeted for policy.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Specifies whether to allow Azure RMS encryption for WIP
    ${AzureRightsManagementServicesAllowed},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate]
    # Windows Information Protection DataRecoveryCertificate
    # To construct, see NOTES section for DATARECOVERYCERTIFICATE properties and create a hash table.
    ${DataRecoveryCertificate},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Possible values for WIP Protection enforcement levels
    ${EnforcementLevel},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Primary enterprise domain
    ${EnterpriseDomain},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]]
    # Sets the enterprise IP ranges that define the computers in the enterprise network.
    # Data that comes from those computers will be considered part of the enterprise and protected.
    # These locations will be considered a safe destination for enterprise data to be shared to
    # To construct, see NOTES section for ENTERPRISEIPRANGES properties and create a hash table.
    ${EnterpriseIPRanges},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets.
    # Default is false
    ${EnterpriseIPRangesAreAuthoritative},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # This is the comma-separated list of internal proxy servers.
    # For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'.
    # These proxies have been configured by the admin to connect to specific resources on the Internet.
    # They are considered to be enterprise network locations.
    # The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
    # To construct, see NOTES section for ENTERPRISEINTERNALPROXYSERVERS properties and create a hash table.
    ${EnterpriseInternalProxyServers},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # This is the list of domains that comprise the boundaries of the enterprise.
    # Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
    # To construct, see NOTES section for ENTERPRISENETWORKDOMAINNAMES properties and create a hash table.
    ${EnterpriseNetworkDomainNames},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # List of enterprise domains to be protected
    # To construct, see NOTES section for ENTERPRISEPROTECTEDDOMAINNAMES properties and create a hash table.
    ${EnterpriseProtectedDomainNames},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]]
    # Contains a list of Enterprise resource domains hosted in the cloud that need to be protected.
    # Connections to these resources are considered enterprise data.
    # If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80).
    # A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
    # To construct, see NOTES section for ENTERPRISEPROXIEDDOMAINS properties and create a hash table.
    ${EnterpriseProxiedDomains},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # This is a list of proxy servers.
    # Any server not on this list is considered non-enterprise
    # To construct, see NOTES section for ENTERPRISEPROXYSERVERS properties and create a hash table.
    ${EnterpriseProxyServers},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies.
    # Default is false
    ${EnterpriseProxyServersAreAuthoritative},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]]
    # Another way to input exempt apps through xml files
    # To construct, see NOTES section for EXEMPTAPPLOCKERFILES properties and create a hash table.
    ${ExemptAppLockerFiles},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionApp[]]
    # Exempt applications can also access enterprise data, but the data handled by those applications are not protected.
    # This is because some critical enterprise applications may have compatibility problems with encrypted data.
    # To construct, see NOTES section for EXEMPTAPPS properties and create a hash table.
    ${ExemptApps},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu.
    # Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app
    ${IconsVisible},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # This switch is for the Windows Search Indexer, to allow or disallow indexing of items
    ${IndexingEncryptedStoresOrItemsBlocked},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates if the policy is deployed to any inclusion groups or not.
    ${IsAssigned},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # List of domain names that can used for work or personal resource
    # To construct, see NOTES section for NEUTRALDOMAINRESOURCES properties and create a hash table.
    ${NeutralDomainResources},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]]
    # Another way to input protected apps through xml files
    # To construct, see NOTES section for PROTECTEDAPPLOCKERFILES properties and create a hash table.
    ${ProtectedAppLockerFiles},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionApp[]]
    # Protected applications can access enterprise data and the data handled by those applications are protected with encryption
    # To construct, see NOTES section for PROTECTEDAPPS properties and create a hash table.
    ${ProtectedApps},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured
    ${ProtectionUnderLockConfigRequired},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # This policy controls whether to revoke the WIP keys when a device unenrolls from the management service.
    # If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment.
    # If the keys are not revoked, there will be no revoked file cleanup subsequently.
    ${RevokeOnUnenrollDisabled},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # TemplateID GUID to use for RMS encryption.
    # The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access
    ${RightsManagementServicesTemplateId},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
    # To construct, see NOTES section for SMBAUTOENCRYPTEDFILEEXTENSIONS properties and create a hash table.
    ${SmbAutoEncryptedFileExtensions},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMdmWindowInformationProtectionPolicy_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMdmWindowInformationProtectionPolicy_CreateExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of group assignments for this mobile app.
.Description
The list of group assignments for this mobile app.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignment1
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignment1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphMobileAppAssignment1>: A class containing the properties used for Group Assignment of a Mobile App.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [Intent <String>]: Possible values for the install intent chosen by the admin.
  [Settings <IMicrosoftGraphMobileAppAssignmentSettings>]: Abstract class to contain properties used to assign a mobile app to a group.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtmobileappassignment
#>
function New-MgDeviceAppMgtMobileAppAssignment {
[Alias('New-MgDeviceAppManagementMobileAppAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignment1])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of mobileApp
    ${MobileAppId},

    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignment1]
    # A class containing the properties used for Group Assignment of a Mobile App.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Possible values for the install intent chosen by the admin.
    ${Intent},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignmentSettings]))]
    [System.Collections.Hashtable]
    # Abstract class to contain properties used to assign a mobile app to a group.
    ${Settings},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1]))]
    [System.Collections.Hashtable]
    # Base type for assignment targets.
    ${Target},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileAppAssignment_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileAppAssignment_CreateExpanded1';
            CreateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileAppAssignment_CreateViaIdentity1';
            CreateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileAppAssignment_CreateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of categories for this app.
.Description
The list of categories for this app.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
System.Collections.Hashtable
.Outputs
Microsoft.Graph.PowerShell.Models.IPaths1Ipnvb3DeviceappmanagementMobileappsMobileappIdCategoriesRefPostResponses201ContentApplicationJsonSchema
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtmobileappcategorybyref
#>
function New-MgDeviceAppMgtMobileAppCategoryByRef {
[Alias('New-MgDeviceAppManagementMobileAppGraphRefCategory')]
[OutputType([Microsoft.Graph.PowerShell.Models.IPaths1Ipnvb3DeviceappmanagementMobileappsMobileappIdCategoriesRefPostResponses201ContentApplicationJsonSchema])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of mobileApp
    ${MobileAppId},

    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(Required, PossibleTypes=([Microsoft.Graph.PowerShell.Models.IPaths15Zls1MDeviceappmanagementMobileappsMobileappIdCategoriesRefPostRequestbodyContentApplicationJsonSchema]))]
    [System.Collections.Hashtable]
    # .
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileAppCategoryByRef_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileAppCategoryByRef_CreateExpanded1';
            CreateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileAppCategoryByRef_CreateViaIdentity1';
            CreateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileAppCategoryByRef_CreateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The mobile app categories.
.Description
The mobile app categories.

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppCategory
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppCategory
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphMobileAppCategory>: Contains properties for a single Intune app category.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [DisplayName <String>]: The name of the app category.
  [LastModifiedDateTime <DateTime?>]: The date and time the mobileAppCategory was last modified.
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtmobileappcategory
#>
function New-MgDeviceAppMgtMobileAppCategory {
[Alias('New-MgDeviceAppManagementMobileAppCategory')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppCategory])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppCategory]
    # Contains properties for a single Intune app category.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The name of the app category.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the mobileAppCategory was last modified.
    ${LastModifiedDateTime},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileAppCategory_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileAppCategory_CreateExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of group assignemenets for app configration.
.Description
The list of group assignemenets for app configration.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment1
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment1>: Contains the properties used to assign an MDM app configuration to a group.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtmobileappconfigurationassignment
#>
function New-MgDeviceAppMgtMobileAppConfigurationAssignment {
[Alias('New-MgDeviceAppManagementMobileAppConfigurationAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment1])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment1]
    # Contains the properties used to assign an MDM app configuration to a group.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1]))]
    [System.Collections.Hashtable]
    # Base type for assignment targets.
    ${Target},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileAppConfigurationAssignment_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileAppConfigurationAssignment_CreateExpanded1';
            CreateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileAppConfigurationAssignment_CreateViaIdentity1';
            CreateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileAppConfigurationAssignment_CreateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of ManagedDeviceMobileAppConfigurationDeviceStatus.
.Description
List of ManagedDeviceMobileAppConfigurationDeviceStatus.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus1
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus1>: Contains properties, inherited properties and actions for an MDM mobile app configuration status for a device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [ComplianceGracePeriodExpirationDateTime <DateTime?>]: The DateTime when device compliance grace period expires
  [DeviceDisplayName <String>]: Device name of the DevicePolicyStatus.
  [DeviceModel <String>]: The device model that is being reported
  [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
  [Status <String>]: complianceStatus
  [UserName <String>]: The User Name that is being reported
  [UserPrincipalName <String>]: UserPrincipalName.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtmobileappconfigurationdevicestatuses
#>
function New-MgDeviceAppMgtMobileAppConfigurationDeviceStatuses {
[Alias('New-MgDeviceAppManagementMobileAppConfigurationDeviceStatuses')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus1])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus1]
    # Contains properties, inherited properties and actions for an MDM mobile app configuration status for a device.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The DateTime when device compliance grace period expires
    ${ComplianceGracePeriodExpirationDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device name of the DevicePolicyStatus.
    ${DeviceDisplayName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The device model that is being reported
    ${DeviceModel},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last modified date time of the policy report.
    ${LastReportedDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # complianceStatus
    ${Status},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The User Name that is being reported
    ${UserName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # UserPrincipalName.
    ${UserPrincipalName},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileAppConfigurationDeviceStatuses_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileAppConfigurationDeviceStatuses_CreateExpanded1';
            CreateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileAppConfigurationDeviceStatuses_CreateViaIdentity1';
            CreateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileAppConfigurationDeviceStatuses_CreateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of ManagedDeviceMobileAppConfigurationUserStatus.
.Description
List of ManagedDeviceMobileAppConfigurationUserStatus.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus>: Contains properties, inherited properties and actions for an MDM mobile app configuration status for a user.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [DevicesCount <Int32?>]: Devices count for that user.
  [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
  [Status <String>]: complianceStatus
  [UserDisplayName <String>]: User name of the DevicePolicyStatus.
  [UserPrincipalName <String>]: UserPrincipalName.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtmobileappconfigurationuserstatuses
#>
function New-MgDeviceAppMgtMobileAppConfigurationUserStatuses {
[Alias('New-MgDeviceAppManagementMobileAppConfigurationUserStatuses')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus]
    # Contains properties, inherited properties and actions for an MDM mobile app configuration status for a user.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Devices count for that user.
    ${DevicesCount},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last modified date time of the policy report.
    ${LastReportedDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # complianceStatus
    ${Status},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # User name of the DevicePolicyStatus.
    ${UserDisplayName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # UserPrincipalName.
    ${UserPrincipalName},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileAppConfigurationUserStatuses_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileAppConfigurationUserStatuses_CreateExpanded1';
            CreateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileAppConfigurationUserStatuses_CreateViaIdentity1';
            CreateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileAppConfigurationUserStatuses_CreateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The Managed Device Mobile Application Configurations.
.Description
The Managed Device Mobile Application Configurations.

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfiguration1
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfiguration1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment1[]>: The list of group assignemenets for app configration.
  [Id <String>]: Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphManagedDeviceMobileAppConfiguration1>: An abstract class for Mobile app configuration for enrolled devices.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [Assignments <IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment1[]>]: The list of group assignemenets for app configration.
    [Id <String>]: Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [CreatedDateTime <DateTime?>]: DateTime the object was created.
  [Description <String>]: Admin provided description of the Device Configuration.
  [DeviceStatusSummary <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary1>]: Contains properties, inherited properties and actions for an MDM mobile app configuration device status summary.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: Read-only.
    [ConfigurationVersion <Int32?>]: Version of the policy for that overview
    [ErrorCount <Int32?>]: Number of error devices
    [FailedCount <Int32?>]: Number of failed devices
    [LastUpdateDateTime <DateTime?>]: Last update time
    [NotApplicableCount <Int32?>]: Number of not applicable devices
    [PendingCount <Int32?>]: Number of pending devices
    [SuccessCount <Int32?>]: Number of succeeded devices
  [DeviceStatuses <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus1[]>]: List of ManagedDeviceMobileAppConfigurationDeviceStatus.
    [Id <String>]: Read-only.
    [ComplianceGracePeriodExpirationDateTime <DateTime?>]: The DateTime when device compliance grace period expires
    [DeviceDisplayName <String>]: Device name of the DevicePolicyStatus.
    [DeviceModel <String>]: The device model that is being reported
    [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
    [Status <String>]: complianceStatus
    [UserName <String>]: The User Name that is being reported
    [UserPrincipalName <String>]: UserPrincipalName.
  [DisplayName <String>]: Admin provided name of the device configuration.
  [LastModifiedDateTime <DateTime?>]: DateTime the object was last modified.
  [TargetedMobileApps <String[]>]: the associated app.
  [UserStatusSummary <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary1>]: Contains properties, inherited properties and actions for an MDM mobile app configuration user status summary.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: Read-only.
    [ConfigurationVersion <Int32?>]: Version of the policy for that overview
    [ErrorCount <Int32?>]: Number of error Users
    [FailedCount <Int32?>]: Number of failed Users
    [LastUpdateDateTime <DateTime?>]: Last update time
    [NotApplicableCount <Int32?>]: Number of not applicable users
    [PendingCount <Int32?>]: Number of pending Users
    [SuccessCount <Int32?>]: Number of succeeded Users
  [UserStatuses <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus[]>]: List of ManagedDeviceMobileAppConfigurationUserStatus.
    [Id <String>]: Read-only.
    [DevicesCount <Int32?>]: Devices count for that user.
    [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
    [Status <String>]: complianceStatus
    [UserDisplayName <String>]: User name of the DevicePolicyStatus.
    [UserPrincipalName <String>]: UserPrincipalName.
  [Version <Int32?>]: Version of the device configuration.

DEVICESTATUSES <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus1[]>: List of ManagedDeviceMobileAppConfigurationDeviceStatus.
  [Id <String>]: Read-only.
  [ComplianceGracePeriodExpirationDateTime <DateTime?>]: The DateTime when device compliance grace period expires
  [DeviceDisplayName <String>]: Device name of the DevicePolicyStatus.
  [DeviceModel <String>]: The device model that is being reported
  [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
  [Status <String>]: complianceStatus
  [UserName <String>]: The User Name that is being reported
  [UserPrincipalName <String>]: UserPrincipalName.

DEVICESTATUSSUMMARY <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary1>: Contains properties, inherited properties and actions for an MDM mobile app configuration device status summary.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [ConfigurationVersion <Int32?>]: Version of the policy for that overview
  [ErrorCount <Int32?>]: Number of error devices
  [FailedCount <Int32?>]: Number of failed devices
  [LastUpdateDateTime <DateTime?>]: Last update time
  [NotApplicableCount <Int32?>]: Number of not applicable devices
  [PendingCount <Int32?>]: Number of pending devices
  [SuccessCount <Int32?>]: Number of succeeded devices

USERSTATUSES <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus[]>: List of ManagedDeviceMobileAppConfigurationUserStatus.
  [Id <String>]: Read-only.
  [DevicesCount <Int32?>]: Devices count for that user.
  [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
  [Status <String>]: complianceStatus
  [UserDisplayName <String>]: User name of the DevicePolicyStatus.
  [UserPrincipalName <String>]: UserPrincipalName.

USERSTATUSSUMMARY <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary1>: Contains properties, inherited properties and actions for an MDM mobile app configuration user status summary.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [ConfigurationVersion <Int32?>]: Version of the policy for that overview
  [ErrorCount <Int32?>]: Number of error Users
  [FailedCount <Int32?>]: Number of failed Users
  [LastUpdateDateTime <DateTime?>]: Last update time
  [NotApplicableCount <Int32?>]: Number of not applicable users
  [PendingCount <Int32?>]: Number of pending Users
  [SuccessCount <Int32?>]: Number of succeeded Users
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtmobileappconfiguration
#>
function New-MgDeviceAppMgtMobileAppConfiguration {
[Alias('New-MgDeviceAppManagementMobileAppConfiguration')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfiguration1])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfiguration1]
    # An abstract class for Mobile app configuration for enrolled devices.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment1[]]
    # The list of group assignemenets for app configration.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # DateTime the object was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Admin provided description of the Device Configuration.
    ${Description},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary1]
    # Contains properties, inherited properties and actions for an MDM mobile app configuration device status summary.
    # To construct, see NOTES section for DEVICESTATUSSUMMARY properties and create a hash table.
    ${DeviceStatusSummary},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus1[]]
    # List of ManagedDeviceMobileAppConfigurationDeviceStatus.
    # To construct, see NOTES section for DEVICESTATUSES properties and create a hash table.
    ${DeviceStatuses},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Admin provided name of the device configuration.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # DateTime the object was last modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String[]]
    # the associated app.
    ${TargetedMobileApps},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary1]
    # Contains properties, inherited properties and actions for an MDM mobile app configuration user status summary.
    # To construct, see NOTES section for USERSTATUSSUMMARY properties and create a hash table.
    ${UserStatusSummary},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus[]]
    # List of ManagedDeviceMobileAppConfigurationUserStatus.
    # To construct, see NOTES section for USERSTATUSES properties and create a hash table.
    ${UserStatuses},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Version of the device configuration.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileAppConfiguration_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileAppConfiguration_CreateExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The mobile apps.
.Description
The mobile apps.

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileApp1
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileApp1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphMobileAppAssignment1[]>: The list of group assignments for this mobile app.
  [Id <String>]: Read-only.
  [Intent <String>]: Possible values for the install intent chosen by the admin.
  [Settings <IMicrosoftGraphMobileAppAssignmentSettings>]: Abstract class to contain properties used to assign a mobile app to a group.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphMobileApp1>: An abstract class containing the base properties for Intune mobile apps.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [Assignments <IMicrosoftGraphMobileAppAssignment1[]>]: The list of group assignments for this mobile app.
    [Id <String>]: Read-only.
    [Intent <String>]: Possible values for the install intent chosen by the admin.
    [Settings <IMicrosoftGraphMobileAppAssignmentSettings>]: Abstract class to contain properties used to assign a mobile app to a group.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [Categories <IMicrosoftGraphMobileAppCategory[]>]: The list of categories for this app.
    [Id <String>]: Read-only.
    [DisplayName <String>]: The name of the app category.
    [LastModifiedDateTime <DateTime?>]: The date and time the mobileAppCategory was last modified.
  [CreatedDateTime <DateTime?>]: The date and time the app was created.
  [Description <String>]: The description of the app.
  [Developer <String>]: The developer of the app.
  [DisplayName <String>]: The admin provided or imported title of the app.
  [InformationUrl <String>]: The more information Url.
  [IsFeatured <Boolean?>]: The value indicating whether the app is marked as featured by the admin.
  [LargeIcon <IMicrosoftGraphMimeContent>]: Contains properties for a generic mime content.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Type <String>]: Indicates the content mime type.
    [Value <Byte[]>]: The byte array that contains the actual content.
  [LastModifiedDateTime <DateTime?>]: The date and time the app was last modified.
  [Notes <String>]: Notes for the app.
  [Owner <String>]: The owner of the app.
  [PrivacyInformationUrl <String>]: The privacy statement Url.
  [Publisher <String>]: The publisher of the app.
  [PublishingState <String>]: Indicates the publishing state of an app.

CATEGORIES <IMicrosoftGraphMobileAppCategory[]>: The list of categories for this app.
  [Id <String>]: Read-only.
  [DisplayName <String>]: The name of the app category.
  [LastModifiedDateTime <DateTime?>]: The date and time the mobileAppCategory was last modified.

LARGEICON <IMicrosoftGraphMimeContent>: Contains properties for a generic mime content.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Type <String>]: Indicates the content mime type.
  [Value <Byte[]>]: The byte array that contains the actual content.
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtmobileapp
#>
function New-MgDeviceAppMgtMobileApp {
[Alias('New-MgDeviceAppManagementMobileApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileApp1])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileApp1]
    # An abstract class containing the base properties for Intune mobile apps.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignment1[]]
    # The list of group assignments for this mobile app.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppCategory[]]
    # The list of categories for this app.
    # To construct, see NOTES section for CATEGORIES properties and create a hash table.
    ${Categories},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the app was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The description of the app.
    ${Description},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The developer of the app.
    ${Developer},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The admin provided or imported title of the app.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The more information Url.
    ${InformationUrl},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # The value indicating whether the app is marked as featured by the admin.
    ${IsFeatured},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMimeContent]
    # Contains properties for a generic mime content.
    # To construct, see NOTES section for LARGEICON properties and create a hash table.
    ${LargeIcon},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the app was last modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Notes for the app.
    ${Notes},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The owner of the app.
    ${Owner},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The privacy statement Url.
    ${PrivacyInformationUrl},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The publisher of the app.
    ${Publisher},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Indicates the publishing state of an app.
    ${PublishingState},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileApp_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtMobileApp_CreateExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of apps to which the policy is deployed.
.Description
List of apps to which the policy is deployed.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedMobileApp>: The identifier for the deployment an app.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgttargetedmanagedappconfigurationapp
#>
function New-MgDeviceAppMgtTargetedManagedAppConfigurationApp {
[Alias('New-MgDeviceAppManagementTargetedManagedAppConfigurationApp')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp]
    # The identifier for the deployment an app.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppIdentifier]))]
    [System.Collections.Hashtable]
    # The identifier for a mobile app.
    ${MobileAppIdentifier},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtTargetedManagedAppConfigurationApp_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtTargetedManagedAppConfigurationApp_CreateExpanded1';
            CreateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtTargetedManagedAppConfigurationApp_CreateViaIdentity1';
            CreateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtTargetedManagedAppConfigurationApp_CreateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
.Description
Navigation property to list of inclusion and exclusion groups to which the policy is deployed.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment1
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphTargetedManagedAppPolicyAssignment1>: The type for deployment of groups or apps.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgttargetedmanagedappconfigurationassignment
#>
function New-MgDeviceAppMgtTargetedManagedAppConfigurationAssignment {
[Alias('New-MgDeviceAppManagementTargetedManagedAppConfigurationAssignment')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment1])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment1]
    # The type for deployment of groups or apps.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1]))]
    [System.Collections.Hashtable]
    # Base type for assignment targets.
    ${Target},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtTargetedManagedAppConfigurationAssignment_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtTargetedManagedAppConfigurationAssignment_CreateExpanded1';
            CreateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtTargetedManagedAppConfigurationAssignment_CreateViaIdentity1';
            CreateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtTargetedManagedAppConfigurationAssignment_CreateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Targeted managed app configurations.
.Description
Targeted managed app configurations.

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppConfiguration1
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppConfiguration1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: List of apps to which the policy is deployed.
  [Id <String>]: Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

ASSIGNMENTS <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
  [Id <String>]: Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphTargetedManagedAppConfiguration1>: Configuration used to deliver a set of custom settings as-is to all users in the targeted security group
  [(Any) <Object>]: This indicates any property can be added to this object.
  [CustomSettings <IMicrosoftGraphKeyValuePair[]>]: A set of string key and string value pairs to be sent to apps for users to whom the configuration is scoped, unalterned by this service
    [Name <String>]: Name for this key-value pair
    [Value <String>]: Value for this key-value pair
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: Read-only.
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Id <String>]: Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>]: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    [Id <String>]: Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
  [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: Read-only.
    [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
    [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
      [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [DisplayName <String>]: Not yet documented
    [LastRefreshTime <DateTime?>]: Not yet documented
    [Version <String>]: Version of the entity.
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.

CUSTOMSETTINGS <IMicrosoftGraphKeyValuePair[]>: A set of string key and string value pairs to be sent to apps for users to whom the configuration is scoped, unalterned by this service
  [Name <String>]: Name for this key-value pair
  [Value <String>]: Value for this key-value pair

DEPLOYMENTSUMMARY <IMicrosoftGraphManagedAppPolicyDeploymentSummary>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
  [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
    [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DisplayName <String>]: Not yet documented
  [LastRefreshTime <DateTime?>]: Not yet documented
  [Version <String>]: Version of the entity.
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgttargetedmanagedappconfiguration
#>
function New-MgDeviceAppMgtTargetedManagedAppConfiguration {
[Alias('New-MgDeviceAppManagementTargetedManagedAppConfiguration')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppConfiguration1])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppConfiguration1]
    # Configuration used to deliver a set of custom settings as-is to all users in the targeted security group
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # List of apps to which the policy is deployed.
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]]
    # Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphKeyValuePair[]]
    # A set of string key and string value pairs to be sent to apps for users to whom the configuration is scoped, unalterned by this service
    # To construct, see NOTES section for CUSTOMSETTINGS properties and create a hash table.
    ${CustomSettings},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Count of apps to which the current policy is deployed.
    ${DeployedAppCount},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for DEPLOYMENTSUMMARY properties and create a hash table.
    ${DeploymentSummary},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates if the policy is deployed to any inclusion groups or not.
    ${IsAssigned},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtTargetedManagedAppConfiguration_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtTargetedManagedAppConfiguration_CreateExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of Vpp tokens for this organization.
.Description
List of Vpp tokens for this organization.

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphVppToken1
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphVppToken1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphVppToken1>: You purchase multiple licenses for iOS apps through the Apple Volume Purchase Program for Business or Education. This involves setting up an Apple VPP account from the Apple website and uploading the Apple VPP Business or Education token to Intune. You can then synchronize your volume purchase information with Intune and track your volume-purchased app use. You can upload multiple Apple VPP Business or Education tokens.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [AppleId <String>]: The apple Id associated with the given Apple Volume Purchase Program Token.
  [AutomaticallyUpdateApps <Boolean?>]: Whether or not apps for the VPP token will be automatically updated.
  [CountryOrRegion <String>]: Whether or not apps for the VPP token will be automatically updated.
  [ExpirationDateTime <DateTime?>]: The expiration date time of the Apple Volume Purchase Program Token.
  [LastModifiedDateTime <DateTime?>]: Last modification date time associated with the Apple Volume Purchase Program Token.
  [LastSyncDateTime <DateTime?>]: The last time when an application sync was done with the Apple volume purchase program service using the the Apple Volume Purchase Program Token.
  [LastSyncStatus <String>]: Possible sync statuses associated with an Apple Volume Purchase Program token.
  [OrganizationName <String>]: The organization associated with the Apple Volume Purchase Program Token
  [State <String>]: Possible states associated with an Apple Volume Purchase Program token.
  [Token <String>]: The Apple Volume Purchase Program Token string downloaded from the Apple Volume Purchase Program.
  [VppTokenAccountType <String>]: Possible types of an Apple Volume Purchase Program token.
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtvpptoken
#>
function New-MgDeviceAppMgtVppToken {
[Alias('New-MgDeviceAppManagementVppToken')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphVppToken1])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphVppToken1]
    # You purchase multiple licenses for iOS apps through the Apple Volume Purchase Program for Business or Education.
    # This involves setting up an Apple VPP account from the Apple website and uploading the Apple VPP Business or Education token to Intune.
    # You can then synchronize your volume purchase information with Intune and track your volume-purchased app use.
    # You can upload multiple Apple VPP Business or Education tokens.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The apple Id associated with the given Apple Volume Purchase Program Token.
    ${AppleId},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether or not apps for the VPP token will be automatically updated.
    ${AutomaticallyUpdateApps},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Whether or not apps for the VPP token will be automatically updated.
    ${CountryOrRegion},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The expiration date time of the Apple Volume Purchase Program Token.
    ${ExpirationDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last modification date time associated with the Apple Volume Purchase Program Token.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The last time when an application sync was done with the Apple volume purchase program service using the the Apple Volume Purchase Program Token.
    ${LastSyncDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Possible sync statuses associated with an Apple Volume Purchase Program token.
    ${LastSyncStatus},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The organization associated with the Apple Volume Purchase Program Token
    ${OrganizationName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Possible states associated with an Apple Volume Purchase Program token.
    ${State},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The Apple Volume Purchase Program Token string downloaded from the Apple Volume Purchase Program.
    ${Token},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Possible types of an Apple Volume Purchase Program token.
    ${VppTokenAccountType},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtVppToken_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtVppToken_CreateExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Windows information protection for apps running on devices which are not MDM enrolled.
.Description
Windows information protection for apps running on devices which are not MDM enrolled.

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionPolicy1
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionPolicy1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>: Navigation property to list of security groups targeted for policy.
  [Id <String>]: Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphWindowsInformationProtectionPolicy1>: Policy for Windows information protection without MDM
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>]: Navigation property to list of security groups targeted for policy.
    [Id <String>]: Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [AzureRightsManagementServicesAllowed <Boolean?>]: Specifies whether to allow Azure RMS encryption for WIP
  [DataRecoveryCertificate <IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate>]: Windows Information Protection DataRecoveryCertificate
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Certificate <Byte[]>]: Data recovery Certificate
    [Description <String>]: Data recovery Certificate description
    [ExpirationDateTime <DateTime?>]: Data recovery Certificate expiration datetime
    [SubjectName <String>]: Data recovery Certificate subject name
  [EnforcementLevel <String>]: Possible values for WIP Protection enforcement levels
  [EnterpriseDomain <String>]: Primary enterprise domain
  [EnterpriseIPRanges <IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]>]: Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to
    [DisplayName <String>]: Display name
    [Ranges <IMicrosoftGraphIPRange[]>]: Collection of ip ranges
  [EnterpriseIPRangesAreAuthoritative <Boolean?>]: Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets. Default is false
  [EnterpriseInternalProxyServers <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is the comma-separated list of internal proxy servers. For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'. These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
    [DisplayName <String>]: Display name
    [Resources <String[]>]: Collection of resources
  [EnterpriseNetworkDomainNames <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
  [EnterpriseProtectedDomainNames <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: List of enterprise domains to be protected
  [EnterpriseProxiedDomains <IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]>]: Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
    [DisplayName <String>]: Display name
    [ProxiedDomains <IMicrosoftGraphProxiedDomain[]>]: Collection of proxied domains
      [IPAddressOrFqdn <String>]: The IP address or FQDN
      [Proxy <String>]: Proxy IP or FQDN
  [EnterpriseProxyServers <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is a list of proxy servers. Any server not on this list is considered non-enterprise
  [EnterpriseProxyServersAreAuthoritative <Boolean?>]: Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies. Default is false
  [ExemptAppLockerFiles <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>]: Another way to input exempt apps through xml files
    [Id <String>]: Read-only.
    [DisplayName <String>]: The friendly name
    [File <Byte[]>]: File as a byte array
    [FileHash <String>]: SHA256 hash of the file
    [Version <String>]: Version of the entity.
  [ExemptApps <IMicrosoftGraphWindowsInformationProtectionApp[]>]: Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data.
    [Denied <Boolean?>]: If true, app is denied protection or exemption.
    [Description <String>]: The app's description.
    [DisplayName <String>]: App display name.
    [ProductName <String>]: The product name.
    [PublisherName <String>]: The publisher name
  [IconsVisible <Boolean?>]: Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu. Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app
  [IndexingEncryptedStoresOrItemsBlocked <Boolean?>]: This switch is for the Windows Search Indexer, to allow or disallow indexing of items
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
  [NeutralDomainResources <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: List of domain names that can used for work or personal resource
  [ProtectedAppLockerFiles <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>]: Another way to input protected apps through xml files
  [ProtectedApps <IMicrosoftGraphWindowsInformationProtectionApp[]>]: Protected applications can access enterprise data and the data handled by those applications are protected with encryption
  [ProtectionUnderLockConfigRequired <Boolean?>]: Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured
  [RevokeOnUnenrollDisabled <Boolean?>]: This policy controls whether to revoke the WIP keys when a device unenrolls from the management service. If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment. If the keys are not revoked, there will be no revoked file cleanup subsequently.
  [RightsManagementServicesTemplateId <String>]: TemplateID GUID to use for RMS encryption. The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access
  [SmbAutoEncryptedFileExtensions <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: Read-only.
  [DaysWithoutContactBeforeUnenroll <Int32?>]: Offline interval before app data is wiped (days)
  [MdmEnrollmentUrl <String>]: Enrollment url for the MDM
  [MinutesOfInactivityBeforeDeviceLock <Int32?>]: Specifies the maximum amount of time (in minutes) allowed after the device is idle that will cause the device to become PIN or password locked.   Range is an integer X where 0 <= X <= 999.
  [NumberOfPastPinsRemembered <Int32?>]: Integer value that specifies the number of past PINs that can be associated to a user account that can't be reused. The largest number you can configure for this policy setting is 50. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then storage of previous PINs is not required. This node was added in Windows 10, version 1511. Default is 0.
  [PasswordMaximumAttemptCount <Int32?>]: The number of authentication failures allowed before the device will be wiped. A value of 0 disables device wipe functionality. Range is an integer X where 4 <= X <= 16 for desktop and 0 <= X <= 999 for mobile devices.
  [PinExpirationDays <Int32?>]: Integer value specifies the period of time (in days) that a PIN can be used before the system requires the user to change it. The largest number you can configure for this policy setting is 730. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then the user's PIN will never expire. This node was added in Windows 10, version 1511. Default is 0.
  [PinLowercaseLetters <String>]: Pin Character Requirements
  [PinMinimumLength <Int32?>]: Integer value that sets the minimum number of characters required for the PIN. Default value is 4. The lowest number you can configure for this policy setting is 4. The largest number you can configure must be less than the number configured in the Maximum PIN length policy setting or the number 127, whichever is the lowest.
  [PinSpecialCharacters <String>]: Pin Character Requirements
  [PinUppercaseLetters <String>]: Pin Character Requirements
  [RevokeOnMdmHandoffDisabled <Boolean?>]: New property in RS2, pending documentation
  [WindowsHelloForBusinessBlocked <Boolean?>]: Boolean value that sets Windows Hello for Business as a method for signing into Windows.

DATARECOVERYCERTIFICATE <IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate>: Windows Information Protection DataRecoveryCertificate
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Certificate <Byte[]>]: Data recovery Certificate
  [Description <String>]: Data recovery Certificate description
  [ExpirationDateTime <DateTime?>]: Data recovery Certificate expiration datetime
  [SubjectName <String>]: Data recovery Certificate subject name

ENTERPRISEINTERNALPROXYSERVERS <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: This is the comma-separated list of internal proxy servers. For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'. These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

ENTERPRISEIPRANGES <IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]>: Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to
  [DisplayName <String>]: Display name
  [Ranges <IMicrosoftGraphIPRange[]>]: Collection of ip ranges

ENTERPRISENETWORKDOMAINNAMES <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

ENTERPRISEPROTECTEDDOMAINNAMES <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: List of enterprise domains to be protected
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

ENTERPRISEPROXIEDDOMAINS <IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]>: Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
  [DisplayName <String>]: Display name
  [ProxiedDomains <IMicrosoftGraphProxiedDomain[]>]: Collection of proxied domains
    [IPAddressOrFqdn <String>]: The IP address or FQDN
    [Proxy <String>]: Proxy IP or FQDN

ENTERPRISEPROXYSERVERS <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: This is a list of proxy servers. Any server not on this list is considered non-enterprise
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

EXEMPTAPPLOCKERFILES <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>: Another way to input exempt apps through xml files
  [Id <String>]: Read-only.
  [DisplayName <String>]: The friendly name
  [File <Byte[]>]: File as a byte array
  [FileHash <String>]: SHA256 hash of the file
  [Version <String>]: Version of the entity.

EXEMPTAPPS <IMicrosoftGraphWindowsInformationProtectionApp[]>: Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data.
  [Denied <Boolean?>]: If true, app is denied protection or exemption.
  [Description <String>]: The app's description.
  [DisplayName <String>]: App display name.
  [ProductName <String>]: The product name.
  [PublisherName <String>]: The publisher name

NEUTRALDOMAINRESOURCES <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: List of domain names that can used for work or personal resource
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

PROTECTEDAPPLOCKERFILES <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>: Another way to input protected apps through xml files
  [Id <String>]: Read-only.
  [DisplayName <String>]: The friendly name
  [File <Byte[]>]: File as a byte array
  [FileHash <String>]: SHA256 hash of the file
  [Version <String>]: Version of the entity.

PROTECTEDAPPS <IMicrosoftGraphWindowsInformationProtectionApp[]>: Protected applications can access enterprise data and the data handled by those applications are protected with encryption
  [Denied <Boolean?>]: If true, app is denied protection or exemption.
  [Description <String>]: The app's description.
  [DisplayName <String>]: App display name.
  [ProductName <String>]: The product name.
  [PublisherName <String>]: The publisher name

SMBAUTOENCRYPTEDFILEEXTENSIONS <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgdeviceappmgtwindowinformationprotectionpolicy
#>
function New-MgDeviceAppMgtWindowInformationProtectionPolicy {
[Alias('New-MgDeviceAppManagementWindowInformationProtectionPolicy')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionPolicy1])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionPolicy1]
    # Policy for Windows information protection without MDM
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]]
    # Navigation property to list of security groups targeted for policy.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Specifies whether to allow Azure RMS encryption for WIP
    ${AzureRightsManagementServicesAllowed},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate]
    # Windows Information Protection DataRecoveryCertificate
    # To construct, see NOTES section for DATARECOVERYCERTIFICATE properties and create a hash table.
    ${DataRecoveryCertificate},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Offline interval before app data is wiped (days)
    ${DaysWithoutContactBeforeUnenroll},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Possible values for WIP Protection enforcement levels
    ${EnforcementLevel},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Primary enterprise domain
    ${EnterpriseDomain},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]]
    # Sets the enterprise IP ranges that define the computers in the enterprise network.
    # Data that comes from those computers will be considered part of the enterprise and protected.
    # These locations will be considered a safe destination for enterprise data to be shared to
    # To construct, see NOTES section for ENTERPRISEIPRANGES properties and create a hash table.
    ${EnterpriseIPRanges},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets.
    # Default is false
    ${EnterpriseIPRangesAreAuthoritative},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # This is the comma-separated list of internal proxy servers.
    # For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'.
    # These proxies have been configured by the admin to connect to specific resources on the Internet.
    # They are considered to be enterprise network locations.
    # The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
    # To construct, see NOTES section for ENTERPRISEINTERNALPROXYSERVERS properties and create a hash table.
    ${EnterpriseInternalProxyServers},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # This is the list of domains that comprise the boundaries of the enterprise.
    # Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
    # To construct, see NOTES section for ENTERPRISENETWORKDOMAINNAMES properties and create a hash table.
    ${EnterpriseNetworkDomainNames},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # List of enterprise domains to be protected
    # To construct, see NOTES section for ENTERPRISEPROTECTEDDOMAINNAMES properties and create a hash table.
    ${EnterpriseProtectedDomainNames},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]]
    # Contains a list of Enterprise resource domains hosted in the cloud that need to be protected.
    # Connections to these resources are considered enterprise data.
    # If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80).
    # A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
    # To construct, see NOTES section for ENTERPRISEPROXIEDDOMAINS properties and create a hash table.
    ${EnterpriseProxiedDomains},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # This is a list of proxy servers.
    # Any server not on this list is considered non-enterprise
    # To construct, see NOTES section for ENTERPRISEPROXYSERVERS properties and create a hash table.
    ${EnterpriseProxyServers},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies.
    # Default is false
    ${EnterpriseProxyServersAreAuthoritative},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]]
    # Another way to input exempt apps through xml files
    # To construct, see NOTES section for EXEMPTAPPLOCKERFILES properties and create a hash table.
    ${ExemptAppLockerFiles},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionApp[]]
    # Exempt applications can also access enterprise data, but the data handled by those applications are not protected.
    # This is because some critical enterprise applications may have compatibility problems with encrypted data.
    # To construct, see NOTES section for EXEMPTAPPS properties and create a hash table.
    ${ExemptApps},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu.
    # Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app
    ${IconsVisible},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # This switch is for the Windows Search Indexer, to allow or disallow indexing of items
    ${IndexingEncryptedStoresOrItemsBlocked},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates if the policy is deployed to any inclusion groups or not.
    ${IsAssigned},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Enrollment url for the MDM
    ${MdmEnrollmentUrl},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Specifies the maximum amount of time (in minutes) allowed after the device is idle that will cause the device to become PIN or password locked.
    # Range is an integer X where 0 <= X <= 999.
    ${MinutesOfInactivityBeforeDeviceLock},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # List of domain names that can used for work or personal resource
    # To construct, see NOTES section for NEUTRALDOMAINRESOURCES properties and create a hash table.
    ${NeutralDomainResources},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Integer value that specifies the number of past PINs that can be associated to a user account that can't be reused.
    # The largest number you can configure for this policy setting is 50.
    # The lowest number you can configure for this policy setting is 0.
    # If this policy is set to 0, then storage of previous PINs is not required.
    # This node was added in Windows 10, version 1511.
    # Default is 0.
    ${NumberOfPastPinsRemembered},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # The number of authentication failures allowed before the device will be wiped.
    # A value of 0 disables device wipe functionality.
    # Range is an integer X where 4 <= X <= 16 for desktop and 0 <= X <= 999 for mobile devices.
    ${PasswordMaximumAttemptCount},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Integer value specifies the period of time (in days) that a PIN can be used before the system requires the user to change it.
    # The largest number you can configure for this policy setting is 730.
    # The lowest number you can configure for this policy setting is 0.
    # If this policy is set to 0, then the user's PIN will never expire.
    # This node was added in Windows 10, version 1511.
    # Default is 0.
    ${PinExpirationDays},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Pin Character Requirements
    ${PinLowercaseLetters},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Integer value that sets the minimum number of characters required for the PIN.
    # Default value is 4.
    # The lowest number you can configure for this policy setting is 4.
    # The largest number you can configure must be less than the number configured in the Maximum PIN length policy setting or the number 127, whichever is the lowest.
    ${PinMinimumLength},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Pin Character Requirements
    ${PinSpecialCharacters},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Pin Character Requirements
    ${PinUppercaseLetters},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]]
    # Another way to input protected apps through xml files
    # To construct, see NOTES section for PROTECTEDAPPLOCKERFILES properties and create a hash table.
    ${ProtectedAppLockerFiles},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionApp[]]
    # Protected applications can access enterprise data and the data handled by those applications are protected with encryption
    # To construct, see NOTES section for PROTECTEDAPPS properties and create a hash table.
    ${ProtectedApps},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured
    ${ProtectionUnderLockConfigRequired},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # New property in RS2, pending documentation
    ${RevokeOnMdmHandoffDisabled},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # This policy controls whether to revoke the WIP keys when a device unenrolls from the management service.
    # If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment.
    # If the keys are not revoked, there will be no revoked file cleanup subsequently.
    ${RevokeOnUnenrollDisabled},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # TemplateID GUID to use for RMS encryption.
    # The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access
    ${RightsManagementServicesTemplateId},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
    # To construct, see NOTES section for SMBAUTOENCRYPTEDFILEEXTENSIONS properties and create a hash table.
    ${SmbAutoEncryptedFileExtensions},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Boolean value that sets Windows Hello for Business as a method for signing into Windows.
    ${WindowsHelloForBusinessBlocked},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtWindowInformationProtectionPolicy_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgDeviceAppMgtWindowInformationProtectionPolicy_CreateExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of troubleshooting events for this user.
.Description
The list of troubleshooting events for this user.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceManagementTroubleshootingEvent1
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceManagementTroubleshootingEvent1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphDeviceManagementTroubleshootingEvent1>: Event representing an general failure.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [CorrelationId <String>]: Id used for tracing the failure in the service.
  [EventDateTime <DateTime?>]: Time when the event occurred .

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mguserdevicemanagementtroubleshootingevent
#>
function New-MgUserDeviceManagementTroubleshootingEvent {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceManagementTroubleshootingEvent1])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of user
    ${UserId},

    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceManagementTroubleshootingEvent1]
    # Event representing an general failure.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Id used for tracing the failure in the service.
    ${CorrelationId},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Time when the event occurred .
    ${EventDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserDeviceManagementTroubleshootingEvent_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserDeviceManagementTroubleshootingEvent_CreateExpanded1';
            CreateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserDeviceManagementTroubleshootingEvent_CreateViaIdentity1';
            CreateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserDeviceManagementTroubleshootingEvent_CreateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Zero or more managed app registrations that belong to the user.
.Description
Zero or more managed app registrations that belong to the user.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
System.Collections.Hashtable
.Outputs
Microsoft.Graph.PowerShell.Models.IPaths1Uxfgf2UsersUserIdManagedappregistrationsRefPostResponses201ContentApplicationJsonSchema
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgusermanagedappregistrationbyref
#>
function New-MgUserManagedAppRegistrationByRef {
[OutputType([Microsoft.Graph.PowerShell.Models.IPaths1Uxfgf2UsersUserIdManagedappregistrationsRefPostResponses201ContentApplicationJsonSchema])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of user
    ${UserId},

    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(Required, PossibleTypes=([Microsoft.Graph.PowerShell.Models.IPaths16Lfk5HUsersUserIdManagedappregistrationsRefPostRequestbodyContentApplicationJsonSchema]))]
    [System.Collections.Hashtable]
    # .
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedAppRegistrationByRef_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedAppRegistrationByRef_CreateExpanded1';
            CreateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedAppRegistrationByRef_CreateViaIdentity1';
            CreateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedAppRegistrationByRef_CreateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Device compliance policy states for this device.
.Description
Device compliance policy states for this device.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicyState1
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicyState1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphDeviceCompliancePolicyState1>: Device Compliance Policy State for a given device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [DisplayName <String>]: The name of the policy for this policyBase
  [PlatformType <String>]: Supported platform types for policies.
  [SettingCount <Int32?>]: Count of how many setting a policy holds
  [SettingStates <IMicrosoftGraphDeviceCompliancePolicySettingState1[]>]: 
    [CurrentValue <String>]: Current value of setting on device
    [ErrorCode <Int64?>]: Error code for the setting
    [ErrorDescription <String>]: Error description
    [InstanceDisplayName <String>]: Name of setting instance that is being reported.
    [Setting <String>]: The setting that is being reported
    [SettingName <String>]: Localized/user friendly setting name that is being reported
    [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
      [DisplayName <String>]: Not yet documented
      [Id <String>]: Not yet documented
      [SourceType <String>]: settingSourceType
    [State <String>]: complianceStatus
    [UserEmail <String>]: UserEmail
    [UserId <String>]: UserId
    [UserName <String>]: UserName
    [UserPrincipalName <String>]: UserPrincipalName.
  [State <String>]: complianceStatus
  [Version <Int32?>]: The version of the policy

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction

SETTINGSTATES <IMicrosoftGraphDeviceCompliancePolicySettingState1[]>: .
  [CurrentValue <String>]: Current value of setting on device
  [ErrorCode <Int64?>]: Error code for the setting
  [ErrorDescription <String>]: Error description
  [InstanceDisplayName <String>]: Name of setting instance that is being reported.
  [Setting <String>]: The setting that is being reported
  [SettingName <String>]: Localized/user friendly setting name that is being reported
  [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
    [DisplayName <String>]: Not yet documented
    [Id <String>]: Not yet documented
    [SourceType <String>]: settingSourceType
  [State <String>]: complianceStatus
  [UserEmail <String>]: UserEmail
  [UserId <String>]: UserId
  [UserName <String>]: UserName
  [UserPrincipalName <String>]: UserPrincipalName.
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgusermanageddevicecompliancepolicystate
#>
function New-MgUserManagedDeviceCompliancePolicyState {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicyState1])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Create1', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of user
    ${UserId},

    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicyState1]
    # Device Compliance Policy State for a given device.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The name of the policy for this policyBase
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Supported platform types for policies.
    ${PlatformType},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Count of how many setting a policy holds
    ${SettingCount},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicySettingState1[]]
    # .
    # To construct, see NOTES section for SETTINGSTATES properties and create a hash table.
    ${SettingStates},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # complianceStatus
    ${State},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # The version of the policy
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDeviceCompliancePolicyState_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDeviceCompliancePolicyState_CreateExpanded1';
            CreateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDeviceCompliancePolicyState_CreateViaIdentity1';
            CreateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDeviceCompliancePolicyState_CreateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Device configuration states for this device.
.Description
Device configuration states for this device.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationState1
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationState1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphDeviceConfigurationState1>: Device Configuration State for a given device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [DisplayName <String>]: The name of the policy for this policyBase
  [PlatformType <String>]: Supported platform types for policies.
  [SettingCount <Int32?>]: Count of how many setting a policy holds
  [SettingStates <IMicrosoftGraphDeviceConfigurationSettingState1[]>]: 
    [CurrentValue <String>]: Current value of setting on device
    [ErrorCode <Int64?>]: Error code for the setting
    [ErrorDescription <String>]: Error description
    [InstanceDisplayName <String>]: Name of setting instance that is being reported.
    [Setting <String>]: The setting that is being reported
    [SettingName <String>]: Localized/user friendly setting name that is being reported
    [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
      [DisplayName <String>]: Not yet documented
      [Id <String>]: Not yet documented
      [SourceType <String>]: settingSourceType
    [State <String>]: complianceStatus
    [UserEmail <String>]: UserEmail
    [UserId <String>]: UserId
    [UserName <String>]: UserName
    [UserPrincipalName <String>]: UserPrincipalName.
  [State <String>]: complianceStatus
  [Version <Int32?>]: The version of the policy

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction

SETTINGSTATES <IMicrosoftGraphDeviceConfigurationSettingState1[]>: .
  [CurrentValue <String>]: Current value of setting on device
  [ErrorCode <Int64?>]: Error code for the setting
  [ErrorDescription <String>]: Error description
  [InstanceDisplayName <String>]: Name of setting instance that is being reported.
  [Setting <String>]: The setting that is being reported
  [SettingName <String>]: Localized/user friendly setting name that is being reported
  [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
    [DisplayName <String>]: Not yet documented
    [Id <String>]: Not yet documented
    [SourceType <String>]: settingSourceType
  [State <String>]: complianceStatus
  [UserEmail <String>]: UserEmail
  [UserId <String>]: UserId
  [UserName <String>]: UserName
  [UserPrincipalName <String>]: UserPrincipalName.
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgusermanageddeviceconfigurationstate
#>
function New-MgUserManagedDeviceConfigurationState {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationState1])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Create1', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of user
    ${UserId},

    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationState1]
    # Device Configuration State for a given device.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The name of the policy for this policyBase
    ${DisplayName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Supported platform types for policies.
    ${PlatformType},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Count of how many setting a policy holds
    ${SettingCount},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationSettingState1[]]
    # .
    # To construct, see NOTES section for SETTINGSTATES properties and create a hash table.
    ${SettingStates},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # complianceStatus
    ${State},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # The version of the policy
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDeviceConfigurationState_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDeviceConfigurationState_CreateExpanded1';
            CreateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDeviceConfigurationState_CreateViaIdentity1';
            CreateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDeviceConfigurationState_CreateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The managed devices associated with the user.
.Description
The managed devices associated with the user.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDevice1
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDevice1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedDevice1>: Devices that are managed or pre-enrolled through Intune
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [ActivationLockBypassCode <String>]: Code that allows the Activation Lock on a device to be bypassed. This property is read-only.
  [AndroidSecurityPatchLevel <String>]: Android security patch level. This property is read-only.
  [AzureAdDeviceId <String>]: The unique identifier for the Azure Active Directory device. Read only. This property is read-only.
  [AzureAdRegistered <Boolean?>]: Whether the device is Azure Active Directory registered. This property is read-only.
  [ComplianceGracePeriodExpirationDateTime <DateTime?>]: The DateTime when device compliance grace period expires. This property is read-only.
  [ComplianceState <String>]: Compliance state.
  [ConfigurationManagerClientEnabledFeatures <IMicrosoftGraphConfigurationManagerClientEnabledFeatures1>]: configuration Manager client enabled features
    [(Any) <Object>]: This indicates any property can be added to this object.
    [CompliancePolicy <Boolean?>]: Whether compliance policy is managed by Intune
    [DeviceConfiguration <Boolean?>]: Whether device configuration is managed by Intune
    [Inventory <Boolean?>]: Whether inventory is managed by Intune
    [ModernApps <Boolean?>]: Whether modern application is managed by Intune
    [ResourceAccess <Boolean?>]: Whether resource access is managed by Intune
    [WindowsUpdateForBusiness <Boolean?>]: Whether Windows Update for Business is managed by Intune
  [DeviceActionResults <IMicrosoftGraphDeviceActionResult[]>]: List of ComplexType deviceActionResult objects. This property is read-only.
    [ActionName <String>]: Action name
    [ActionState <String>]: State of the action on the device
    [LastUpdatedDateTime <DateTime?>]: Time the action state was last updated
    [StartDateTime <DateTime?>]: Time the action was initiated
  [DeviceCategory <IMicrosoftGraphDeviceCategory2>]: Device categories provides a way to organize your devices. Using device categories, company administrators can define their own categories that make sense to their company. These categories can then be applied to a device in the Intune Azure console or selected by a user during device enrollment. You can filter reports and create dynamic Azure Active Directory device groups based on device categories.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: Read-only.
    [Description <String>]: Optional description for the device category.
    [DisplayName <String>]: Display name for the device category.
  [DeviceCategoryDisplayName <String>]: Device category display name. This property is read-only.
  [DeviceCompliancePolicyStates <IMicrosoftGraphDeviceCompliancePolicyState1[]>]: Device compliance policy states for this device.
    [Id <String>]: Read-only.
    [DisplayName <String>]: The name of the policy for this policyBase
    [PlatformType <String>]: Supported platform types for policies.
    [SettingCount <Int32?>]: Count of how many setting a policy holds
    [SettingStates <IMicrosoftGraphDeviceCompliancePolicySettingState1[]>]: 
      [CurrentValue <String>]: Current value of setting on device
      [ErrorCode <Int64?>]: Error code for the setting
      [ErrorDescription <String>]: Error description
      [InstanceDisplayName <String>]: Name of setting instance that is being reported.
      [Setting <String>]: The setting that is being reported
      [SettingName <String>]: Localized/user friendly setting name that is being reported
      [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
        [DisplayName <String>]: Not yet documented
        [Id <String>]: Not yet documented
        [SourceType <String>]: settingSourceType
      [State <String>]: complianceStatus
      [UserEmail <String>]: UserEmail
      [UserId <String>]: UserId
      [UserName <String>]: UserName
      [UserPrincipalName <String>]: UserPrincipalName.
    [State <String>]: complianceStatus
    [Version <Int32?>]: The version of the policy
  [DeviceConfigurationStates <IMicrosoftGraphDeviceConfigurationState1[]>]: Device configuration states for this device.
    [Id <String>]: Read-only.
    [DisplayName <String>]: The name of the policy for this policyBase
    [PlatformType <String>]: Supported platform types for policies.
    [SettingCount <Int32?>]: Count of how many setting a policy holds
    [SettingStates <IMicrosoftGraphDeviceConfigurationSettingState1[]>]: 
      [CurrentValue <String>]: Current value of setting on device
      [ErrorCode <Int64?>]: Error code for the setting
      [ErrorDescription <String>]: Error description
      [InstanceDisplayName <String>]: Name of setting instance that is being reported.
      [Setting <String>]: The setting that is being reported
      [SettingName <String>]: Localized/user friendly setting name that is being reported
      [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
      [State <String>]: complianceStatus
      [UserEmail <String>]: UserEmail
      [UserId <String>]: UserId
      [UserName <String>]: UserName
      [UserPrincipalName <String>]: UserPrincipalName.
    [State <String>]: complianceStatus
    [Version <Int32?>]: The version of the policy
  [DeviceEnrollmentType <String>]: Possible ways of adding a mobile device to management.
  [DeviceHealthAttestationState <IMicrosoftGraphDeviceHealthAttestationState>]: deviceHealthAttestationState
    [(Any) <Object>]: This indicates any property can be added to this object.
    [AttestationIdentityKey <String>]: TWhen an Attestation Identity Key (AIK) is present on a device, it indicates that the device has an endorsement key (EK) certificate.
    [BitLockerStatus <String>]: On or Off of BitLocker Drive Encryption
    [BootAppSecurityVersion <String>]: The security version number of the Boot Application
    [BootDebugging <String>]: When bootDebugging is enabled, the device is used in development and testing
    [BootManagerSecurityVersion <String>]: The security version number of the Boot Application
    [BootManagerVersion <String>]: The version of the Boot Manager
    [BootRevisionListInfo <String>]: The Boot Revision List that was loaded during initial boot on the attested device
    [CodeIntegrity <String>]: When code integrity is enabled, code execution is restricted to integrity verified code
    [CodeIntegrityCheckVersion <String>]: The version of the Boot Manager
    [CodeIntegrityPolicy <String>]: The Code Integrity policy that is controlling the security of the boot environment
    [ContentNamespaceUrl <String>]: The DHA report version. (Namespace version)
    [ContentVersion <String>]: The HealthAttestation state schema version
    [DataExcutionPolicy <String>]: DEP Policy defines a set of hardware and software technologies that perform additional checks on memory
    [DeviceHealthAttestationStatus <String>]: The DHA report version. (Namespace version)
    [EarlyLaunchAntiMalwareDriverProtection <String>]: ELAM provides protection for the computers in your network when they start up
    [HealthAttestationSupportedStatus <String>]: This attribute indicates if DHA is supported for the device
    [HealthStatusMismatchInfo <String>]: This attribute appears if DHA-Service detects an integrity issue
    [IssuedDateTime <DateTime?>]: The DateTime when device was evaluated or issued to MDM
    [LastUpdateDateTime <String>]: The Timestamp of the last update.
    [OperatingSystemKernelDebugging <String>]: When operatingSystemKernelDebugging is enabled, the device is used in development and testing
    [OperatingSystemRevListInfo <String>]: The Operating System Revision List that was loaded during initial boot on the attested device
    [Pcr0 <String>]: The measurement that is captured in PCR[0]
    [PcrHashAlgorithm <String>]: Informational attribute that identifies the HASH algorithm that was used by TPM
    [ResetCount <Int64?>]: The number of times a PC device has hibernated or resumed
    [RestartCount <Int64?>]: The number of times a PC device has rebooted
    [SafeMode <String>]: Safe mode is a troubleshooting option for Windows that starts your computer in a limited state
    [SecureBoot <String>]: When Secure Boot is enabled, the core components must have the correct cryptographic signatures
    [SecureBootConfigurationPolicyFingerPrint <String>]: Fingerprint of the Custom Secure Boot Configuration Policy
    [TestSigning <String>]: When test signing is allowed, the device does not enforce signature validation during boot
    [TpmVersion <String>]: The security version number of the Boot Application
    [VirtualSecureMode <String>]: VSM is a container that protects high value assets from a compromised kernel
    [WindowsPe <String>]: Operating system running with limited services that is used to prepare a computer for Windows
  [DeviceName <String>]: Name of the device. This property is read-only.
  [DeviceRegistrationState <String>]: Device registration status.
  [EasActivated <Boolean?>]: Whether the device is Exchange ActiveSync activated. This property is read-only.
  [EasActivationDateTime <DateTime?>]: Exchange ActivationSync activation time of the device. This property is read-only.
  [EasDeviceId <String>]: Exchange ActiveSync Id of the device. This property is read-only.
  [EmailAddress <String>]: Email(s) for the user associated with the device. This property is read-only.
  [EnrolledDateTime <DateTime?>]: Enrollment time of the device. This property is read-only.
  [EthernetMacAddress <String>]: Ethernet MAC. This property is read-only.
  [ExchangeAccessState <String>]: Device Exchange Access State.
  [ExchangeAccessStateReason <String>]: Device Exchange Access State Reason.
  [ExchangeLastSuccessfulSyncDateTime <DateTime?>]: Last time the device contacted Exchange. This property is read-only.
  [FreeStorageSpaceInBytes <Int64?>]: Free Storage in Bytes. This property is read-only.
  [Iccid <String>]: Integrated Circuit Card Identifier, it is A SIM card's unique identification number. This property is read-only.
  [Imei <String>]: IMEI. This property is read-only.
  [IsEncrypted <Boolean?>]: Device encryption status. This property is read-only.
  [IsSupervised <Boolean?>]: Device supervised status. This property is read-only.
  [JailBroken <String>]: whether the device is jail broken or rooted. This property is read-only.
  [LastSyncDateTime <DateTime?>]: The date and time that the device last completed a successful sync with Intune. This property is read-only.
  [ManagedDeviceName <String>]: Automatically generated name to identify a device. Can be overwritten to a user friendly name.
  [ManagedDeviceOwnerType <String>]: Owner type of device.
  [ManagementAgent <String>]: Management agent type.
  [Manufacturer <String>]: Manufacturer of the device. This property is read-only.
  [Meid <String>]: MEID. This property is read-only.
  [Model <String>]: Model of the device. This property is read-only.
  [Notes <String>]: Notes on the device created by IT Admin
  [OSVersion <String>]: Operating system version of the device. This property is read-only.
  [OperatingSystem <String>]: Operating system of the device. Windows, iOS, etc. This property is read-only.
  [PartnerReportedThreatState <String>]: Available health states for the Device Health API
  [PhoneNumber <String>]: Phone number of the device. This property is read-only.
  [PhysicalMemoryInBytes <Int64?>]: Total Memory in Bytes. This property is read-only.
  [RemoteAssistanceSessionErrorDetails <String>]: An error string that identifies issues when creating Remote Assistance session objects. This property is read-only.
  [RemoteAssistanceSessionUrl <String>]: Url that allows a Remote Assistance session to be established with the device. This property is read-only.
  [SerialNumber <String>]: SerialNumber. This property is read-only.
  [SubscriberCarrier <String>]: Subscriber Carrier. This property is read-only.
  [TotalStorageSpaceInBytes <Int64?>]: Total Storage in Bytes. This property is read-only.
  [Udid <String>]: Unique Device Identifier for iOS and macOS devices. This property is read-only.
  [UserDisplayName <String>]: User display name. This property is read-only.
  [UserId <String>]: Unique Identifier for the user associated with the device. This property is read-only.
  [UserPrincipalName <String>]: Device user principal name. This property is read-only.
  [WiFiMacAddress <String>]: Wi-Fi MAC. This property is read-only.

CONFIGURATIONMANAGERCLIENTENABLEDFEATURES <IMicrosoftGraphConfigurationManagerClientEnabledFeatures1>: configuration Manager client enabled features
  [(Any) <Object>]: This indicates any property can be added to this object.
  [CompliancePolicy <Boolean?>]: Whether compliance policy is managed by Intune
  [DeviceConfiguration <Boolean?>]: Whether device configuration is managed by Intune
  [Inventory <Boolean?>]: Whether inventory is managed by Intune
  [ModernApps <Boolean?>]: Whether modern application is managed by Intune
  [ResourceAccess <Boolean?>]: Whether resource access is managed by Intune
  [WindowsUpdateForBusiness <Boolean?>]: Whether Windows Update for Business is managed by Intune

DEVICEACTIONRESULTS <IMicrosoftGraphDeviceActionResult[]>: List of ComplexType deviceActionResult objects. This property is read-only.
  [ActionName <String>]: Action name
  [ActionState <String>]: State of the action on the device
  [LastUpdatedDateTime <DateTime?>]: Time the action state was last updated
  [StartDateTime <DateTime?>]: Time the action was initiated

DEVICECATEGORY <IMicrosoftGraphDeviceCategory2>: Device categories provides a way to organize your devices. Using device categories, company administrators can define their own categories that make sense to their company. These categories can then be applied to a device in the Intune Azure console or selected by a user during device enrollment. You can filter reports and create dynamic Azure Active Directory device groups based on device categories.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [Description <String>]: Optional description for the device category.
  [DisplayName <String>]: Display name for the device category.

DEVICECOMPLIANCEPOLICYSTATES <IMicrosoftGraphDeviceCompliancePolicyState1[]>: Device compliance policy states for this device.
  [Id <String>]: Read-only.
  [DisplayName <String>]: The name of the policy for this policyBase
  [PlatformType <String>]: Supported platform types for policies.
  [SettingCount <Int32?>]: Count of how many setting a policy holds
  [SettingStates <IMicrosoftGraphDeviceCompliancePolicySettingState1[]>]: 
    [CurrentValue <String>]: Current value of setting on device
    [ErrorCode <Int64?>]: Error code for the setting
    [ErrorDescription <String>]: Error description
    [InstanceDisplayName <String>]: Name of setting instance that is being reported.
    [Setting <String>]: The setting that is being reported
    [SettingName <String>]: Localized/user friendly setting name that is being reported
    [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
      [DisplayName <String>]: Not yet documented
      [Id <String>]: Not yet documented
      [SourceType <String>]: settingSourceType
    [State <String>]: complianceStatus
    [UserEmail <String>]: UserEmail
    [UserId <String>]: UserId
    [UserName <String>]: UserName
    [UserPrincipalName <String>]: UserPrincipalName.
  [State <String>]: complianceStatus
  [Version <Int32?>]: The version of the policy

DEVICECONFIGURATIONSTATES <IMicrosoftGraphDeviceConfigurationState1[]>: Device configuration states for this device.
  [Id <String>]: Read-only.
  [DisplayName <String>]: The name of the policy for this policyBase
  [PlatformType <String>]: Supported platform types for policies.
  [SettingCount <Int32?>]: Count of how many setting a policy holds
  [SettingStates <IMicrosoftGraphDeviceConfigurationSettingState1[]>]: 
    [CurrentValue <String>]: Current value of setting on device
    [ErrorCode <Int64?>]: Error code for the setting
    [ErrorDescription <String>]: Error description
    [InstanceDisplayName <String>]: Name of setting instance that is being reported.
    [Setting <String>]: The setting that is being reported
    [SettingName <String>]: Localized/user friendly setting name that is being reported
    [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
      [DisplayName <String>]: Not yet documented
      [Id <String>]: Not yet documented
      [SourceType <String>]: settingSourceType
    [State <String>]: complianceStatus
    [UserEmail <String>]: UserEmail
    [UserId <String>]: UserId
    [UserName <String>]: UserName
    [UserPrincipalName <String>]: UserPrincipalName.
  [State <String>]: complianceStatus
  [Version <Int32?>]: The version of the policy

DEVICEHEALTHATTESTATIONSTATE <IMicrosoftGraphDeviceHealthAttestationState>: deviceHealthAttestationState
  [(Any) <Object>]: This indicates any property can be added to this object.
  [AttestationIdentityKey <String>]: TWhen an Attestation Identity Key (AIK) is present on a device, it indicates that the device has an endorsement key (EK) certificate.
  [BitLockerStatus <String>]: On or Off of BitLocker Drive Encryption
  [BootAppSecurityVersion <String>]: The security version number of the Boot Application
  [BootDebugging <String>]: When bootDebugging is enabled, the device is used in development and testing
  [BootManagerSecurityVersion <String>]: The security version number of the Boot Application
  [BootManagerVersion <String>]: The version of the Boot Manager
  [BootRevisionListInfo <String>]: The Boot Revision List that was loaded during initial boot on the attested device
  [CodeIntegrity <String>]: When code integrity is enabled, code execution is restricted to integrity verified code
  [CodeIntegrityCheckVersion <String>]: The version of the Boot Manager
  [CodeIntegrityPolicy <String>]: The Code Integrity policy that is controlling the security of the boot environment
  [ContentNamespaceUrl <String>]: The DHA report version. (Namespace version)
  [ContentVersion <String>]: The HealthAttestation state schema version
  [DataExcutionPolicy <String>]: DEP Policy defines a set of hardware and software technologies that perform additional checks on memory
  [DeviceHealthAttestationStatus <String>]: The DHA report version. (Namespace version)
  [EarlyLaunchAntiMalwareDriverProtection <String>]: ELAM provides protection for the computers in your network when they start up
  [HealthAttestationSupportedStatus <String>]: This attribute indicates if DHA is supported for the device
  [HealthStatusMismatchInfo <String>]: This attribute appears if DHA-Service detects an integrity issue
  [IssuedDateTime <DateTime?>]: The DateTime when device was evaluated or issued to MDM
  [LastUpdateDateTime <String>]: The Timestamp of the last update.
  [OperatingSystemKernelDebugging <String>]: When operatingSystemKernelDebugging is enabled, the device is used in development and testing
  [OperatingSystemRevListInfo <String>]: The Operating System Revision List that was loaded during initial boot on the attested device
  [Pcr0 <String>]: The measurement that is captured in PCR[0]
  [PcrHashAlgorithm <String>]: Informational attribute that identifies the HASH algorithm that was used by TPM
  [ResetCount <Int64?>]: The number of times a PC device has hibernated or resumed
  [RestartCount <Int64?>]: The number of times a PC device has rebooted
  [SafeMode <String>]: Safe mode is a troubleshooting option for Windows that starts your computer in a limited state
  [SecureBoot <String>]: When Secure Boot is enabled, the core components must have the correct cryptographic signatures
  [SecureBootConfigurationPolicyFingerPrint <String>]: Fingerprint of the Custom Secure Boot Configuration Policy
  [TestSigning <String>]: When test signing is allowed, the device does not enforce signature validation during boot
  [TpmVersion <String>]: The security version number of the Boot Application
  [VirtualSecureMode <String>]: VSM is a container that protects high value assets from a compromised kernel
  [WindowsPe <String>]: Operating system running with limited services that is used to prepare a computer for Windows

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/new-mgusermanageddevice
#>
function New-MgUserManagedDevice {
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDevice1])]
[CmdletBinding(DefaultParameterSetName='CreateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Create1', Mandatory)]
    [Parameter(ParameterSetName='CreateExpanded1', Mandatory)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of user
    ${UserId},

    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Create1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='CreateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDevice1]
    # Devices that are managed or pre-enrolled through Intune
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Code that allows the Activation Lock on a device to be bypassed.
    # This property is read-only.
    ${ActivationLockBypassCode},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Android security patch level.
    # This property is read-only.
    ${AndroidSecurityPatchLevel},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique identifier for the Azure Active Directory device.
    # Read only.
    # This property is read-only.
    ${AzureAdDeviceId},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether the device is Azure Active Directory registered.
    # This property is read-only.
    ${AzureAdRegistered},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The DateTime when device compliance grace period expires.
    # This property is read-only.
    ${ComplianceGracePeriodExpirationDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Compliance state.
    ${ComplianceState},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphConfigurationManagerClientEnabledFeatures1]
    # configuration Manager client enabled features
    # To construct, see NOTES section for CONFIGURATIONMANAGERCLIENTENABLEDFEATURES properties and create a hash table.
    ${ConfigurationManagerClientEnabledFeatures},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceActionResult[]]
    # List of ComplexType deviceActionResult objects.
    # This property is read-only.
    # To construct, see NOTES section for DEVICEACTIONRESULTS properties and create a hash table.
    ${DeviceActionResults},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCategory2]
    # Device categories provides a way to organize your devices.
    # Using device categories, company administrators can define their own categories that make sense to their company.
    # These categories can then be applied to a device in the Intune Azure console or selected by a user during device enrollment.
    # You can filter reports and create dynamic Azure Active Directory device groups based on device categories.
    # To construct, see NOTES section for DEVICECATEGORY properties and create a hash table.
    ${DeviceCategory},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device category display name.
    # This property is read-only.
    ${DeviceCategoryDisplayName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicyState1[]]
    # Device compliance policy states for this device.
    # To construct, see NOTES section for DEVICECOMPLIANCEPOLICYSTATES properties and create a hash table.
    ${DeviceCompliancePolicyStates},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationState1[]]
    # Device configuration states for this device.
    # To construct, see NOTES section for DEVICECONFIGURATIONSTATES properties and create a hash table.
    ${DeviceConfigurationStates},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Possible ways of adding a mobile device to management.
    ${DeviceEnrollmentType},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceHealthAttestationState]
    # deviceHealthAttestationState
    # To construct, see NOTES section for DEVICEHEALTHATTESTATIONSTATE properties and create a hash table.
    ${DeviceHealthAttestationState},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Name of the device.
    # This property is read-only.
    ${DeviceName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device registration status.
    ${DeviceRegistrationState},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether the device is Exchange ActiveSync activated.
    # This property is read-only.
    ${EasActivated},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Exchange ActivationSync activation time of the device.
    # This property is read-only.
    ${EasActivationDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Exchange ActiveSync Id of the device.
    # This property is read-only.
    ${EasDeviceId},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Email(s) for the user associated with the device.
    # This property is read-only.
    ${EmailAddress},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Enrollment time of the device.
    # This property is read-only.
    ${EnrolledDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Ethernet MAC.
    # This property is read-only.
    ${EthernetMacAddress},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device Exchange Access State.
    ${ExchangeAccessState},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device Exchange Access State Reason.
    ${ExchangeAccessStateReason},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the device contacted Exchange.
    # This property is read-only.
    ${ExchangeLastSuccessfulSyncDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int64]
    # Free Storage in Bytes.
    # This property is read-only.
    ${FreeStorageSpaceInBytes},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Integrated Circuit Card Identifier, it is A SIM card's unique identification number.
    # This property is read-only.
    ${Iccid},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # IMEI.
    # This property is read-only.
    ${Imei},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Device encryption status.
    # This property is read-only.
    ${IsEncrypted},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Device supervised status.
    # This property is read-only.
    ${IsSupervised},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # whether the device is jail broken or rooted.
    # This property is read-only.
    ${JailBroken},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time that the device last completed a successful sync with Intune.
    # This property is read-only.
    ${LastSyncDateTime},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Automatically generated name to identify a device.
    # Can be overwritten to a user friendly name.
    ${ManagedDeviceName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Owner type of device.
    ${ManagedDeviceOwnerType},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Management agent type.
    ${ManagementAgent},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Manufacturer of the device.
    # This property is read-only.
    ${Manufacturer},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # MEID.
    # This property is read-only.
    ${Meid},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Model of the device.
    # This property is read-only.
    ${Model},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Notes on the device created by IT Admin
    ${Notes},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Operating system version of the device.
    # This property is read-only.
    ${OSVersion},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Operating system of the device.
    # Windows, iOS, etc.
    # This property is read-only.
    ${OperatingSystem},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Available health states for the Device Health API
    ${PartnerReportedThreatState},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Phone number of the device.
    # This property is read-only.
    ${PhoneNumber},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int64]
    # Total Memory in Bytes.
    # This property is read-only.
    ${PhysicalMemoryInBytes},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # An error string that identifies issues when creating Remote Assistance session objects.
    # This property is read-only.
    ${RemoteAssistanceSessionErrorDetails},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Url that allows a Remote Assistance session to be established with the device.
    # This property is read-only.
    ${RemoteAssistanceSessionUrl},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # SerialNumber.
    # This property is read-only.
    ${SerialNumber},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Subscriber Carrier.
    # This property is read-only.
    ${SubscriberCarrier},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int64]
    # Total Storage in Bytes.
    # This property is read-only.
    ${TotalStorageSpaceInBytes},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Unique Device Identifier for iOS and macOS devices.
    # This property is read-only.
    ${Udid},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # User display name.
    # This property is read-only.
    ${UserDisplayName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Unique Identifier for the user associated with the device.
    # This property is read-only.
    ${UserId1},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device user principal name.
    # This property is read-only.
    ${UserPrincipalName},

    [Parameter(ParameterSetName='CreateExpanded1')]
    [Parameter(ParameterSetName='CreateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Wi-Fi MAC.
    # This property is read-only.
    ${WiFiMacAddress},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Create1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDevice_Create1';
            CreateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDevice_CreateExpanded1';
            CreateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDevice_CreateViaIdentity1';
            CreateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\New-MgUserManagedDevice_CreateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of apps to which the policy is deployed.
.Description
List of apps to which the policy is deployed.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtandroidmanagedappprotectionapp
#>
function Remove-MgDeviceAppMgtAndroidManagedAppProtectionApp {
[Alias('Remove-MgDeviceAppManagementAndroidManagedAppProtectionApp')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedMobileApp
    ${ManagedMobileAppId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtAndroidManagedAppProtectionApp_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtAndroidManagedAppProtectionApp_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Navigation property to deployment summary of the configuration.
.Description
Navigation property to deployment summary of the configuration.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtandroidmanagedappprotectiondeploymentsummary
#>
function Remove-MgDeviceAppMgtAndroidManagedAppProtectionDeploymentSummary {
[Alias('Remove-MgDeviceAppManagementAndroidManagedAppProtectionDeploymentSummary')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtAndroidManagedAppProtectionDeploymentSummary_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtAndroidManagedAppProtectionDeploymentSummary_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Android managed app policies.
.Description
Android managed app policies.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtandroidmanagedappprotection
#>
function Remove-MgDeviceAppMgtAndroidManagedAppProtection {
[Alias('Remove-MgDeviceAppManagementAndroidManagedAppProtection')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtAndroidManagedAppProtection_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtAndroidManagedAppProtection_DeleteViaIdentity';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of apps to which the policy is deployed.
.Description
List of apps to which the policy is deployed.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtdefaultmanagedappprotectionapp
#>
function Remove-MgDeviceAppMgtDefaultManagedAppProtectionApp {
[Alias('Remove-MgDeviceAppManagementDefaultManagedAppProtectionApp')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of defaultManagedAppProtection
    ${DefaultManagedAppProtectionId},

    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedMobileApp
    ${ManagedMobileAppId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtDefaultManagedAppProtectionApp_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtDefaultManagedAppProtectionApp_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Navigation property to deployment summary of the configuration.
.Description
Navigation property to deployment summary of the configuration.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtdefaultmanagedappprotectiondeploymentsummary
#>
function Remove-MgDeviceAppMgtDefaultManagedAppProtectionDeploymentSummary {
[Alias('Remove-MgDeviceAppManagementDefaultManagedAppProtectionDeploymentSummary')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of defaultManagedAppProtection
    ${DefaultManagedAppProtectionId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtDefaultManagedAppProtectionDeploymentSummary_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtDefaultManagedAppProtectionDeploymentSummary_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Default managed app policies.
.Description
Default managed app policies.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtdefaultmanagedappprotection
#>
function Remove-MgDeviceAppMgtDefaultManagedAppProtection {
[Alias('Remove-MgDeviceAppManagementDefaultManagedAppProtection')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of defaultManagedAppProtection
    ${DefaultManagedAppProtectionId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtDefaultManagedAppProtection_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtDefaultManagedAppProtection_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of apps to which the policy is deployed.
.Description
List of apps to which the policy is deployed.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtiosmanagedappprotectionapp
#>
function Remove-MgDeviceAppMgtiOSManagedAppProtectionApp {
[Alias('Remove-MgDeviceAppManagementiOSManagedAppProtectionApp')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedMobileApp
    ${ManagedMobileAppId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtiOSManagedAppProtectionApp_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtiOSManagedAppProtectionApp_DeleteViaIdentity';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Navigation property to deployment summary of the configuration.
.Description
Navigation property to deployment summary of the configuration.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtiosmanagedappprotectiondeploymentsummary
#>
function Remove-MgDeviceAppMgtiOSManagedAppProtectionDeploymentSummary {
[Alias('Remove-MgDeviceAppManagementiOSManagedAppProtectionDeploymentSummary')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtiOSManagedAppProtectionDeploymentSummary_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtiOSManagedAppProtectionDeploymentSummary_DeleteViaIdentity';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
iOS managed app policies.
.Description
iOS managed app policies.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtiosmanagedappprotection
#>
function Remove-MgDeviceAppMgtiOSManagedAppProtection {
[Alias('Remove-MgDeviceAppManagementiOSManagedAppProtection')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtiOSManagedAppProtection_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtiOSManagedAppProtection_DeleteViaIdentity';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Managed app policies.
.Description
Managed app policies.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtmanagedapppolicy
#>
function Remove-MgDeviceAppMgtManagedAppPolicy {
[Alias('Remove-MgDeviceAppManagementManagedAppPolicy')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtManagedAppPolicy_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtManagedAppPolicy_DeleteViaIdentity';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Zero or more policys already applied on the registered app when it last synchronized with managment service.
.Description
Zero or more policys already applied on the registered app when it last synchronized with managment service.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtmanagedappregistrationappliedpolicy
#>
function Remove-MgDeviceAppMgtManagedAppRegistrationAppliedPolicy {
[Alias('Remove-MgDeviceAppManagementManagedAppRegistrationAppliedPolicy')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtManagedAppRegistrationAppliedPolicy_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtManagedAppRegistrationAppliedPolicy_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Zero or more policies admin intended for the app as of now.
.Description
Zero or more policies admin intended for the app as of now.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtmanagedappregistrationintendedpolicy
#>
function Remove-MgDeviceAppMgtManagedAppRegistrationIntendedPolicy {
[Alias('Remove-MgDeviceAppManagementManagedAppRegistrationIntendedPolicy')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtManagedAppRegistrationIntendedPolicy_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtManagedAppRegistrationIntendedPolicy_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Zero or more long running operations triggered on the app registration.
.Description
Zero or more long running operations triggered on the app registration.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtmanagedappregistrationoperation
#>
function Remove-MgDeviceAppMgtManagedAppRegistrationOperation {
[Alias('Remove-MgDeviceAppManagementManagedAppRegistrationOperation')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppOperation
    ${ManagedAppOperationId},

    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtManagedAppRegistrationOperation_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtManagedAppRegistrationOperation_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The managed app registrations.
.Description
The managed app registrations.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtmanagedappregistration
#>
function Remove-MgDeviceAppMgtManagedAppRegistration {
[Alias('Remove-MgDeviceAppManagementManagedAppRegistration')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='DeleteViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtManagedAppRegistration_Delete';
            DeleteViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtManagedAppRegistration_DeleteViaIdentity';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The managed app statuses.
.Description
The managed app statuses.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtmanagedappstatuses
#>
function Remove-MgDeviceAppMgtManagedAppStatuses {
[Alias('Remove-MgDeviceAppManagementManagedAppStatuses')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppStatus
    ${ManagedAppStatusId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtManagedAppStatuses_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtManagedAppStatuses_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of assignments for this eBook.
.Description
The list of assignments for this eBook.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtmanagedebookassignment
#>
function Remove-MgDeviceAppMgtManagedEBookAssignment {
[Alias('Remove-MgDeviceAppManagementManagedEBookAssignment')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBookAssignment
    ${ManagedEBookAssignmentId},

    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtManagedEBookAssignment_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtManagedEBookAssignment_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of installation states for this eBook.
.Description
The list of installation states for this eBook.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtmanagedebookdevicestate
#>
function Remove-MgDeviceAppMgtManagedEBookDeviceState {
[Alias('Remove-MgDeviceAppManagementManagedEBookDeviceState')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of deviceInstallState
    ${DeviceInstallStateId},

    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtManagedEBookDeviceState_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtManagedEBookDeviceState_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Mobile App Install Summary.
.Description
Mobile App Install Summary.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtmanagedebookinstallsummary
#>
function Remove-MgDeviceAppMgtManagedEBookInstallSummary {
[Alias('Remove-MgDeviceAppManagementManagedEBookInstallSummary')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtManagedEBookInstallSummary_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtManagedEBookInstallSummary_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The install state of the eBook.
.Description
The install state of the eBook.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtmanagedebookuserstatesummarydevicestate
#>
function Remove-MgDeviceAppMgtManagedEBookUserStateSummaryDeviceState {
[Alias('Remove-MgDeviceAppManagementManagedEBookUserStateSummaryDeviceState')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of deviceInstallState
    ${DeviceInstallStateId},

    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of userInstallStateSummary
    ${UserInstallStateSummaryId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtManagedEBookUserStateSummaryDeviceState_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtManagedEBookUserStateSummaryDeviceState_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of installation states for this eBook.
.Description
The list of installation states for this eBook.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtmanagedebookuserstatesummary
#>
function Remove-MgDeviceAppMgtManagedEBookUserStateSummary {
[Alias('Remove-MgDeviceAppManagementManagedEBookUserStateSummary')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of userInstallStateSummary
    ${UserInstallStateSummaryId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtManagedEBookUserStateSummary_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtManagedEBookUserStateSummary_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The Managed eBook.
.Description
The Managed eBook.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtmanagedebook
#>
function Remove-MgDeviceAppMgtManagedEBook {
[Alias('Remove-MgDeviceAppManagementManagedEBook')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtManagedEBook_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtManagedEBook_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Windows information protection for apps running on devices which are MDM enrolled.
.Description
Windows information protection for apps running on devices which are MDM enrolled.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtmdmwindowinformationprotectionpolicy
#>
function Remove-MgDeviceAppMgtMdmWindowInformationProtectionPolicy {
[Alias('Remove-MgDeviceAppManagementMdmWindowInformationProtectionPolicy')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of mdmWindowsInformationProtectionPolicy
    ${MdmWindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtMdmWindowInformationProtectionPolicy_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtMdmWindowInformationProtectionPolicy_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of group assignments for this mobile app.
.Description
The list of group assignments for this mobile app.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtmobileappassignment
#>
function Remove-MgDeviceAppMgtMobileAppAssignment {
[Alias('Remove-MgDeviceAppManagementMobileAppAssignment')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of mobileAppAssignment
    ${MobileAppAssignmentId},

    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of mobileApp
    ${MobileAppId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtMobileAppAssignment_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtMobileAppAssignment_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The mobile app categories.
.Description
The mobile app categories.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtmobileappcategory
#>
function Remove-MgDeviceAppMgtMobileAppCategory {
[Alias('Remove-MgDeviceAppManagementMobileAppCategory')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of mobileAppCategory
    ${MobileAppCategoryId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtMobileAppCategory_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtMobileAppCategory_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of group assignemenets for app configration.
.Description
The list of group assignemenets for app configration.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtmobileappconfigurationassignment
#>
function Remove-MgDeviceAppMgtMobileAppConfigurationAssignment {
[Alias('Remove-MgDeviceAppManagementMobileAppConfigurationAssignment')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfigurationAssignment
    ${ManagedDeviceMobileAppConfigurationAssignmentId},

    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtMobileAppConfigurationAssignment_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtMobileAppConfigurationAssignment_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of ManagedDeviceMobileAppConfigurationDeviceStatus.
.Description
List of ManagedDeviceMobileAppConfigurationDeviceStatus.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtmobileappconfigurationdevicestatuses
#>
function Remove-MgDeviceAppMgtMobileAppConfigurationDeviceStatuses {
[Alias('Remove-MgDeviceAppManagementMobileAppConfigurationDeviceStatuses')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfigurationDeviceStatus
    ${ManagedDeviceMobileAppConfigurationDeviceStatusId},

    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtMobileAppConfigurationDeviceStatuses_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtMobileAppConfigurationDeviceStatuses_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
App configuration device status summary.
.Description
App configuration device status summary.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtmobileappconfigurationdevicestatussummary
#>
function Remove-MgDeviceAppMgtMobileAppConfigurationDeviceStatusSummary {
[Alias('Remove-MgDeviceAppManagementMobileAppConfigurationDeviceStatusSummary')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtMobileAppConfigurationDeviceStatusSummary_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtMobileAppConfigurationDeviceStatusSummary_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of ManagedDeviceMobileAppConfigurationUserStatus.
.Description
List of ManagedDeviceMobileAppConfigurationUserStatus.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtmobileappconfigurationuserstatuses
#>
function Remove-MgDeviceAppMgtMobileAppConfigurationUserStatuses {
[Alias('Remove-MgDeviceAppManagementMobileAppConfigurationUserStatuses')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfigurationUserStatus
    ${ManagedDeviceMobileAppConfigurationUserStatusId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtMobileAppConfigurationUserStatuses_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtMobileAppConfigurationUserStatuses_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
App configuration user status summary.
.Description
App configuration user status summary.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtmobileappconfigurationuserstatussummary
#>
function Remove-MgDeviceAppMgtMobileAppConfigurationUserStatusSummary {
[Alias('Remove-MgDeviceAppManagementMobileAppConfigurationUserStatusSummary')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtMobileAppConfigurationUserStatusSummary_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtMobileAppConfigurationUserStatusSummary_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The Managed Device Mobile Application Configurations.
.Description
The Managed Device Mobile Application Configurations.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtmobileappconfiguration
#>
function Remove-MgDeviceAppMgtMobileAppConfiguration {
[Alias('Remove-MgDeviceAppManagementMobileAppConfiguration')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtMobileAppConfiguration_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtMobileAppConfiguration_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The mobile apps.
.Description
The mobile apps.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtmobileapp
#>
function Remove-MgDeviceAppMgtMobileApp {
[Alias('Remove-MgDeviceAppManagementMobileApp')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of mobileApp
    ${MobileAppId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtMobileApp_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtMobileApp_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of apps to which the policy is deployed.
.Description
List of apps to which the policy is deployed.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgttargetedmanagedappconfigurationapp
#>
function Remove-MgDeviceAppMgtTargetedManagedAppConfigurationApp {
[Alias('Remove-MgDeviceAppManagementTargetedManagedAppConfigurationApp')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedMobileApp
    ${ManagedMobileAppId},

    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtTargetedManagedAppConfigurationApp_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtTargetedManagedAppConfigurationApp_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
.Description
Navigation property to list of inclusion and exclusion groups to which the policy is deployed.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgttargetedmanagedappconfigurationassignment
#>
function Remove-MgDeviceAppMgtTargetedManagedAppConfigurationAssignment {
[Alias('Remove-MgDeviceAppManagementTargetedManagedAppConfigurationAssignment')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of targetedManagedAppPolicyAssignment
    ${TargetedManagedAppPolicyAssignmentId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtTargetedManagedAppConfigurationAssignment_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtTargetedManagedAppConfigurationAssignment_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Navigation property to deployment summary of the configuration.
.Description
Navigation property to deployment summary of the configuration.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgttargetedmanagedappconfigurationdeploymentsummary
#>
function Remove-MgDeviceAppMgtTargetedManagedAppConfigurationDeploymentSummary {
[Alias('Remove-MgDeviceAppManagementTargetedManagedAppConfigurationDeploymentSummary')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtTargetedManagedAppConfigurationDeploymentSummary_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtTargetedManagedAppConfigurationDeploymentSummary_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Targeted managed app configurations.
.Description
Targeted managed app configurations.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgttargetedmanagedappconfiguration
#>
function Remove-MgDeviceAppMgtTargetedManagedAppConfiguration {
[Alias('Remove-MgDeviceAppManagementTargetedManagedAppConfiguration')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtTargetedManagedAppConfiguration_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtTargetedManagedAppConfiguration_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of Vpp tokens for this organization.
.Description
List of Vpp tokens for this organization.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtvpptoken
#>
function Remove-MgDeviceAppMgtVppToken {
[Alias('Remove-MgDeviceAppManagementVppToken')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of vppToken
    ${VppTokenId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtVppToken_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtVppToken_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Windows information protection for apps running on devices which are not MDM enrolled.
.Description
Windows information protection for apps running on devices which are not MDM enrolled.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgdeviceappmgtwindowinformationprotectionpolicy
#>
function Remove-MgDeviceAppMgtWindowInformationProtectionPolicy {
[Alias('Remove-MgDeviceAppManagementWindowInformationProtectionPolicy')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of windowsInformationProtectionPolicy
    ${WindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtWindowInformationProtectionPolicy_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgDeviceAppMgtWindowInformationProtectionPolicy_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of troubleshooting events for this user.
.Description
The list of troubleshooting events for this user.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mguserdevicemanagementtroubleshootingevent
#>
function Remove-MgUserDeviceManagementTroubleshootingEvent {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of deviceManagementTroubleshootingEvent
    ${DeviceManagementTroubleshootingEventId},

    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of user
    ${UserId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserDeviceManagementTroubleshootingEvent_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserDeviceManagementTroubleshootingEvent_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Device category
.Description
Device category

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgusermanageddevicecategory
#>
function Remove-MgUserManagedDeviceCategory {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of user
    ${UserId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserManagedDeviceCategory_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserManagedDeviceCategory_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Device compliance policy states for this device.
.Description
Device compliance policy states for this device.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgusermanageddevicecompliancepolicystate
#>
function Remove-MgUserManagedDeviceCompliancePolicyState {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of deviceCompliancePolicyState
    ${DeviceCompliancePolicyStateId},

    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of user
    ${UserId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserManagedDeviceCompliancePolicyState_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserManagedDeviceCompliancePolicyState_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Device configuration states for this device.
.Description
Device configuration states for this device.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgusermanageddeviceconfigurationstate
#>
function Remove-MgUserManagedDeviceConfigurationState {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of deviceConfigurationState
    ${DeviceConfigurationStateId},

    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of user
    ${UserId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserManagedDeviceConfigurationState_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserManagedDeviceConfigurationState_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The managed devices associated with the user.
.Description
The managed devices associated with the user.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/remove-mgusermanageddevice
#>
function Remove-MgUserManagedDevice {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Delete1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Delete1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of user
    ${UserId},

    [Parameter(ParameterSetName='DeleteViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Header')]
    [System.String]
    # ETag
    ${IfMatch},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Delete1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserManagedDevice_Delete1';
            DeleteViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Remove-MgUserManagedDevice_DeleteViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Invoke action assign
.Description
Invoke action assign

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IPathsM351C6DeviceappmanagementManagedapppoliciesManagedapppolicyIdMicrosoftGraphTargetedmanagedappprotectionMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>: .
  [Id <String>]: Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IPathsM351C6DeviceappmanagementManagedapppoliciesManagedapppolicyIdMicrosoftGraphTargetedmanagedappprotectionMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema1>: .
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>]: 
    [Id <String>]: Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/set-mgdeviceappmgtmanagedapppolicymicrosoftgraphtargetedmanagedappprotection
#>
function Set-MgDeviceAppMgtManagedAppPolicyMicrosoftGraphTargetedManagedAppProtection {
[Alias('Set-MgDeviceAppManagementManagedAppPolicyMicrosoftGraphTargetedManagedAppProtection')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='AssignExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Assign', Mandatory)]
    [Parameter(ParameterSetName='AssignExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='AssignViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Assign', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='AssignViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IPathsM351C6DeviceappmanagementManagedapppoliciesManagedapppolicyIdMicrosoftGraphTargetedmanagedappprotectionMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema1]
    # .
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='AssignExpanded')]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='AssignExpanded')]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]]
    # .
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Assign = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppMgtManagedAppPolicyMicrosoftGraphTargetedManagedAppProtection_Assign';
            AssignExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppMgtManagedAppPolicyMicrosoftGraphTargetedManagedAppProtection_AssignExpanded';
            AssignViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppMgtManagedAppPolicyMicrosoftGraphTargetedManagedAppProtection_AssignViaIdentity';
            AssignViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppMgtManagedAppPolicyMicrosoftGraphTargetedManagedAppProtection_AssignViaIdentityExpanded';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Invoke action assign
.Description
Invoke action assign

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IPaths1S2J8MaDeviceappmanagementManagedapppoliciesManagedapppolicyIdMicrosoftGraphWindowsinformationprotectionMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>: .
  [Id <String>]: Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IPaths1S2J8MaDeviceappmanagementManagedapppoliciesManagedapppolicyIdMicrosoftGraphWindowsinformationprotectionMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema1>: .
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>]: 
    [Id <String>]: Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/set-mgdeviceappmgtmanagedapppolicymicrosoftgraphwindowinformationprotection
#>
function Set-MgDeviceAppMgtManagedAppPolicyMicrosoftGraphWindowInformationProtection {
[Alias('Set-MgDeviceAppManagementManagedAppPolicyMicrosoftGraphWindowInformationProtection')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='AssignExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Assign', Mandatory)]
    [Parameter(ParameterSetName='AssignExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='AssignViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Assign', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='AssignViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IPaths1S2J8MaDeviceappmanagementManagedapppoliciesManagedapppolicyIdMicrosoftGraphWindowsinformationprotectionMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema1]
    # .
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='AssignExpanded')]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='AssignExpanded')]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]]
    # .
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Assign = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppMgtManagedAppPolicyMicrosoftGraphWindowInformationProtection_Assign';
            AssignExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppMgtManagedAppPolicyMicrosoftGraphWindowInformationProtection_AssignExpanded';
            AssignViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppMgtManagedAppPolicyMicrosoftGraphWindowInformationProtection_AssignViaIdentity';
            AssignViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppMgtManagedAppPolicyMicrosoftGraphWindowInformationProtection_AssignViaIdentityExpanded';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Invoke action assign
.Description
Invoke action assign

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IPathsWfdti0DeviceappmanagementManagedebooksManagedebookIdMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IPathsWfdti0DeviceappmanagementManagedebooksManagedebookIdMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema1>: .
  [(Any) <Object>]: This indicates any property can be added to this object.
  [ManagedEBookAssignments <IMicrosoftGraphManagedEBookAssignment1[]>]: 
    [Id <String>]: Read-only.
    [InstallIntent <String>]: Possible values for the install intent chosen by the admin.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction

MANAGEDEBOOKASSIGNMENTS <IMicrosoftGraphManagedEBookAssignment1[]>: .
  [Id <String>]: Read-only.
  [InstallIntent <String>]: Possible values for the install intent chosen by the admin.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/set-mgdeviceappmgtmanagedebook
#>
function Set-MgDeviceAppMgtManagedEBook {
[Alias('Set-MgDeviceAppManagementManagedEBook')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='AssignExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Assign1', Mandatory)]
    [Parameter(ParameterSetName='AssignExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='AssignViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Assign1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='AssignViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IPathsWfdti0DeviceappmanagementManagedebooksManagedebookIdMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema1]
    # .
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='AssignExpanded1')]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='AssignExpanded1')]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBookAssignment1[]]
    # .
    # To construct, see NOTES section for MANAGEDEBOOKASSIGNMENTS properties and create a hash table.
    ${ManagedEBookAssignments},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Assign1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppMgtManagedEBook_Assign1';
            AssignExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppMgtManagedEBook_AssignExpanded1';
            AssignViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppMgtManagedEBook_AssignViaIdentity1';
            AssignViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppMgtManagedEBook_AssignViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Invoke action assign
.Description
Invoke action assign

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IPaths1Pwcjs5DeviceappmanagementMobileappconfigurationsManageddevicemobileappconfigurationIdMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment1[]>: .
  [Id <String>]: Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IPaths1Pwcjs5DeviceappmanagementMobileappconfigurationsManageddevicemobileappconfigurationIdMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema>: .
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Assignments <IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment1[]>]: 
    [Id <String>]: Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/set-mgdeviceappmgtmobileappconfiguration
#>
function Set-MgDeviceAppMgtMobileAppConfiguration {
[Alias('Set-MgDeviceAppManagementMobileAppConfiguration')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='AssignExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Assign1', Mandatory)]
    [Parameter(ParameterSetName='AssignExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='AssignViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Assign1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='AssignViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IPaths1Pwcjs5DeviceappmanagementMobileappconfigurationsManageddevicemobileappconfigurationIdMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema]
    # .
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='AssignExpanded1')]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='AssignExpanded1')]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment1[]]
    # .
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Assign1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppMgtMobileAppConfiguration_Assign1';
            AssignExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppMgtMobileAppConfiguration_AssignExpanded1';
            AssignViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppMgtMobileAppConfiguration_AssignViaIdentity1';
            AssignViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppMgtMobileAppConfiguration_AssignViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Invoke action assign
.Description
Invoke action assign

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IPaths12NzrcrDeviceappmanagementMobileappsMobileappIdMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IPaths12NzrcrDeviceappmanagementMobileappsMobileappIdMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema>: .
  [(Any) <Object>]: This indicates any property can be added to this object.
  [MobileAppAssignments <IMicrosoftGraphMobileAppAssignment1[]>]: 
    [Id <String>]: Read-only.
    [Intent <String>]: Possible values for the install intent chosen by the admin.
    [Settings <IMicrosoftGraphMobileAppAssignmentSettings>]: Abstract class to contain properties used to assign a mobile app to a group.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction

MOBILEAPPASSIGNMENTS <IMicrosoftGraphMobileAppAssignment1[]>: .
  [Id <String>]: Read-only.
  [Intent <String>]: Possible values for the install intent chosen by the admin.
  [Settings <IMicrosoftGraphMobileAppAssignmentSettings>]: Abstract class to contain properties used to assign a mobile app to a group.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/set-mgdeviceappmgtmobileapp
#>
function Set-MgDeviceAppMgtMobileApp {
[Alias('Set-MgDeviceAppManagementMobileApp')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='AssignExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Assign1', Mandatory)]
    [Parameter(ParameterSetName='AssignExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of mobileApp
    ${MobileAppId},

    [Parameter(ParameterSetName='AssignViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Assign1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='AssignViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IPaths12NzrcrDeviceappmanagementMobileappsMobileappIdMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema]
    # .
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='AssignExpanded1')]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='AssignExpanded1')]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignment1[]]
    # .
    # To construct, see NOTES section for MOBILEAPPASSIGNMENTS properties and create a hash table.
    ${MobileAppAssignments},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Assign1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppMgtMobileApp_Assign1';
            AssignExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppMgtMobileApp_AssignExpanded1';
            AssignViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppMgtMobileApp_AssignViaIdentity1';
            AssignViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppMgtMobileApp_AssignViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Invoke action assign
.Description
Invoke action assign

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IPathsZxn05FDeviceappmanagementTargetedmanagedappconfigurationsTargetedmanagedappconfigurationIdMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>: .
  [Id <String>]: Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IPathsZxn05FDeviceappmanagementTargetedmanagedappconfigurationsTargetedmanagedappconfigurationIdMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema1>: .
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>]: 
    [Id <String>]: Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/set-mgdeviceappmgttargetedmanagedappconfiguration
#>
function Set-MgDeviceAppMgtTargetedManagedAppConfiguration {
[Alias('Set-MgDeviceAppManagementTargetedManagedAppConfiguration')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='AssignExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Assign1', Mandatory)]
    [Parameter(ParameterSetName='AssignExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='AssignViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Assign1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='AssignViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IPathsZxn05FDeviceappmanagementTargetedmanagedappconfigurationsTargetedmanagedappconfigurationIdMicrosoftGraphAssignPostRequestbodyContentApplicationJsonSchema1]
    # .
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='AssignExpanded1')]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='AssignExpanded1')]
    [Parameter(ParameterSetName='AssignViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]]
    # .
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Assign1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppMgtTargetedManagedAppConfiguration_Assign1';
            AssignExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppMgtTargetedManagedAppConfiguration_AssignExpanded1';
            AssignViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppMgtTargetedManagedAppConfiguration_AssignViaIdentity1';
            AssignViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Set-MgDeviceAppMgtTargetedManagedAppConfiguration_AssignViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Syncs Intune account with Microsoft Store For Business
.Description
Syncs Intune account with Microsoft Store For Business

.Outputs
System.Boolean
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/sync-mgdeviceappmgtmicrosoftstore
#>
function Sync-MgDeviceAppMgtMicrosoftStore {
[Alias('Sync-MgDeviceAppManagementMicrosoftStore')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='Sync1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Sync1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Sync-MgDeviceAppMgtMicrosoftStore_Sync1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Syncs licenses associated with a specific appleVolumePurchaseProgramToken
.Description
Syncs licenses associated with a specific appleVolumePurchaseProgramToken

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Outputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphVppToken1
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/sync-mgdeviceappmgtvpptokenlicense
#>
function Sync-MgDeviceAppMgtVppTokenLicense {
[Alias('Sync-MgDeviceAppManagementVppTokenLicense')]
[OutputType([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphVppToken1])]
[CmdletBinding(DefaultParameterSetName='Sync1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Sync1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of vppToken
    ${VppTokenId},

    [Parameter(ParameterSetName='SyncViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Sync1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Sync-MgDeviceAppMgtVppTokenLicense_Sync1';
            SyncViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Sync-MgDeviceAppMgtVppTokenLicense_SyncViaIdentity1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of apps to which the policy is deployed.
.Description
List of apps to which the policy is deployed.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedMobileApp>: The identifier for the deployment an app.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtandroidmanagedappprotectionapp
#>
function Update-MgDeviceAppMgtAndroidManagedAppProtectionApp {
[Alias('Update-MgDeviceAppManagementAndroidManagedAppProtectionApp')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedMobileApp
    ${ManagedMobileAppId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp]
    # The identifier for the deployment an app.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppIdentifier]))]
    [System.Collections.Hashtable]
    # The identifier for a mobile app.
    ${MobileAppIdentifier},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtAndroidManagedAppProtectionApp_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtAndroidManagedAppProtectionApp_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtAndroidManagedAppProtectionApp_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtAndroidManagedAppProtectionApp_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Navigation property to deployment summary of the configuration.
.Description
Navigation property to deployment summary of the configuration.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppPolicyDeploymentSummary>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
  [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
    [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DisplayName <String>]: Not yet documented
  [LastRefreshTime <DateTime?>]: Not yet documented
  [Version <String>]: Version of the entity.

CONFIGURATIONDEPLOYMENTSUMMARYPERAPP <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>: Not yet documented
  [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtandroidmanagedappprotectiondeploymentsummary
#>
function Update-MgDeviceAppMgtAndroidManagedAppProtectionDeploymentSummary {
[Alias('Update-MgDeviceAppManagementAndroidManagedAppProtectionDeploymentSummary')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Not yet documented
    ${ConfigurationDeployedUserCount},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]]
    # Not yet documented
    # To construct, see NOTES section for CONFIGURATIONDEPLOYMENTSUMMARYPERAPP properties and create a hash table.
    ${ConfigurationDeploymentSummaryPerApp},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Not yet documented
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Not yet documented
    ${LastRefreshTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtAndroidManagedAppProtectionDeploymentSummary_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtAndroidManagedAppProtectionDeploymentSummary_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtAndroidManagedAppProtectionDeploymentSummary_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtAndroidManagedAppProtectionDeploymentSummary_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Android managed app policies.
.Description
Android managed app policies.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphAndroidManagedAppProtection1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: List of apps to which the policy is deployed.
  [Id <String>]: Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

ASSIGNMENTS <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
  [Id <String>]: Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphAndroidManagedAppProtection1>: Policy used to configure detailed management settings targeted to specific security groups and for a specified set of apps on an Android device
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>]: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    [Id <String>]: Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
  [AllowedDataStorageLocations <String[]>]: Data storage locations where a user may store managed data.
  [AllowedInboundDataTransferSources <String>]: Data can be transferred from/to these classes of apps
  [AllowedOutboundClipboardSharingLevel <String>]: Represents the level to which the device's clipboard may be shared between apps
  [AllowedOutboundDataTransferDestinations <String>]: Data can be transferred from/to these classes of apps
  [ContactSyncBlocked <Boolean?>]: Indicates whether contacts can be synced to the user's device.
  [DataBackupBlocked <Boolean?>]: Indicates whether the backup of a managed app's data is blocked.
  [DeviceComplianceRequired <Boolean?>]: Indicates whether device compliance is required.
  [DisableAppPinIfDevicePinIsSet <Boolean?>]: Indicates whether use of the app pin is required if the device pin is set.
  [FingerprintBlocked <Boolean?>]: Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
  [ManagedBrowser <String>]: Type of managed browser
  [ManagedBrowserToOpenLinksRequired <Boolean?>]: Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
  [MaximumPinRetries <Int32?>]: Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
  [MinimumPinLength <Int32?>]: Minimum pin length required for an app-level pin if PinRequired is set to True
  [MinimumRequiredAppVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumRequiredOSVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumWarningAppVersion <String>]: Versions less than the specified version will result in warning message on the managed app.
  [MinimumWarningOSVersion <String>]: Versions less than the specified version will result in warning message on the managed app from accessing company data.
  [OrganizationalCredentialsRequired <Boolean?>]: Indicates whether organizational credentials are required for app use.
  [PeriodBeforePinReset <TimeSpan?>]: TimePeriod before the all-level pin must be reset if PinRequired is set to True.
  [PeriodOfflineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is not connected to the internet.
  [PeriodOfflineBeforeWipeIsEnforced <TimeSpan?>]: The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
  [PeriodOnlineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is connected to the internet.
  [PinCharacterSet <String>]: Character set which is to be used for a user's app PIN
  [PinRequired <Boolean?>]: Indicates whether an app-level pin is required.
  [PrintBlocked <Boolean?>]: Indicates whether printing is allowed from managed apps.
  [SaveAsBlocked <Boolean?>]: Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
  [SimplePinBlocked <Boolean?>]: Indicates whether simplePin is blocked.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: Read-only.
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Id <String>]: Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.
  [CustomBrowserDisplayName <String>]: Friendly name of the preferred custom browser to open weblink on Android. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
  [CustomBrowserPackageId <String>]: Unique identifier of the preferred custom browser to open weblink on Android. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
  [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
  [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: Read-only.
    [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
    [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
      [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [DisplayName <String>]: Not yet documented
    [LastRefreshTime <DateTime?>]: Not yet documented
    [Version <String>]: Version of the entity.
  [DisableAppEncryptionIfDeviceEncryptionIsEnabled <Boolean?>]: When this setting is enabled, app level encryption is disabled if device level encryption is enabled
  [EncryptAppData <Boolean?>]: Indicates whether application data for managed apps should be encrypted
  [MinimumRequiredPatchVersion <String>]: Define the oldest required Android security patch level a user can have to gain secure access to the app.
  [MinimumWarningPatchVersion <String>]: Define the oldest recommended Android security patch level a user can have for secure access to the app.
  [ScreenCaptureBlocked <Boolean?>]: Indicates whether a managed user can take screen captures of managed apps

DEPLOYMENTSUMMARY <IMicrosoftGraphManagedAppPolicyDeploymentSummary>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
  [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
    [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DisplayName <String>]: Not yet documented
  [LastRefreshTime <DateTime?>]: Not yet documented
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtandroidmanagedappprotection
#>
function Update-MgDeviceAppMgtAndroidManagedAppProtection {
[Alias('Update-MgDeviceAppManagementAndroidManagedAppProtection')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of androidManagedAppProtection
    ${AndroidManagedAppProtectionId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphAndroidManagedAppProtection1]
    # Policy used to configure detailed management settings targeted to specific security groups and for a specified set of apps on an Android device
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String[]]
    # Data storage locations where a user may store managed data.
    ${AllowedDataStorageLocations},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Data can be transferred from/to these classes of apps
    ${AllowedInboundDataTransferSources},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Represents the level to which the device's clipboard may be shared between apps
    ${AllowedOutboundClipboardSharingLevel},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Data can be transferred from/to these classes of apps
    ${AllowedOutboundDataTransferDestinations},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # List of apps to which the policy is deployed.
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]]
    # Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether contacts can be synced to the user's device.
    ${ContactSyncBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Friendly name of the preferred custom browser to open weblink on Android.
    # When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
    ${CustomBrowserDisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Unique identifier of the preferred custom browser to open weblink on Android.
    # When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
    ${CustomBrowserPackageId},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether the backup of a managed app's data is blocked.
    ${DataBackupBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Count of apps to which the current policy is deployed.
    ${DeployedAppCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for DEPLOYMENTSUMMARY properties and create a hash table.
    ${DeploymentSummary},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether device compliance is required.
    ${DeviceComplianceRequired},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # When this setting is enabled, app level encryption is disabled if device level encryption is enabled
    ${DisableAppEncryptionIfDeviceEncryptionIsEnabled},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the app pin is required if the device pin is set.
    ${DisableAppPinIfDevicePinIsSet},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether application data for managed apps should be encrypted
    ${EncryptAppData},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
    ${FingerprintBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates if the policy is deployed to any inclusion groups or not.
    ${IsAssigned},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Type of managed browser
    ${ManagedBrowser},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
    ${ManagedBrowserToOpenLinksRequired},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
    ${MaximumPinRetries},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Minimum pin length required for an app-level pin if PinRequired is set to True
    ${MinimumPinLength},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredAppVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredOSVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Define the oldest required Android security patch level a user can have to gain secure access to the app.
    ${MinimumRequiredPatchVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will result in warning message on the managed app.
    ${MinimumWarningAppVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will result in warning message on the managed app from accessing company data.
    ${MinimumWarningOSVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Define the oldest recommended Android security patch level a user can have for secure access to the app.
    ${MinimumWarningPatchVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether organizational credentials are required for app use.
    ${OrganizationalCredentialsRequired},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # TimePeriod before the all-level pin must be reset if PinRequired is set to True.
    ${PeriodBeforePinReset},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The period after which access is checked when the device is not connected to the internet.
    ${PeriodOfflineBeforeAccessCheck},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
    ${PeriodOfflineBeforeWipeIsEnforced},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The period after which access is checked when the device is connected to the internet.
    ${PeriodOnlineBeforeAccessCheck},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Character set which is to be used for a user's app PIN
    ${PinCharacterSet},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether an app-level pin is required.
    ${PinRequired},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether printing is allowed from managed apps.
    ${PrintBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
    ${SaveAsBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether a managed user can take screen captures of managed apps
    ${ScreenCaptureBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether simplePin is blocked.
    ${SimplePinBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtAndroidManagedAppProtection_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtAndroidManagedAppProtection_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtAndroidManagedAppProtection_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtAndroidManagedAppProtection_UpdateViaIdentityExpanded';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of apps to which the policy is deployed.
.Description
List of apps to which the policy is deployed.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedMobileApp>: The identifier for the deployment an app.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtdefaultmanagedappprotectionapp
#>
function Update-MgDeviceAppMgtDefaultManagedAppProtectionApp {
[Alias('Update-MgDeviceAppManagementDefaultManagedAppProtectionApp')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of defaultManagedAppProtection
    ${DefaultManagedAppProtectionId},

    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedMobileApp
    ${ManagedMobileAppId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp]
    # The identifier for the deployment an app.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppIdentifier]))]
    [System.Collections.Hashtable]
    # The identifier for a mobile app.
    ${MobileAppIdentifier},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtDefaultManagedAppProtectionApp_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtDefaultManagedAppProtectionApp_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtDefaultManagedAppProtectionApp_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtDefaultManagedAppProtectionApp_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Navigation property to deployment summary of the configuration.
.Description
Navigation property to deployment summary of the configuration.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppPolicyDeploymentSummary>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
  [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
    [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DisplayName <String>]: Not yet documented
  [LastRefreshTime <DateTime?>]: Not yet documented
  [Version <String>]: Version of the entity.

CONFIGURATIONDEPLOYMENTSUMMARYPERAPP <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>: Not yet documented
  [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtdefaultmanagedappprotectiondeploymentsummary
#>
function Update-MgDeviceAppMgtDefaultManagedAppProtectionDeploymentSummary {
[Alias('Update-MgDeviceAppManagementDefaultManagedAppProtectionDeploymentSummary')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of defaultManagedAppProtection
    ${DefaultManagedAppProtectionId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Not yet documented
    ${ConfigurationDeployedUserCount},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]]
    # Not yet documented
    # To construct, see NOTES section for CONFIGURATIONDEPLOYMENTSUMMARYPERAPP properties and create a hash table.
    ${ConfigurationDeploymentSummaryPerApp},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Not yet documented
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Not yet documented
    ${LastRefreshTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtDefaultManagedAppProtectionDeploymentSummary_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtDefaultManagedAppProtectionDeploymentSummary_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtDefaultManagedAppProtectionDeploymentSummary_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtDefaultManagedAppProtectionDeploymentSummary_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Default managed app policies.
.Description
Default managed app policies.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDefaultManagedAppProtection1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: List of apps to which the policy is deployed.
  [Id <String>]: Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

BODYPARAMETER <IMicrosoftGraphDefaultManagedAppProtection1>: Policy used to configure detailed management settings for a specified set of apps for all users not targeted by a TargetedManagedAppProtection Policy
  [(Any) <Object>]: This indicates any property can be added to this object.
  [AllowedDataStorageLocations <String[]>]: Data storage locations where a user may store managed data.
  [AllowedInboundDataTransferSources <String>]: Data can be transferred from/to these classes of apps
  [AllowedOutboundClipboardSharingLevel <String>]: Represents the level to which the device's clipboard may be shared between apps
  [AllowedOutboundDataTransferDestinations <String>]: Data can be transferred from/to these classes of apps
  [ContactSyncBlocked <Boolean?>]: Indicates whether contacts can be synced to the user's device.
  [DataBackupBlocked <Boolean?>]: Indicates whether the backup of a managed app's data is blocked.
  [DeviceComplianceRequired <Boolean?>]: Indicates whether device compliance is required.
  [DisableAppPinIfDevicePinIsSet <Boolean?>]: Indicates whether use of the app pin is required if the device pin is set.
  [FingerprintBlocked <Boolean?>]: Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
  [ManagedBrowser <String>]: Type of managed browser
  [ManagedBrowserToOpenLinksRequired <Boolean?>]: Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
  [MaximumPinRetries <Int32?>]: Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
  [MinimumPinLength <Int32?>]: Minimum pin length required for an app-level pin if PinRequired is set to True
  [MinimumRequiredAppVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumRequiredOSVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumWarningAppVersion <String>]: Versions less than the specified version will result in warning message on the managed app.
  [MinimumWarningOSVersion <String>]: Versions less than the specified version will result in warning message on the managed app from accessing company data.
  [OrganizationalCredentialsRequired <Boolean?>]: Indicates whether organizational credentials are required for app use.
  [PeriodBeforePinReset <TimeSpan?>]: TimePeriod before the all-level pin must be reset if PinRequired is set to True.
  [PeriodOfflineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is not connected to the internet.
  [PeriodOfflineBeforeWipeIsEnforced <TimeSpan?>]: The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
  [PeriodOnlineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is connected to the internet.
  [PinCharacterSet <String>]: Character set which is to be used for a user's app PIN
  [PinRequired <Boolean?>]: Indicates whether an app-level pin is required.
  [PrintBlocked <Boolean?>]: Indicates whether printing is allowed from managed apps.
  [SaveAsBlocked <Boolean?>]: Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
  [SimplePinBlocked <Boolean?>]: Indicates whether simplePin is blocked.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: Read-only.
  [AppDataEncryptionType <String>]: Represents the level to which app data is encrypted for managed apps
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Id <String>]: Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.
  [CustomSettings <IMicrosoftGraphKeyValuePair[]>]: A set of string key and string value pairs to be sent to the affected users, unalterned by this service
    [Name <String>]: Name for this key-value pair
    [Value <String>]: Value for this key-value pair
  [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
  [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: Read-only.
    [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
    [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
      [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [DisplayName <String>]: Not yet documented
    [LastRefreshTime <DateTime?>]: Not yet documented
    [Version <String>]: Version of the entity.
  [DisableAppEncryptionIfDeviceEncryptionIsEnabled <Boolean?>]: When this setting is enabled, app level encryption is disabled if device level encryption is enabled. (Android only)
  [EncryptAppData <Boolean?>]: Indicates whether managed-app data should be encrypted. (Android only)
  [FaceIdBlocked <Boolean?>]: Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True. (iOS Only)
  [MinimumRequiredPatchVersion <String>]: Define the oldest required Android security patch level a user can have to gain secure access to the app. (Android only)
  [MinimumRequiredSdkVersion <String>]: Versions less than the specified version will block the managed app from accessing company data. (iOS Only)
  [MinimumWarningPatchVersion <String>]: Define the oldest recommended Android security patch level a user can have for secure access to the app. (Android only)
  [ScreenCaptureBlocked <Boolean?>]: Indicates whether screen capture is blocked. (Android only)

CUSTOMSETTINGS <IMicrosoftGraphKeyValuePair[]>: A set of string key and string value pairs to be sent to the affected users, unalterned by this service
  [Name <String>]: Name for this key-value pair
  [Value <String>]: Value for this key-value pair

DEPLOYMENTSUMMARY <IMicrosoftGraphManagedAppPolicyDeploymentSummary>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
  [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
    [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DisplayName <String>]: Not yet documented
  [LastRefreshTime <DateTime?>]: Not yet documented
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtdefaultmanagedappprotection
#>
function Update-MgDeviceAppMgtDefaultManagedAppProtection {
[Alias('Update-MgDeviceAppManagementDefaultManagedAppProtection')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of defaultManagedAppProtection
    ${DefaultManagedAppProtectionId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDefaultManagedAppProtection1]
    # Policy used to configure detailed management settings for a specified set of apps for all users not targeted by a TargetedManagedAppProtection Policy
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String[]]
    # Data storage locations where a user may store managed data.
    ${AllowedDataStorageLocations},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Data can be transferred from/to these classes of apps
    ${AllowedInboundDataTransferSources},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Represents the level to which the device's clipboard may be shared between apps
    ${AllowedOutboundClipboardSharingLevel},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Data can be transferred from/to these classes of apps
    ${AllowedOutboundDataTransferDestinations},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Represents the level to which app data is encrypted for managed apps
    ${AppDataEncryptionType},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # List of apps to which the policy is deployed.
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether contacts can be synced to the user's device.
    ${ContactSyncBlocked},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphKeyValuePair[]]
    # A set of string key and string value pairs to be sent to the affected users, unalterned by this service
    # To construct, see NOTES section for CUSTOMSETTINGS properties and create a hash table.
    ${CustomSettings},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether the backup of a managed app's data is blocked.
    ${DataBackupBlocked},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Count of apps to which the current policy is deployed.
    ${DeployedAppCount},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for DEPLOYMENTSUMMARY properties and create a hash table.
    ${DeploymentSummary},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether device compliance is required.
    ${DeviceComplianceRequired},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # When this setting is enabled, app level encryption is disabled if device level encryption is enabled.
    # (Android only)
    ${DisableAppEncryptionIfDeviceEncryptionIsEnabled},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the app pin is required if the device pin is set.
    ${DisableAppPinIfDevicePinIsSet},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether managed-app data should be encrypted.
    # (Android only)
    ${EncryptAppData},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True.
    # (iOS Only)
    ${FaceIdBlocked},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
    ${FingerprintBlocked},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Type of managed browser
    ${ManagedBrowser},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
    ${ManagedBrowserToOpenLinksRequired},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
    ${MaximumPinRetries},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Minimum pin length required for an app-level pin if PinRequired is set to True
    ${MinimumPinLength},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredAppVersion},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredOSVersion},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Define the oldest required Android security patch level a user can have to gain secure access to the app.
    # (Android only)
    ${MinimumRequiredPatchVersion},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    # (iOS Only)
    ${MinimumRequiredSdkVersion},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will result in warning message on the managed app.
    ${MinimumWarningAppVersion},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will result in warning message on the managed app from accessing company data.
    ${MinimumWarningOSVersion},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Define the oldest recommended Android security patch level a user can have for secure access to the app.
    # (Android only)
    ${MinimumWarningPatchVersion},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether organizational credentials are required for app use.
    ${OrganizationalCredentialsRequired},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # TimePeriod before the all-level pin must be reset if PinRequired is set to True.
    ${PeriodBeforePinReset},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The period after which access is checked when the device is not connected to the internet.
    ${PeriodOfflineBeforeAccessCheck},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
    ${PeriodOfflineBeforeWipeIsEnforced},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The period after which access is checked when the device is connected to the internet.
    ${PeriodOnlineBeforeAccessCheck},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Character set which is to be used for a user's app PIN
    ${PinCharacterSet},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether an app-level pin is required.
    ${PinRequired},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether printing is allowed from managed apps.
    ${PrintBlocked},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
    ${SaveAsBlocked},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether screen capture is blocked.
    # (Android only)
    ${ScreenCaptureBlocked},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether simplePin is blocked.
    ${SimplePinBlocked},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtDefaultManagedAppProtection_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtDefaultManagedAppProtection_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtDefaultManagedAppProtection_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtDefaultManagedAppProtection_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of apps to which the policy is deployed.
.Description
List of apps to which the policy is deployed.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedMobileApp>: The identifier for the deployment an app.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtiosmanagedappprotectionapp
#>
function Update-MgDeviceAppMgtiOSManagedAppProtectionApp {
[Alias('Update-MgDeviceAppManagementiOSManagedAppProtectionApp')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedMobileApp
    ${ManagedMobileAppId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp]
    # The identifier for the deployment an app.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppIdentifier]))]
    [System.Collections.Hashtable]
    # The identifier for a mobile app.
    ${MobileAppIdentifier},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtiOSManagedAppProtectionApp_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtiOSManagedAppProtectionApp_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtiOSManagedAppProtectionApp_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtiOSManagedAppProtectionApp_UpdateViaIdentityExpanded';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Navigation property to deployment summary of the configuration.
.Description
Navigation property to deployment summary of the configuration.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppPolicyDeploymentSummary>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
  [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
    [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DisplayName <String>]: Not yet documented
  [LastRefreshTime <DateTime?>]: Not yet documented
  [Version <String>]: Version of the entity.

CONFIGURATIONDEPLOYMENTSUMMARYPERAPP <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>: Not yet documented
  [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtiosmanagedappprotectiondeploymentsummary
#>
function Update-MgDeviceAppMgtiOSManagedAppProtectionDeploymentSummary {
[Alias('Update-MgDeviceAppManagementiOSManagedAppProtectionDeploymentSummary')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Not yet documented
    ${ConfigurationDeployedUserCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]]
    # Not yet documented
    # To construct, see NOTES section for CONFIGURATIONDEPLOYMENTSUMMARYPERAPP properties and create a hash table.
    ${ConfigurationDeploymentSummaryPerApp},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Not yet documented
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Not yet documented
    ${LastRefreshTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtiOSManagedAppProtectionDeploymentSummary_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtiOSManagedAppProtectionDeploymentSummary_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtiOSManagedAppProtectionDeploymentSummary_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtiOSManagedAppProtectionDeploymentSummary_UpdateViaIdentityExpanded';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
iOS managed app policies.
.Description
iOS managed app policies.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphIosManagedAppProtection1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: List of apps to which the policy is deployed.
  [Id <String>]: Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

ASSIGNMENTS <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
  [Id <String>]: Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphIosManagedAppProtection1>: Policy used to configure detailed management settings targeted to specific security groups and for a specified set of apps on an iOS device
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>]: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    [Id <String>]: Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
  [AllowedDataStorageLocations <String[]>]: Data storage locations where a user may store managed data.
  [AllowedInboundDataTransferSources <String>]: Data can be transferred from/to these classes of apps
  [AllowedOutboundClipboardSharingLevel <String>]: Represents the level to which the device's clipboard may be shared between apps
  [AllowedOutboundDataTransferDestinations <String>]: Data can be transferred from/to these classes of apps
  [ContactSyncBlocked <Boolean?>]: Indicates whether contacts can be synced to the user's device.
  [DataBackupBlocked <Boolean?>]: Indicates whether the backup of a managed app's data is blocked.
  [DeviceComplianceRequired <Boolean?>]: Indicates whether device compliance is required.
  [DisableAppPinIfDevicePinIsSet <Boolean?>]: Indicates whether use of the app pin is required if the device pin is set.
  [FingerprintBlocked <Boolean?>]: Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
  [ManagedBrowser <String>]: Type of managed browser
  [ManagedBrowserToOpenLinksRequired <Boolean?>]: Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
  [MaximumPinRetries <Int32?>]: Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
  [MinimumPinLength <Int32?>]: Minimum pin length required for an app-level pin if PinRequired is set to True
  [MinimumRequiredAppVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumRequiredOSVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumWarningAppVersion <String>]: Versions less than the specified version will result in warning message on the managed app.
  [MinimumWarningOSVersion <String>]: Versions less than the specified version will result in warning message on the managed app from accessing company data.
  [OrganizationalCredentialsRequired <Boolean?>]: Indicates whether organizational credentials are required for app use.
  [PeriodBeforePinReset <TimeSpan?>]: TimePeriod before the all-level pin must be reset if PinRequired is set to True.
  [PeriodOfflineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is not connected to the internet.
  [PeriodOfflineBeforeWipeIsEnforced <TimeSpan?>]: The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
  [PeriodOnlineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is connected to the internet.
  [PinCharacterSet <String>]: Character set which is to be used for a user's app PIN
  [PinRequired <Boolean?>]: Indicates whether an app-level pin is required.
  [PrintBlocked <Boolean?>]: Indicates whether printing is allowed from managed apps.
  [SaveAsBlocked <Boolean?>]: Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
  [SimplePinBlocked <Boolean?>]: Indicates whether simplePin is blocked.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: Read-only.
  [AppDataEncryptionType <String>]: Represents the level to which app data is encrypted for managed apps
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Id <String>]: Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.
  [CustomBrowserProtocol <String>]: A custom browser protocol to open weblink on iOS. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
  [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
  [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: Read-only.
    [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
    [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
      [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [DisplayName <String>]: Not yet documented
    [LastRefreshTime <DateTime?>]: Not yet documented
    [Version <String>]: Version of the entity.
  [FaceIdBlocked <Boolean?>]: Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True.
  [MinimumRequiredSdkVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.

DEPLOYMENTSUMMARY <IMicrosoftGraphManagedAppPolicyDeploymentSummary>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
  [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
    [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DisplayName <String>]: Not yet documented
  [LastRefreshTime <DateTime?>]: Not yet documented
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtiosmanagedappprotection
#>
function Update-MgDeviceAppMgtiOSManagedAppProtection {
[Alias('Update-MgDeviceAppManagementiOSManagedAppProtection')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of iosManagedAppProtection
    ${IosManagedAppProtectionId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphIosManagedAppProtection1]
    # Policy used to configure detailed management settings targeted to specific security groups and for a specified set of apps on an iOS device
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String[]]
    # Data storage locations where a user may store managed data.
    ${AllowedDataStorageLocations},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Data can be transferred from/to these classes of apps
    ${AllowedInboundDataTransferSources},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Represents the level to which the device's clipboard may be shared between apps
    ${AllowedOutboundClipboardSharingLevel},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Data can be transferred from/to these classes of apps
    ${AllowedOutboundDataTransferDestinations},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Represents the level to which app data is encrypted for managed apps
    ${AppDataEncryptionType},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # List of apps to which the policy is deployed.
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]]
    # Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether contacts can be synced to the user's device.
    ${ContactSyncBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # A custom browser protocol to open weblink on iOS.
    # When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
    ${CustomBrowserProtocol},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether the backup of a managed app's data is blocked.
    ${DataBackupBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Count of apps to which the current policy is deployed.
    ${DeployedAppCount},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for DEPLOYMENTSUMMARY properties and create a hash table.
    ${DeploymentSummary},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether device compliance is required.
    ${DeviceComplianceRequired},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the app pin is required if the device pin is set.
    ${DisableAppPinIfDevicePinIsSet},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True.
    ${FaceIdBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
    ${FingerprintBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates if the policy is deployed to any inclusion groups or not.
    ${IsAssigned},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Type of managed browser
    ${ManagedBrowser},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
    ${ManagedBrowserToOpenLinksRequired},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
    ${MaximumPinRetries},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Minimum pin length required for an app-level pin if PinRequired is set to True
    ${MinimumPinLength},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredAppVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredOSVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will block the managed app from accessing company data.
    ${MinimumRequiredSdkVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will result in warning message on the managed app.
    ${MinimumWarningAppVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Versions less than the specified version will result in warning message on the managed app from accessing company data.
    ${MinimumWarningOSVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether organizational credentials are required for app use.
    ${OrganizationalCredentialsRequired},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # TimePeriod before the all-level pin must be reset if PinRequired is set to True.
    ${PeriodBeforePinReset},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The period after which access is checked when the device is not connected to the internet.
    ${PeriodOfflineBeforeAccessCheck},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
    ${PeriodOfflineBeforeWipeIsEnforced},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.TimeSpan]
    # The period after which access is checked when the device is connected to the internet.
    ${PeriodOnlineBeforeAccessCheck},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Character set which is to be used for a user's app PIN
    ${PinCharacterSet},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether an app-level pin is required.
    ${PinRequired},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether printing is allowed from managed apps.
    ${PrintBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
    ${SaveAsBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates whether simplePin is blocked.
    ${SimplePinBlocked},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtiOSManagedAppProtection_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtiOSManagedAppProtection_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtiOSManagedAppProtection_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtiOSManagedAppProtection_UpdateViaIdentityExpanded';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Managed app policies.
.Description
Managed app policies.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppPolicy1>: The ManagedAppPolicy resource represents a base type for platform specific policies.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtmanagedapppolicy
#>
function Update-MgDeviceAppMgtManagedAppPolicy {
[Alias('Update-MgDeviceAppManagementManagedAppPolicy')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1]
    # The ManagedAppPolicy resource represents a base type for platform specific policies.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedAppPolicy_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedAppPolicy_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedAppPolicy_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedAppPolicy_UpdateViaIdentityExpanded';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Zero or more policys already applied on the registered app when it last synchronized with managment service.
.Description
Zero or more policys already applied on the registered app when it last synchronized with managment service.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppPolicy1>: The ManagedAppPolicy resource represents a base type for platform specific policies.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtmanagedappregistrationappliedpolicy
#>
function Update-MgDeviceAppMgtManagedAppRegistrationAppliedPolicy {
[Alias('Update-MgDeviceAppManagementManagedAppRegistrationAppliedPolicy')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1]
    # The ManagedAppPolicy resource represents a base type for platform specific policies.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedAppRegistrationAppliedPolicy_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedAppRegistrationAppliedPolicy_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedAppRegistrationAppliedPolicy_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedAppRegistrationAppliedPolicy_UpdateViaIdentityExpanded';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Zero or more policies admin intended for the app as of now.
.Description
Zero or more policies admin intended for the app as of now.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppPolicy1>: The ManagedAppPolicy resource represents a base type for platform specific policies.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtmanagedappregistrationintendedpolicy
#>
function Update-MgDeviceAppMgtManagedAppRegistrationIntendedPolicy {
[Alias('Update-MgDeviceAppManagementManagedAppRegistrationIntendedPolicy')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppPolicy
    ${ManagedAppPolicyId},

    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1]
    # The ManagedAppPolicy resource represents a base type for platform specific policies.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedAppRegistrationIntendedPolicy_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedAppRegistrationIntendedPolicy_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedAppRegistrationIntendedPolicy_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedAppRegistrationIntendedPolicy_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Zero or more long running operations triggered on the app registration.
.Description
Zero or more long running operations triggered on the app registration.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppOperation
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppOperation>: Represents an operation applied against an app registration.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [DisplayName <String>]: The operation name.
  [LastModifiedDateTime <DateTime?>]: The last time the app operation was modified.
  [State <String>]: The current state of the operation
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtmanagedappregistrationoperation
#>
function Update-MgDeviceAppMgtManagedAppRegistrationOperation {
[Alias('Update-MgDeviceAppManagementManagedAppRegistrationOperation')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppOperation
    ${ManagedAppOperationId},

    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppOperation]
    # Represents an operation applied against an app registration.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The operation name.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The last time the app operation was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The current state of the operation
    ${State},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedAppRegistrationOperation_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedAppRegistrationOperation_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedAppRegistrationOperation_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedAppRegistrationOperation_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The managed app registrations.
.Description
The managed app registrations.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppRegistration1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPLIEDPOLICIES <IMicrosoftGraphManagedAppPolicy1[]>: Zero or more policys already applied on the registered app when it last synchronized with managment service.
  [Id <String>]: Read-only.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.

BODYPARAMETER <IMicrosoftGraphManagedAppRegistration1>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [AppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [ApplicationVersion <String>]: App version
  [AppliedPolicies <IMicrosoftGraphManagedAppPolicy1[]>]: Zero or more policys already applied on the registered app when it last synchronized with managment service.
    [Id <String>]: Read-only.
    [CreatedDateTime <DateTime?>]: The date and time the policy was created.
    [Description <String>]: The policy's description.
    [DisplayName <String>]: Policy display name.
    [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
    [Version <String>]: Version of the entity.
  [CreatedDateTime <DateTime?>]: Date and time of creation
  [DeviceName <String>]: Host device name
  [DeviceTag <String>]: App management SDK generated tag, which helps relate apps hosted on the same device. Not guaranteed to relate apps in all conditions.
  [DeviceType <String>]: Host device type
  [FlaggedReasons <String[]>]: Zero or more reasons an app registration is flagged. E.g. app running on rooted device
  [IntendedPolicies <IMicrosoftGraphManagedAppPolicy1[]>]: Zero or more policies admin intended for the app as of now.
  [LastSyncDateTime <DateTime?>]: Date and time of last the app synced with management service.
  [ManagementSdkVersion <String>]: App management SDK version
  [Operations <IMicrosoftGraphManagedAppOperation[]>]: Zero or more long running operations triggered on the app registration.
    [Id <String>]: Read-only.
    [DisplayName <String>]: The operation name.
    [LastModifiedDateTime <DateTime?>]: The last time the app operation was modified.
    [State <String>]: The current state of the operation
    [Version <String>]: Version of the entity.
  [PlatformVersion <String>]: Operating System version
  [UserId <String>]: The user Id to who this app registration belongs.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction

INTENDEDPOLICIES <IMicrosoftGraphManagedAppPolicy1[]>: Zero or more policies admin intended for the app as of now.
  [Id <String>]: Read-only.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.

OPERATIONS <IMicrosoftGraphManagedAppOperation[]>: Zero or more long running operations triggered on the app registration.
  [Id <String>]: Read-only.
  [DisplayName <String>]: The operation name.
  [LastModifiedDateTime <DateTime?>]: The last time the app operation was modified.
  [State <String>]: The current state of the operation
  [Version <String>]: Version of the entity.
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtmanagedappregistration
#>
function Update-MgDeviceAppMgtManagedAppRegistration {
[Alias('Update-MgDeviceAppManagementManagedAppRegistration')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppRegistration
    ${ManagedAppRegistrationId},

    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppRegistration1]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppIdentifier]))]
    [System.Collections.Hashtable]
    # The identifier for a mobile app.
    ${AppIdentifier},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # App version
    ${ApplicationVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1[]]
    # Zero or more policys already applied on the registered app when it last synchronized with managment service.
    # To construct, see NOTES section for APPLIEDPOLICIES properties and create a hash table.
    ${AppliedPolicies},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Date and time of creation
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Host device name
    ${DeviceName},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # App management SDK generated tag, which helps relate apps hosted on the same device.
    # Not guaranteed to relate apps in all conditions.
    ${DeviceTag},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Host device type
    ${DeviceType},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String[]]
    # Zero or more reasons an app registration is flagged.
    # E.g.
    # app running on rooted device
    ${FlaggedReasons},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1[]]
    # Zero or more policies admin intended for the app as of now.
    # To construct, see NOTES section for INTENDEDPOLICIES properties and create a hash table.
    ${IntendedPolicies},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Date and time of last the app synced with management service.
    ${LastSyncDateTime},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # App management SDK version
    ${ManagementSdkVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppOperation[]]
    # Zero or more long running operations triggered on the app registration.
    # To construct, see NOTES section for OPERATIONS properties and create a hash table.
    ${Operations},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Operating System version
    ${PlatformVersion},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The user Id to who this app registration belongs.
    ${UserId},

    [Parameter(ParameterSetName='UpdateExpanded')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedAppRegistration_Update';
            UpdateExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedAppRegistration_UpdateExpanded';
            UpdateViaIdentity = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedAppRegistration_UpdateViaIdentity';
            UpdateViaIdentityExpanded = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedAppRegistration_UpdateViaIdentityExpanded';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The managed app statuses.
.Description
The managed app statuses.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppStatus
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppStatus>: Represents app protection and configuration status for the organization.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [DisplayName <String>]: Friendly name of the status report.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtmanagedappstatuses
#>
function Update-MgDeviceAppMgtManagedAppStatuses {
[Alias('Update-MgDeviceAppManagementManagedAppStatuses')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedAppStatus
    ${ManagedAppStatusId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppStatus]
    # Represents app protection and configuration status for the organization.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Friendly name of the status report.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedAppStatuses_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedAppStatuses_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedAppStatuses_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedAppStatuses_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of assignments for this eBook.
.Description
The list of assignments for this eBook.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBookAssignment1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedEBookAssignment1>: Contains properties used to assign a eBook to a group.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [InstallIntent <String>]: Possible values for the install intent chosen by the admin.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtmanagedebookassignment
#>
function Update-MgDeviceAppMgtManagedEBookAssignment {
[Alias('Update-MgDeviceAppManagementManagedEBookAssignment')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBookAssignment
    ${ManagedEBookAssignmentId},

    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBookAssignment1]
    # Contains properties used to assign a eBook to a group.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Possible values for the install intent chosen by the admin.
    ${InstallIntent},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1]))]
    [System.Collections.Hashtable]
    # Base type for assignment targets.
    ${Target},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedEBookAssignment_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedEBookAssignment_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedEBookAssignment_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedEBookAssignment_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of installation states for this eBook.
.Description
The list of installation states for this eBook.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphDeviceInstallState>: Contains properties for the installation state for a device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [DeviceId <String>]: Device Id.
  [DeviceName <String>]: Device name.
  [ErrorCode <String>]: The error code for install failures.
  [InstallState <String>]: Possible values for install state.
  [LastSyncDateTime <DateTime?>]: Last sync date and time.
  [OSDescription <String>]: OS Description.
  [OSVersion <String>]: OS Version.
  [UserName <String>]: Device User Name.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtmanagedebookdevicestate
#>
function Update-MgDeviceAppMgtManagedEBookDeviceState {
[Alias('Update-MgDeviceAppManagementManagedEBookDeviceState')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of deviceInstallState
    ${DeviceInstallStateId},

    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState]
    # Contains properties for the installation state for a device.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device Id.
    ${DeviceId},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device name.
    ${DeviceName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The error code for install failures.
    ${ErrorCode},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Possible values for install state.
    ${InstallState},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last sync date and time.
    ${LastSyncDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # OS Description.
    ${OSDescription},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # OS Version.
    ${OSVersion},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device User Name.
    ${UserName},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedEBookDeviceState_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedEBookDeviceState_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedEBookDeviceState_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedEBookDeviceState_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Mobile App Install Summary.
.Description
Mobile App Install Summary.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphEBookInstallSummary
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphEBookInstallSummary>: Contains properties for the installation summary of a book for a device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [FailedDeviceCount <Int32?>]: Number of Devices that have failed to install this book.
  [FailedUserCount <Int32?>]: Number of Users that have 1 or more device that failed to install this book.
  [InstalledDeviceCount <Int32?>]: Number of Devices that have successfully installed this book.
  [InstalledUserCount <Int32?>]: Number of Users whose devices have all succeeded to install this book.
  [NotInstalledDeviceCount <Int32?>]: Number of Devices that does not have this book installed.
  [NotInstalledUserCount <Int32?>]: Number of Users that did not install this book.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtmanagedebookinstallsummary
#>
function Update-MgDeviceAppMgtManagedEBookInstallSummary {
[Alias('Update-MgDeviceAppManagementManagedEBookInstallSummary')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphEBookInstallSummary]
    # Contains properties for the installation summary of a book for a device.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of Devices that have failed to install this book.
    ${FailedDeviceCount},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of Users that have 1 or more device that failed to install this book.
    ${FailedUserCount},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of Devices that have successfully installed this book.
    ${InstalledDeviceCount},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of Users whose devices have all succeeded to install this book.
    ${InstalledUserCount},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of Devices that does not have this book installed.
    ${NotInstalledDeviceCount},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of Users that did not install this book.
    ${NotInstalledUserCount},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedEBookInstallSummary_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedEBookInstallSummary_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedEBookInstallSummary_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedEBookInstallSummary_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The install state of the eBook.
.Description
The install state of the eBook.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphDeviceInstallState>: Contains properties for the installation state for a device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [DeviceId <String>]: Device Id.
  [DeviceName <String>]: Device name.
  [ErrorCode <String>]: The error code for install failures.
  [InstallState <String>]: Possible values for install state.
  [LastSyncDateTime <DateTime?>]: Last sync date and time.
  [OSDescription <String>]: OS Description.
  [OSVersion <String>]: OS Version.
  [UserName <String>]: Device User Name.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtmanagedebookuserstatesummarydevicestate
#>
function Update-MgDeviceAppMgtManagedEBookUserStateSummaryDeviceState {
[Alias('Update-MgDeviceAppManagementManagedEBookUserStateSummaryDeviceState')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of deviceInstallState
    ${DeviceInstallStateId},

    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of userInstallStateSummary
    ${UserInstallStateSummaryId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState]
    # Contains properties for the installation state for a device.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device Id.
    ${DeviceId},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device name.
    ${DeviceName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The error code for install failures.
    ${ErrorCode},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Possible values for install state.
    ${InstallState},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last sync date and time.
    ${LastSyncDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # OS Description.
    ${OSDescription},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # OS Version.
    ${OSVersion},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device User Name.
    ${UserName},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedEBookUserStateSummaryDeviceState_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedEBookUserStateSummaryDeviceState_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedEBookUserStateSummaryDeviceState_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedEBookUserStateSummaryDeviceState_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of installation states for this eBook.
.Description
The list of installation states for this eBook.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUserInstallStateSummary
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphUserInstallStateSummary>: Contains properties for the installation state summary for a user.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [DeviceStates <IMicrosoftGraphDeviceInstallState[]>]: The install state of the eBook.
    [Id <String>]: Read-only.
    [DeviceId <String>]: Device Id.
    [DeviceName <String>]: Device name.
    [ErrorCode <String>]: The error code for install failures.
    [InstallState <String>]: Possible values for install state.
    [LastSyncDateTime <DateTime?>]: Last sync date and time.
    [OSDescription <String>]: OS Description.
    [OSVersion <String>]: OS Version.
    [UserName <String>]: Device User Name.
  [FailedDeviceCount <Int32?>]: Failed Device Count.
  [InstalledDeviceCount <Int32?>]: Installed Device Count.
  [NotInstalledDeviceCount <Int32?>]: Not installed device count.
  [UserName <String>]: User name.

DEVICESTATES <IMicrosoftGraphDeviceInstallState[]>: The install state of the eBook.
  [Id <String>]: Read-only.
  [DeviceId <String>]: Device Id.
  [DeviceName <String>]: Device name.
  [ErrorCode <String>]: The error code for install failures.
  [InstallState <String>]: Possible values for install state.
  [LastSyncDateTime <DateTime?>]: Last sync date and time.
  [OSDescription <String>]: OS Description.
  [OSVersion <String>]: OS Version.
  [UserName <String>]: Device User Name.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtmanagedebookuserstatesummary
#>
function Update-MgDeviceAppMgtManagedEBookUserStateSummary {
[Alias('Update-MgDeviceAppManagementManagedEBookUserStateSummary')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of userInstallStateSummary
    ${UserInstallStateSummaryId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUserInstallStateSummary]
    # Contains properties for the installation state summary for a user.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState[]]
    # The install state of the eBook.
    # To construct, see NOTES section for DEVICESTATES properties and create a hash table.
    ${DeviceStates},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Failed Device Count.
    ${FailedDeviceCount},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Installed Device Count.
    ${InstalledDeviceCount},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Not installed device count.
    ${NotInstalledDeviceCount},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # User name.
    ${UserName},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedEBookUserStateSummary_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedEBookUserStateSummary_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedEBookUserStateSummary_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedEBookUserStateSummary_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The Managed eBook.
.Description
The Managed eBook.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBook1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphManagedEBookAssignment1[]>: The list of assignments for this eBook.
  [Id <String>]: Read-only.
  [InstallIntent <String>]: Possible values for the install intent chosen by the admin.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphManagedEBook1>: An abstract class containing the base properties for Managed eBook.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [Assignments <IMicrosoftGraphManagedEBookAssignment1[]>]: The list of assignments for this eBook.
    [Id <String>]: Read-only.
    [InstallIntent <String>]: Possible values for the install intent chosen by the admin.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [CreatedDateTime <DateTime?>]: The date and time when the eBook file was created.
  [Description <String>]: Description.
  [DeviceStates <IMicrosoftGraphDeviceInstallState[]>]: The list of installation states for this eBook.
    [Id <String>]: Read-only.
    [DeviceId <String>]: Device Id.
    [DeviceName <String>]: Device name.
    [ErrorCode <String>]: The error code for install failures.
    [InstallState <String>]: Possible values for install state.
    [LastSyncDateTime <DateTime?>]: Last sync date and time.
    [OSDescription <String>]: OS Description.
    [OSVersion <String>]: OS Version.
    [UserName <String>]: Device User Name.
  [DisplayName <String>]: Name of the eBook.
  [InformationUrl <String>]: The more information Url.
  [InstallSummary <IMicrosoftGraphEBookInstallSummary>]: Contains properties for the installation summary of a book for a device.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: Read-only.
    [FailedDeviceCount <Int32?>]: Number of Devices that have failed to install this book.
    [FailedUserCount <Int32?>]: Number of Users that have 1 or more device that failed to install this book.
    [InstalledDeviceCount <Int32?>]: Number of Devices that have successfully installed this book.
    [InstalledUserCount <Int32?>]: Number of Users whose devices have all succeeded to install this book.
    [NotInstalledDeviceCount <Int32?>]: Number of Devices that does not have this book installed.
    [NotInstalledUserCount <Int32?>]: Number of Users that did not install this book.
  [LargeCover <IMicrosoftGraphMimeContent>]: Contains properties for a generic mime content.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Type <String>]: Indicates the content mime type.
    [Value <Byte[]>]: The byte array that contains the actual content.
  [LastModifiedDateTime <DateTime?>]: The date and time when the eBook was last modified.
  [PrivacyInformationUrl <String>]: The privacy statement Url.
  [PublishedDateTime <DateTime?>]: The date and time when the eBook was published.
  [Publisher <String>]: Publisher.
  [UserStateSummary <IMicrosoftGraphUserInstallStateSummary[]>]: The list of installation states for this eBook.
    [Id <String>]: Read-only.
    [DeviceStates <IMicrosoftGraphDeviceInstallState[]>]: The install state of the eBook.
    [FailedDeviceCount <Int32?>]: Failed Device Count.
    [InstalledDeviceCount <Int32?>]: Installed Device Count.
    [NotInstalledDeviceCount <Int32?>]: Not installed device count.
    [UserName <String>]: User name.

DEVICESTATES <IMicrosoftGraphDeviceInstallState[]>: The list of installation states for this eBook.
  [Id <String>]: Read-only.
  [DeviceId <String>]: Device Id.
  [DeviceName <String>]: Device name.
  [ErrorCode <String>]: The error code for install failures.
  [InstallState <String>]: Possible values for install state.
  [LastSyncDateTime <DateTime?>]: Last sync date and time.
  [OSDescription <String>]: OS Description.
  [OSVersion <String>]: OS Version.
  [UserName <String>]: Device User Name.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction

INSTALLSUMMARY <IMicrosoftGraphEBookInstallSummary>: Contains properties for the installation summary of a book for a device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [FailedDeviceCount <Int32?>]: Number of Devices that have failed to install this book.
  [FailedUserCount <Int32?>]: Number of Users that have 1 or more device that failed to install this book.
  [InstalledDeviceCount <Int32?>]: Number of Devices that have successfully installed this book.
  [InstalledUserCount <Int32?>]: Number of Users whose devices have all succeeded to install this book.
  [NotInstalledDeviceCount <Int32?>]: Number of Devices that does not have this book installed.
  [NotInstalledUserCount <Int32?>]: Number of Users that did not install this book.

LARGECOVER <IMicrosoftGraphMimeContent>: Contains properties for a generic mime content.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Type <String>]: Indicates the content mime type.
  [Value <Byte[]>]: The byte array that contains the actual content.

USERSTATESUMMARY <IMicrosoftGraphUserInstallStateSummary[]>: The list of installation states for this eBook.
  [Id <String>]: Read-only.
  [DeviceStates <IMicrosoftGraphDeviceInstallState[]>]: The install state of the eBook.
    [Id <String>]: Read-only.
    [DeviceId <String>]: Device Id.
    [DeviceName <String>]: Device name.
    [ErrorCode <String>]: The error code for install failures.
    [InstallState <String>]: Possible values for install state.
    [LastSyncDateTime <DateTime?>]: Last sync date and time.
    [OSDescription <String>]: OS Description.
    [OSVersion <String>]: OS Version.
    [UserName <String>]: Device User Name.
  [FailedDeviceCount <Int32?>]: Failed Device Count.
  [InstalledDeviceCount <Int32?>]: Installed Device Count.
  [NotInstalledDeviceCount <Int32?>]: Not installed device count.
  [UserName <String>]: User name.
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtmanagedebook
#>
function Update-MgDeviceAppMgtManagedEBook {
[Alias('Update-MgDeviceAppManagementManagedEBook')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedEBook
    ${ManagedEBookId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBook1]
    # An abstract class containing the base properties for Managed eBook.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBookAssignment1[]]
    # The list of assignments for this eBook.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time when the eBook file was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Description.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceInstallState[]]
    # The list of installation states for this eBook.
    # To construct, see NOTES section for DEVICESTATES properties and create a hash table.
    ${DeviceStates},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Name of the eBook.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The more information Url.
    ${InformationUrl},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphEBookInstallSummary]
    # Contains properties for the installation summary of a book for a device.
    # To construct, see NOTES section for INSTALLSUMMARY properties and create a hash table.
    ${InstallSummary},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMimeContent]
    # Contains properties for a generic mime content.
    # To construct, see NOTES section for LARGECOVER properties and create a hash table.
    ${LargeCover},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time when the eBook was last modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The privacy statement Url.
    ${PrivacyInformationUrl},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time when the eBook was published.
    ${PublishedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Publisher.
    ${Publisher},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUserInstallStateSummary[]]
    # The list of installation states for this eBook.
    # To construct, see NOTES section for USERSTATESUMMARY properties and create a hash table.
    ${UserStateSummary},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedEBook_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedEBook_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedEBook_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtManagedEBook_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Windows information protection for apps running on devices which are MDM enrolled.
.Description
Windows information protection for apps running on devices which are MDM enrolled.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
System.Collections.Hashtable
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>: Navigation property to list of security groups targeted for policy.
  [Id <String>]: Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

DATARECOVERYCERTIFICATE <IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate>: Windows Information Protection DataRecoveryCertificate
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Certificate <Byte[]>]: Data recovery Certificate
  [Description <String>]: Data recovery Certificate description
  [ExpirationDateTime <DateTime?>]: Data recovery Certificate expiration datetime
  [SubjectName <String>]: Data recovery Certificate subject name

ENTERPRISEINTERNALPROXYSERVERS <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: This is the comma-separated list of internal proxy servers. For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'. These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

ENTERPRISEIPRANGES <IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]>: Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to
  [DisplayName <String>]: Display name
  [Ranges <IMicrosoftGraphIPRange[]>]: Collection of ip ranges

ENTERPRISENETWORKDOMAINNAMES <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

ENTERPRISEPROTECTEDDOMAINNAMES <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: List of enterprise domains to be protected
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

ENTERPRISEPROXIEDDOMAINS <IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]>: Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
  [DisplayName <String>]: Display name
  [ProxiedDomains <IMicrosoftGraphProxiedDomain[]>]: Collection of proxied domains
    [IPAddressOrFqdn <String>]: The IP address or FQDN
    [Proxy <String>]: Proxy IP or FQDN

ENTERPRISEPROXYSERVERS <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: This is a list of proxy servers. Any server not on this list is considered non-enterprise
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

EXEMPTAPPLOCKERFILES <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>: Another way to input exempt apps through xml files
  [Id <String>]: Read-only.
  [DisplayName <String>]: The friendly name
  [File <Byte[]>]: File as a byte array
  [FileHash <String>]: SHA256 hash of the file
  [Version <String>]: Version of the entity.

EXEMPTAPPS <IMicrosoftGraphWindowsInformationProtectionApp[]>: Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data.
  [Denied <Boolean?>]: If true, app is denied protection or exemption.
  [Description <String>]: The app's description.
  [DisplayName <String>]: App display name.
  [ProductName <String>]: The product name.
  [PublisherName <String>]: The publisher name

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction

NEUTRALDOMAINRESOURCES <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: List of domain names that can used for work or personal resource
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

PROTECTEDAPPLOCKERFILES <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>: Another way to input protected apps through xml files
  [Id <String>]: Read-only.
  [DisplayName <String>]: The friendly name
  [File <Byte[]>]: File as a byte array
  [FileHash <String>]: SHA256 hash of the file
  [Version <String>]: Version of the entity.

PROTECTEDAPPS <IMicrosoftGraphWindowsInformationProtectionApp[]>: Protected applications can access enterprise data and the data handled by those applications are protected with encryption
  [Denied <Boolean?>]: If true, app is denied protection or exemption.
  [Description <String>]: The app's description.
  [DisplayName <String>]: App display name.
  [ProductName <String>]: The product name.
  [PublisherName <String>]: The publisher name

SMBAUTOENCRYPTEDFILEEXTENSIONS <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtmdmwindowinformationprotectionpolicy
#>
function Update-MgDeviceAppMgtMdmWindowInformationProtectionPolicy {
[Alias('Update-MgDeviceAppManagementMdmWindowInformationProtectionPolicy')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of mdmWindowsInformationProtectionPolicy
    ${MdmWindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(Required, PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMdmWindowsInformationProtectionPolicy1]))]
    [System.Collections.Hashtable]
    # Policy for Windows information protection with MDM
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]]
    # Navigation property to list of security groups targeted for policy.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Specifies whether to allow Azure RMS encryption for WIP
    ${AzureRightsManagementServicesAllowed},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate]
    # Windows Information Protection DataRecoveryCertificate
    # To construct, see NOTES section for DATARECOVERYCERTIFICATE properties and create a hash table.
    ${DataRecoveryCertificate},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Possible values for WIP Protection enforcement levels
    ${EnforcementLevel},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Primary enterprise domain
    ${EnterpriseDomain},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]]
    # Sets the enterprise IP ranges that define the computers in the enterprise network.
    # Data that comes from those computers will be considered part of the enterprise and protected.
    # These locations will be considered a safe destination for enterprise data to be shared to
    # To construct, see NOTES section for ENTERPRISEIPRANGES properties and create a hash table.
    ${EnterpriseIPRanges},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets.
    # Default is false
    ${EnterpriseIPRangesAreAuthoritative},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # This is the comma-separated list of internal proxy servers.
    # For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'.
    # These proxies have been configured by the admin to connect to specific resources on the Internet.
    # They are considered to be enterprise network locations.
    # The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
    # To construct, see NOTES section for ENTERPRISEINTERNALPROXYSERVERS properties and create a hash table.
    ${EnterpriseInternalProxyServers},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # This is the list of domains that comprise the boundaries of the enterprise.
    # Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
    # To construct, see NOTES section for ENTERPRISENETWORKDOMAINNAMES properties and create a hash table.
    ${EnterpriseNetworkDomainNames},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # List of enterprise domains to be protected
    # To construct, see NOTES section for ENTERPRISEPROTECTEDDOMAINNAMES properties and create a hash table.
    ${EnterpriseProtectedDomainNames},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]]
    # Contains a list of Enterprise resource domains hosted in the cloud that need to be protected.
    # Connections to these resources are considered enterprise data.
    # If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80).
    # A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
    # To construct, see NOTES section for ENTERPRISEPROXIEDDOMAINS properties and create a hash table.
    ${EnterpriseProxiedDomains},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # This is a list of proxy servers.
    # Any server not on this list is considered non-enterprise
    # To construct, see NOTES section for ENTERPRISEPROXYSERVERS properties and create a hash table.
    ${EnterpriseProxyServers},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies.
    # Default is false
    ${EnterpriseProxyServersAreAuthoritative},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]]
    # Another way to input exempt apps through xml files
    # To construct, see NOTES section for EXEMPTAPPLOCKERFILES properties and create a hash table.
    ${ExemptAppLockerFiles},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionApp[]]
    # Exempt applications can also access enterprise data, but the data handled by those applications are not protected.
    # This is because some critical enterprise applications may have compatibility problems with encrypted data.
    # To construct, see NOTES section for EXEMPTAPPS properties and create a hash table.
    ${ExemptApps},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu.
    # Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app
    ${IconsVisible},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # This switch is for the Windows Search Indexer, to allow or disallow indexing of items
    ${IndexingEncryptedStoresOrItemsBlocked},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates if the policy is deployed to any inclusion groups or not.
    ${IsAssigned},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # List of domain names that can used for work or personal resource
    # To construct, see NOTES section for NEUTRALDOMAINRESOURCES properties and create a hash table.
    ${NeutralDomainResources},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]]
    # Another way to input protected apps through xml files
    # To construct, see NOTES section for PROTECTEDAPPLOCKERFILES properties and create a hash table.
    ${ProtectedAppLockerFiles},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionApp[]]
    # Protected applications can access enterprise data and the data handled by those applications are protected with encryption
    # To construct, see NOTES section for PROTECTEDAPPS properties and create a hash table.
    ${ProtectedApps},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured
    ${ProtectionUnderLockConfigRequired},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # This policy controls whether to revoke the WIP keys when a device unenrolls from the management service.
    # If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment.
    # If the keys are not revoked, there will be no revoked file cleanup subsequently.
    ${RevokeOnUnenrollDisabled},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # TemplateID GUID to use for RMS encryption.
    # The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access
    ${RightsManagementServicesTemplateId},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
    # To construct, see NOTES section for SMBAUTOENCRYPTEDFILEEXTENSIONS properties and create a hash table.
    ${SmbAutoEncryptedFileExtensions},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMdmWindowInformationProtectionPolicy_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMdmWindowInformationProtectionPolicy_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMdmWindowInformationProtectionPolicy_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMdmWindowInformationProtectionPolicy_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of group assignments for this mobile app.
.Description
The list of group assignments for this mobile app.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignment1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphMobileAppAssignment1>: A class containing the properties used for Group Assignment of a Mobile App.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [Intent <String>]: Possible values for the install intent chosen by the admin.
  [Settings <IMicrosoftGraphMobileAppAssignmentSettings>]: Abstract class to contain properties used to assign a mobile app to a group.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtmobileappassignment
#>
function Update-MgDeviceAppMgtMobileAppAssignment {
[Alias('Update-MgDeviceAppManagementMobileAppAssignment')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of mobileAppAssignment
    ${MobileAppAssignmentId},

    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of mobileApp
    ${MobileAppId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignment1]
    # A class containing the properties used for Group Assignment of a Mobile App.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Possible values for the install intent chosen by the admin.
    ${Intent},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignmentSettings]))]
    [System.Collections.Hashtable]
    # Abstract class to contain properties used to assign a mobile app to a group.
    ${Settings},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1]))]
    [System.Collections.Hashtable]
    # Base type for assignment targets.
    ${Target},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppAssignment_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppAssignment_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppAssignment_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppAssignment_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The mobile app categories.
.Description
The mobile app categories.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppCategory
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphMobileAppCategory>: Contains properties for a single Intune app category.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [DisplayName <String>]: The name of the app category.
  [LastModifiedDateTime <DateTime?>]: The date and time the mobileAppCategory was last modified.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtmobileappcategory
#>
function Update-MgDeviceAppMgtMobileAppCategory {
[Alias('Update-MgDeviceAppManagementMobileAppCategory')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of mobileAppCategory
    ${MobileAppCategoryId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppCategory]
    # Contains properties for a single Intune app category.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The name of the app category.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the mobileAppCategory was last modified.
    ${LastModifiedDateTime},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppCategory_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppCategory_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppCategory_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppCategory_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of group assignemenets for app configration.
.Description
The list of group assignemenets for app configration.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment1>: Contains the properties used to assign an MDM app configuration to a group.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtmobileappconfigurationassignment
#>
function Update-MgDeviceAppMgtMobileAppConfigurationAssignment {
[Alias('Update-MgDeviceAppManagementMobileAppConfigurationAssignment')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfigurationAssignment
    ${ManagedDeviceMobileAppConfigurationAssignmentId},

    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment1]
    # Contains the properties used to assign an MDM app configuration to a group.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1]))]
    [System.Collections.Hashtable]
    # Base type for assignment targets.
    ${Target},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppConfigurationAssignment_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppConfigurationAssignment_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppConfigurationAssignment_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppConfigurationAssignment_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of ManagedDeviceMobileAppConfigurationDeviceStatus.
.Description
List of ManagedDeviceMobileAppConfigurationDeviceStatus.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus1>: Contains properties, inherited properties and actions for an MDM mobile app configuration status for a device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [ComplianceGracePeriodExpirationDateTime <DateTime?>]: The DateTime when device compliance grace period expires
  [DeviceDisplayName <String>]: Device name of the DevicePolicyStatus.
  [DeviceModel <String>]: The device model that is being reported
  [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
  [Status <String>]: complianceStatus
  [UserName <String>]: The User Name that is being reported
  [UserPrincipalName <String>]: UserPrincipalName.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtmobileappconfigurationdevicestatuses
#>
function Update-MgDeviceAppMgtMobileAppConfigurationDeviceStatuses {
[Alias('Update-MgDeviceAppManagementMobileAppConfigurationDeviceStatuses')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfigurationDeviceStatus
    ${ManagedDeviceMobileAppConfigurationDeviceStatusId},

    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus1]
    # Contains properties, inherited properties and actions for an MDM mobile app configuration status for a device.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The DateTime when device compliance grace period expires
    ${ComplianceGracePeriodExpirationDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device name of the DevicePolicyStatus.
    ${DeviceDisplayName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The device model that is being reported
    ${DeviceModel},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last modified date time of the policy report.
    ${LastReportedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # complianceStatus
    ${Status},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The User Name that is being reported
    ${UserName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # UserPrincipalName.
    ${UserPrincipalName},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppConfigurationDeviceStatuses_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppConfigurationDeviceStatuses_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppConfigurationDeviceStatuses_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppConfigurationDeviceStatuses_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
App configuration device status summary.
.Description
App configuration device status summary.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary1>: Contains properties, inherited properties and actions for an MDM mobile app configuration device status summary.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [ConfigurationVersion <Int32?>]: Version of the policy for that overview
  [ErrorCount <Int32?>]: Number of error devices
  [FailedCount <Int32?>]: Number of failed devices
  [LastUpdateDateTime <DateTime?>]: Last update time
  [NotApplicableCount <Int32?>]: Number of not applicable devices
  [PendingCount <Int32?>]: Number of pending devices
  [SuccessCount <Int32?>]: Number of succeeded devices

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtmobileappconfigurationdevicestatussummary
#>
function Update-MgDeviceAppMgtMobileAppConfigurationDeviceStatusSummary {
[Alias('Update-MgDeviceAppManagementMobileAppConfigurationDeviceStatusSummary')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary1]
    # Contains properties, inherited properties and actions for an MDM mobile app configuration device status summary.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Version of the policy for that overview
    ${ConfigurationVersion},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of error devices
    ${ErrorCount},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of failed devices
    ${FailedCount},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last update time
    ${LastUpdateDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of not applicable devices
    ${NotApplicableCount},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of pending devices
    ${PendingCount},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of succeeded devices
    ${SuccessCount},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppConfigurationDeviceStatusSummary_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppConfigurationDeviceStatusSummary_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppConfigurationDeviceStatusSummary_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppConfigurationDeviceStatusSummary_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of ManagedDeviceMobileAppConfigurationUserStatus.
.Description
List of ManagedDeviceMobileAppConfigurationUserStatus.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus>: Contains properties, inherited properties and actions for an MDM mobile app configuration status for a user.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [DevicesCount <Int32?>]: Devices count for that user.
  [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
  [Status <String>]: complianceStatus
  [UserDisplayName <String>]: User name of the DevicePolicyStatus.
  [UserPrincipalName <String>]: UserPrincipalName.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtmobileappconfigurationuserstatuses
#>
function Update-MgDeviceAppMgtMobileAppConfigurationUserStatuses {
[Alias('Update-MgDeviceAppManagementMobileAppConfigurationUserStatuses')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfigurationUserStatus
    ${ManagedDeviceMobileAppConfigurationUserStatusId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus]
    # Contains properties, inherited properties and actions for an MDM mobile app configuration status for a user.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Devices count for that user.
    ${DevicesCount},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last modified date time of the policy report.
    ${LastReportedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # complianceStatus
    ${Status},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # User name of the DevicePolicyStatus.
    ${UserDisplayName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # UserPrincipalName.
    ${UserPrincipalName},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppConfigurationUserStatuses_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppConfigurationUserStatuses_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppConfigurationUserStatuses_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppConfigurationUserStatuses_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
App configuration user status summary.
.Description
App configuration user status summary.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary1>: Contains properties, inherited properties and actions for an MDM mobile app configuration user status summary.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [ConfigurationVersion <Int32?>]: Version of the policy for that overview
  [ErrorCount <Int32?>]: Number of error Users
  [FailedCount <Int32?>]: Number of failed Users
  [LastUpdateDateTime <DateTime?>]: Last update time
  [NotApplicableCount <Int32?>]: Number of not applicable users
  [PendingCount <Int32?>]: Number of pending Users
  [SuccessCount <Int32?>]: Number of succeeded Users

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtmobileappconfigurationuserstatussummary
#>
function Update-MgDeviceAppMgtMobileAppConfigurationUserStatusSummary {
[Alias('Update-MgDeviceAppManagementMobileAppConfigurationUserStatusSummary')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary1]
    # Contains properties, inherited properties and actions for an MDM mobile app configuration user status summary.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Version of the policy for that overview
    ${ConfigurationVersion},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of error Users
    ${ErrorCount},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of failed Users
    ${FailedCount},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last update time
    ${LastUpdateDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of not applicable users
    ${NotApplicableCount},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of pending Users
    ${PendingCount},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Number of succeeded Users
    ${SuccessCount},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppConfigurationUserStatusSummary_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppConfigurationUserStatusSummary_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppConfigurationUserStatusSummary_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppConfigurationUserStatusSummary_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The Managed Device Mobile Application Configurations.
.Description
The Managed Device Mobile Application Configurations.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfiguration1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment1[]>: The list of group assignemenets for app configration.
  [Id <String>]: Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphManagedDeviceMobileAppConfiguration1>: An abstract class for Mobile app configuration for enrolled devices.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [Assignments <IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment1[]>]: The list of group assignemenets for app configration.
    [Id <String>]: Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [CreatedDateTime <DateTime?>]: DateTime the object was created.
  [Description <String>]: Admin provided description of the Device Configuration.
  [DeviceStatusSummary <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary1>]: Contains properties, inherited properties and actions for an MDM mobile app configuration device status summary.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: Read-only.
    [ConfigurationVersion <Int32?>]: Version of the policy for that overview
    [ErrorCount <Int32?>]: Number of error devices
    [FailedCount <Int32?>]: Number of failed devices
    [LastUpdateDateTime <DateTime?>]: Last update time
    [NotApplicableCount <Int32?>]: Number of not applicable devices
    [PendingCount <Int32?>]: Number of pending devices
    [SuccessCount <Int32?>]: Number of succeeded devices
  [DeviceStatuses <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus1[]>]: List of ManagedDeviceMobileAppConfigurationDeviceStatus.
    [Id <String>]: Read-only.
    [ComplianceGracePeriodExpirationDateTime <DateTime?>]: The DateTime when device compliance grace period expires
    [DeviceDisplayName <String>]: Device name of the DevicePolicyStatus.
    [DeviceModel <String>]: The device model that is being reported
    [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
    [Status <String>]: complianceStatus
    [UserName <String>]: The User Name that is being reported
    [UserPrincipalName <String>]: UserPrincipalName.
  [DisplayName <String>]: Admin provided name of the device configuration.
  [LastModifiedDateTime <DateTime?>]: DateTime the object was last modified.
  [TargetedMobileApps <String[]>]: the associated app.
  [UserStatusSummary <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary1>]: Contains properties, inherited properties and actions for an MDM mobile app configuration user status summary.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: Read-only.
    [ConfigurationVersion <Int32?>]: Version of the policy for that overview
    [ErrorCount <Int32?>]: Number of error Users
    [FailedCount <Int32?>]: Number of failed Users
    [LastUpdateDateTime <DateTime?>]: Last update time
    [NotApplicableCount <Int32?>]: Number of not applicable users
    [PendingCount <Int32?>]: Number of pending Users
    [SuccessCount <Int32?>]: Number of succeeded Users
  [UserStatuses <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus[]>]: List of ManagedDeviceMobileAppConfigurationUserStatus.
    [Id <String>]: Read-only.
    [DevicesCount <Int32?>]: Devices count for that user.
    [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
    [Status <String>]: complianceStatus
    [UserDisplayName <String>]: User name of the DevicePolicyStatus.
    [UserPrincipalName <String>]: UserPrincipalName.
  [Version <Int32?>]: Version of the device configuration.

DEVICESTATUSES <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus1[]>: List of ManagedDeviceMobileAppConfigurationDeviceStatus.
  [Id <String>]: Read-only.
  [ComplianceGracePeriodExpirationDateTime <DateTime?>]: The DateTime when device compliance grace period expires
  [DeviceDisplayName <String>]: Device name of the DevicePolicyStatus.
  [DeviceModel <String>]: The device model that is being reported
  [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
  [Status <String>]: complianceStatus
  [UserName <String>]: The User Name that is being reported
  [UserPrincipalName <String>]: UserPrincipalName.

DEVICESTATUSSUMMARY <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary1>: Contains properties, inherited properties and actions for an MDM mobile app configuration device status summary.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [ConfigurationVersion <Int32?>]: Version of the policy for that overview
  [ErrorCount <Int32?>]: Number of error devices
  [FailedCount <Int32?>]: Number of failed devices
  [LastUpdateDateTime <DateTime?>]: Last update time
  [NotApplicableCount <Int32?>]: Number of not applicable devices
  [PendingCount <Int32?>]: Number of pending devices
  [SuccessCount <Int32?>]: Number of succeeded devices

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction

USERSTATUSES <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus[]>: List of ManagedDeviceMobileAppConfigurationUserStatus.
  [Id <String>]: Read-only.
  [DevicesCount <Int32?>]: Devices count for that user.
  [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
  [Status <String>]: complianceStatus
  [UserDisplayName <String>]: User name of the DevicePolicyStatus.
  [UserPrincipalName <String>]: UserPrincipalName.

USERSTATUSSUMMARY <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary1>: Contains properties, inherited properties and actions for an MDM mobile app configuration user status summary.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [ConfigurationVersion <Int32?>]: Version of the policy for that overview
  [ErrorCount <Int32?>]: Number of error Users
  [FailedCount <Int32?>]: Number of failed Users
  [LastUpdateDateTime <DateTime?>]: Last update time
  [NotApplicableCount <Int32?>]: Number of not applicable users
  [PendingCount <Int32?>]: Number of pending Users
  [SuccessCount <Int32?>]: Number of succeeded Users
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtmobileappconfiguration
#>
function Update-MgDeviceAppMgtMobileAppConfiguration {
[Alias('Update-MgDeviceAppManagementMobileAppConfiguration')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDeviceMobileAppConfiguration
    ${ManagedDeviceMobileAppConfigurationId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfiguration1]
    # An abstract class for Mobile app configuration for enrolled devices.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment1[]]
    # The list of group assignemenets for app configration.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # DateTime the object was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Admin provided description of the Device Configuration.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary1]
    # Contains properties, inherited properties and actions for an MDM mobile app configuration device status summary.
    # To construct, see NOTES section for DEVICESTATUSSUMMARY properties and create a hash table.
    ${DeviceStatusSummary},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus1[]]
    # List of ManagedDeviceMobileAppConfigurationDeviceStatus.
    # To construct, see NOTES section for DEVICESTATUSES properties and create a hash table.
    ${DeviceStatuses},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Admin provided name of the device configuration.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # DateTime the object was last modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String[]]
    # the associated app.
    ${TargetedMobileApps},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary1]
    # Contains properties, inherited properties and actions for an MDM mobile app configuration user status summary.
    # To construct, see NOTES section for USERSTATUSSUMMARY properties and create a hash table.
    ${UserStatusSummary},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus[]]
    # List of ManagedDeviceMobileAppConfigurationUserStatus.
    # To construct, see NOTES section for USERSTATUSES properties and create a hash table.
    ${UserStatuses},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Version of the device configuration.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppConfiguration_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppConfiguration_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppConfiguration_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileAppConfiguration_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The mobile apps.
.Description
The mobile apps.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileApp1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphMobileAppAssignment1[]>: The list of group assignments for this mobile app.
  [Id <String>]: Read-only.
  [Intent <String>]: Possible values for the install intent chosen by the admin.
  [Settings <IMicrosoftGraphMobileAppAssignmentSettings>]: Abstract class to contain properties used to assign a mobile app to a group.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphMobileApp1>: An abstract class containing the base properties for Intune mobile apps.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [Assignments <IMicrosoftGraphMobileAppAssignment1[]>]: The list of group assignments for this mobile app.
    [Id <String>]: Read-only.
    [Intent <String>]: Possible values for the install intent chosen by the admin.
    [Settings <IMicrosoftGraphMobileAppAssignmentSettings>]: Abstract class to contain properties used to assign a mobile app to a group.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [Categories <IMicrosoftGraphMobileAppCategory[]>]: The list of categories for this app.
    [Id <String>]: Read-only.
    [DisplayName <String>]: The name of the app category.
    [LastModifiedDateTime <DateTime?>]: The date and time the mobileAppCategory was last modified.
  [CreatedDateTime <DateTime?>]: The date and time the app was created.
  [Description <String>]: The description of the app.
  [Developer <String>]: The developer of the app.
  [DisplayName <String>]: The admin provided or imported title of the app.
  [InformationUrl <String>]: The more information Url.
  [IsFeatured <Boolean?>]: The value indicating whether the app is marked as featured by the admin.
  [LargeIcon <IMicrosoftGraphMimeContent>]: Contains properties for a generic mime content.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Type <String>]: Indicates the content mime type.
    [Value <Byte[]>]: The byte array that contains the actual content.
  [LastModifiedDateTime <DateTime?>]: The date and time the app was last modified.
  [Notes <String>]: Notes for the app.
  [Owner <String>]: The owner of the app.
  [PrivacyInformationUrl <String>]: The privacy statement Url.
  [Publisher <String>]: The publisher of the app.
  [PublishingState <String>]: Indicates the publishing state of an app.

CATEGORIES <IMicrosoftGraphMobileAppCategory[]>: The list of categories for this app.
  [Id <String>]: Read-only.
  [DisplayName <String>]: The name of the app category.
  [LastModifiedDateTime <DateTime?>]: The date and time the mobileAppCategory was last modified.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction

LARGEICON <IMicrosoftGraphMimeContent>: Contains properties for a generic mime content.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Type <String>]: Indicates the content mime type.
  [Value <Byte[]>]: The byte array that contains the actual content.
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtmobileapp
#>
function Update-MgDeviceAppMgtMobileApp {
[Alias('Update-MgDeviceAppManagementMobileApp')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of mobileApp
    ${MobileAppId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileApp1]
    # An abstract class containing the base properties for Intune mobile apps.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppAssignment1[]]
    # The list of group assignments for this mobile app.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppCategory[]]
    # The list of categories for this app.
    # To construct, see NOTES section for CATEGORIES properties and create a hash table.
    ${Categories},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the app was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The description of the app.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The developer of the app.
    ${Developer},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The admin provided or imported title of the app.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The more information Url.
    ${InformationUrl},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # The value indicating whether the app is marked as featured by the admin.
    ${IsFeatured},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMimeContent]
    # Contains properties for a generic mime content.
    # To construct, see NOTES section for LARGEICON properties and create a hash table.
    ${LargeIcon},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the app was last modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Notes for the app.
    ${Notes},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The owner of the app.
    ${Owner},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The privacy statement Url.
    ${PrivacyInformationUrl},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The publisher of the app.
    ${Publisher},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Indicates the publishing state of an app.
    ${PublishingState},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileApp_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileApp_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileApp_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtMobileApp_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of apps to which the policy is deployed.
.Description
List of apps to which the policy is deployed.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedMobileApp>: The identifier for the deployment an app.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgttargetedmanagedappconfigurationapp
#>
function Update-MgDeviceAppMgtTargetedManagedAppConfigurationApp {
[Alias('Update-MgDeviceAppManagementTargetedManagedAppConfigurationApp')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedMobileApp
    ${ManagedMobileAppId},

    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp]
    # The identifier for the deployment an app.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppIdentifier]))]
    [System.Collections.Hashtable]
    # The identifier for a mobile app.
    ${MobileAppIdentifier},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtTargetedManagedAppConfigurationApp_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtTargetedManagedAppConfigurationApp_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtTargetedManagedAppConfigurationApp_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtTargetedManagedAppConfigurationApp_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
.Description
Navigation property to list of inclusion and exclusion groups to which the policy is deployed.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphTargetedManagedAppPolicyAssignment1>: The type for deployment of groups or apps.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgttargetedmanagedappconfigurationassignment
#>
function Update-MgDeviceAppMgtTargetedManagedAppConfigurationAssignment {
[Alias('Update-MgDeviceAppManagementTargetedManagedAppConfigurationAssignment')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of targetedManagedAppPolicyAssignment
    ${TargetedManagedAppPolicyAssignmentId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment1]
    # The type for deployment of groups or apps.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Runtime.Info(PossibleTypes=([Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1]))]
    [System.Collections.Hashtable]
    # Base type for assignment targets.
    ${Target},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtTargetedManagedAppConfigurationAssignment_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtTargetedManagedAppConfigurationAssignment_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtTargetedManagedAppConfigurationAssignment_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtTargetedManagedAppConfigurationAssignment_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Navigation property to deployment summary of the configuration.
.Description
Navigation property to deployment summary of the configuration.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedAppPolicyDeploymentSummary>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
  [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
    [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DisplayName <String>]: Not yet documented
  [LastRefreshTime <DateTime?>]: Not yet documented
  [Version <String>]: Version of the entity.

CONFIGURATIONDEPLOYMENTSUMMARYPERAPP <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>: Not yet documented
  [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgttargetedmanagedappconfigurationdeploymentsummary
#>
function Update-MgDeviceAppMgtTargetedManagedAppConfigurationDeploymentSummary {
[Alias('Update-MgDeviceAppManagementTargetedManagedAppConfigurationDeploymentSummary')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Not yet documented
    ${ConfigurationDeployedUserCount},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]]
    # Not yet documented
    # To construct, see NOTES section for CONFIGURATIONDEPLOYMENTSUMMARYPERAPP properties and create a hash table.
    ${ConfigurationDeploymentSummaryPerApp},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Not yet documented
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Not yet documented
    ${LastRefreshTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtTargetedManagedAppConfigurationDeploymentSummary_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtTargetedManagedAppConfigurationDeploymentSummary_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtTargetedManagedAppConfigurationDeploymentSummary_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtTargetedManagedAppConfigurationDeploymentSummary_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Targeted managed app configurations.
.Description
Targeted managed app configurations.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppConfiguration1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

APPS <IMicrosoftGraphManagedMobileApp[]>: List of apps to which the policy is deployed.
  [Id <String>]: Read-only.
  [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [Version <String>]: Version of the entity.

ASSIGNMENTS <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
  [Id <String>]: Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphTargetedManagedAppConfiguration1>: Configuration used to deliver a set of custom settings as-is to all users in the targeted security group
  [(Any) <Object>]: This indicates any property can be added to this object.
  [CustomSettings <IMicrosoftGraphKeyValuePair[]>]: A set of string key and string value pairs to be sent to apps for users to whom the configuration is scoped, unalterned by this service
    [Name <String>]: Name for this key-value pair
    [Value <String>]: Value for this key-value pair
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: Read-only.
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Id <String>]: Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>]: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    [Id <String>]: Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
  [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: Read-only.
    [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
    [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
      [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [DisplayName <String>]: Not yet documented
    [LastRefreshTime <DateTime?>]: Not yet documented
    [Version <String>]: Version of the entity.
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.

CUSTOMSETTINGS <IMicrosoftGraphKeyValuePair[]>: A set of string key and string value pairs to be sent to apps for users to whom the configuration is scoped, unalterned by this service
  [Name <String>]: Name for this key-value pair
  [Value <String>]: Value for this key-value pair

DEPLOYMENTSUMMARY <IMicrosoftGraphManagedAppPolicyDeploymentSummary>: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
  [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
    [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DisplayName <String>]: Not yet documented
  [LastRefreshTime <DateTime?>]: Not yet documented
  [Version <String>]: Version of the entity.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgttargetedmanagedappconfiguration
#>
function Update-MgDeviceAppMgtTargetedManagedAppConfiguration {
[Alias('Update-MgDeviceAppManagementTargetedManagedAppConfiguration')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of targetedManagedAppConfiguration
    ${TargetedManagedAppConfigurationId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppConfiguration1]
    # Configuration used to deliver a set of custom settings as-is to all users in the targeted security group
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedMobileApp[]]
    # List of apps to which the policy is deployed.
    # To construct, see NOTES section for APPS properties and create a hash table.
    ${Apps},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]]
    # Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphKeyValuePair[]]
    # A set of string key and string value pairs to be sent to apps for users to whom the configuration is scoped, unalterned by this service
    # To construct, see NOTES section for CUSTOMSETTINGS properties and create a hash table.
    ${CustomSettings},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Count of apps to which the current policy is deployed.
    ${DeployedAppCount},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicyDeploymentSummary]
    # The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    # To construct, see NOTES section for DEPLOYMENTSUMMARY properties and create a hash table.
    ${DeploymentSummary},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates if the policy is deployed to any inclusion groups or not.
    ${IsAssigned},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtTargetedManagedAppConfiguration_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtTargetedManagedAppConfiguration_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtTargetedManagedAppConfiguration_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtTargetedManagedAppConfiguration_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
List of Vpp tokens for this organization.
.Description
List of Vpp tokens for this organization.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphVppToken1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphVppToken1>: You purchase multiple licenses for iOS apps through the Apple Volume Purchase Program for Business or Education. This involves setting up an Apple VPP account from the Apple website and uploading the Apple VPP Business or Education token to Intune. You can then synchronize your volume purchase information with Intune and track your volume-purchased app use. You can upload multiple Apple VPP Business or Education tokens.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [AppleId <String>]: The apple Id associated with the given Apple Volume Purchase Program Token.
  [AutomaticallyUpdateApps <Boolean?>]: Whether or not apps for the VPP token will be automatically updated.
  [CountryOrRegion <String>]: Whether or not apps for the VPP token will be automatically updated.
  [ExpirationDateTime <DateTime?>]: The expiration date time of the Apple Volume Purchase Program Token.
  [LastModifiedDateTime <DateTime?>]: Last modification date time associated with the Apple Volume Purchase Program Token.
  [LastSyncDateTime <DateTime?>]: The last time when an application sync was done with the Apple volume purchase program service using the the Apple Volume Purchase Program Token.
  [LastSyncStatus <String>]: Possible sync statuses associated with an Apple Volume Purchase Program token.
  [OrganizationName <String>]: The organization associated with the Apple Volume Purchase Program Token
  [State <String>]: Possible states associated with an Apple Volume Purchase Program token.
  [Token <String>]: The Apple Volume Purchase Program Token string downloaded from the Apple Volume Purchase Program.
  [VppTokenAccountType <String>]: Possible types of an Apple Volume Purchase Program token.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtvpptoken
#>
function Update-MgDeviceAppMgtVppToken {
[Alias('Update-MgDeviceAppManagementVppToken')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of vppToken
    ${VppTokenId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphVppToken1]
    # You purchase multiple licenses for iOS apps through the Apple Volume Purchase Program for Business or Education.
    # This involves setting up an Apple VPP account from the Apple website and uploading the Apple VPP Business or Education token to Intune.
    # You can then synchronize your volume purchase information with Intune and track your volume-purchased app use.
    # You can upload multiple Apple VPP Business or Education tokens.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The apple Id associated with the given Apple Volume Purchase Program Token.
    ${AppleId},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether or not apps for the VPP token will be automatically updated.
    ${AutomaticallyUpdateApps},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Whether or not apps for the VPP token will be automatically updated.
    ${CountryOrRegion},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The expiration date time of the Apple Volume Purchase Program Token.
    ${ExpirationDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last modification date time associated with the Apple Volume Purchase Program Token.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The last time when an application sync was done with the Apple volume purchase program service using the the Apple Volume Purchase Program Token.
    ${LastSyncDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Possible sync statuses associated with an Apple Volume Purchase Program token.
    ${LastSyncStatus},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The organization associated with the Apple Volume Purchase Program Token
    ${OrganizationName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Possible states associated with an Apple Volume Purchase Program token.
    ${State},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The Apple Volume Purchase Program Token string downloaded from the Apple Volume Purchase Program.
    ${Token},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Possible types of an Apple Volume Purchase Program token.
    ${VppTokenAccountType},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtVppToken_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtVppToken_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtVppToken_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtVppToken_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Windows information protection for apps running on devices which are not MDM enrolled.
.Description
Windows information protection for apps running on devices which are not MDM enrolled.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionPolicy1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ASSIGNMENTS <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>: Navigation property to list of security groups targeted for policy.
  [Id <String>]: Read-only.
  [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [(Any) <Object>]: This indicates any property can be added to this object.

BODYPARAMETER <IMicrosoftGraphWindowsInformationProtectionPolicy1>: Policy for Windows information protection without MDM
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>]: Navigation property to list of security groups targeted for policy.
    [Id <String>]: Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [AzureRightsManagementServicesAllowed <Boolean?>]: Specifies whether to allow Azure RMS encryption for WIP
  [DataRecoveryCertificate <IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate>]: Windows Information Protection DataRecoveryCertificate
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Certificate <Byte[]>]: Data recovery Certificate
    [Description <String>]: Data recovery Certificate description
    [ExpirationDateTime <DateTime?>]: Data recovery Certificate expiration datetime
    [SubjectName <String>]: Data recovery Certificate subject name
  [EnforcementLevel <String>]: Possible values for WIP Protection enforcement levels
  [EnterpriseDomain <String>]: Primary enterprise domain
  [EnterpriseIPRanges <IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]>]: Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to
    [DisplayName <String>]: Display name
    [Ranges <IMicrosoftGraphIPRange[]>]: Collection of ip ranges
  [EnterpriseIPRangesAreAuthoritative <Boolean?>]: Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets. Default is false
  [EnterpriseInternalProxyServers <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is the comma-separated list of internal proxy servers. For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'. These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
    [DisplayName <String>]: Display name
    [Resources <String[]>]: Collection of resources
  [EnterpriseNetworkDomainNames <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
  [EnterpriseProtectedDomainNames <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: List of enterprise domains to be protected
  [EnterpriseProxiedDomains <IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]>]: Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
    [DisplayName <String>]: Display name
    [ProxiedDomains <IMicrosoftGraphProxiedDomain[]>]: Collection of proxied domains
      [IPAddressOrFqdn <String>]: The IP address or FQDN
      [Proxy <String>]: Proxy IP or FQDN
  [EnterpriseProxyServers <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is a list of proxy servers. Any server not on this list is considered non-enterprise
  [EnterpriseProxyServersAreAuthoritative <Boolean?>]: Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies. Default is false
  [ExemptAppLockerFiles <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>]: Another way to input exempt apps through xml files
    [Id <String>]: Read-only.
    [DisplayName <String>]: The friendly name
    [File <Byte[]>]: File as a byte array
    [FileHash <String>]: SHA256 hash of the file
    [Version <String>]: Version of the entity.
  [ExemptApps <IMicrosoftGraphWindowsInformationProtectionApp[]>]: Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data.
    [Denied <Boolean?>]: If true, app is denied protection or exemption.
    [Description <String>]: The app's description.
    [DisplayName <String>]: App display name.
    [ProductName <String>]: The product name.
    [PublisherName <String>]: The publisher name
  [IconsVisible <Boolean?>]: Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu. Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app
  [IndexingEncryptedStoresOrItemsBlocked <Boolean?>]: This switch is for the Windows Search Indexer, to allow or disallow indexing of items
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
  [NeutralDomainResources <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: List of domain names that can used for work or personal resource
  [ProtectedAppLockerFiles <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>]: Another way to input protected apps through xml files
  [ProtectedApps <IMicrosoftGraphWindowsInformationProtectionApp[]>]: Protected applications can access enterprise data and the data handled by those applications are protected with encryption
  [ProtectionUnderLockConfigRequired <Boolean?>]: Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured
  [RevokeOnUnenrollDisabled <Boolean?>]: This policy controls whether to revoke the WIP keys when a device unenrolls from the management service. If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment. If the keys are not revoked, there will be no revoked file cleanup subsequently.
  [RightsManagementServicesTemplateId <String>]: TemplateID GUID to use for RMS encryption. The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access
  [SmbAutoEncryptedFileExtensions <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: Read-only.
  [DaysWithoutContactBeforeUnenroll <Int32?>]: Offline interval before app data is wiped (days)
  [MdmEnrollmentUrl <String>]: Enrollment url for the MDM
  [MinutesOfInactivityBeforeDeviceLock <Int32?>]: Specifies the maximum amount of time (in minutes) allowed after the device is idle that will cause the device to become PIN or password locked.   Range is an integer X where 0 <= X <= 999.
  [NumberOfPastPinsRemembered <Int32?>]: Integer value that specifies the number of past PINs that can be associated to a user account that can't be reused. The largest number you can configure for this policy setting is 50. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then storage of previous PINs is not required. This node was added in Windows 10, version 1511. Default is 0.
  [PasswordMaximumAttemptCount <Int32?>]: The number of authentication failures allowed before the device will be wiped. A value of 0 disables device wipe functionality. Range is an integer X where 4 <= X <= 16 for desktop and 0 <= X <= 999 for mobile devices.
  [PinExpirationDays <Int32?>]: Integer value specifies the period of time (in days) that a PIN can be used before the system requires the user to change it. The largest number you can configure for this policy setting is 730. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then the user's PIN will never expire. This node was added in Windows 10, version 1511. Default is 0.
  [PinLowercaseLetters <String>]: Pin Character Requirements
  [PinMinimumLength <Int32?>]: Integer value that sets the minimum number of characters required for the PIN. Default value is 4. The lowest number you can configure for this policy setting is 4. The largest number you can configure must be less than the number configured in the Maximum PIN length policy setting or the number 127, whichever is the lowest.
  [PinSpecialCharacters <String>]: Pin Character Requirements
  [PinUppercaseLetters <String>]: Pin Character Requirements
  [RevokeOnMdmHandoffDisabled <Boolean?>]: New property in RS2, pending documentation
  [WindowsHelloForBusinessBlocked <Boolean?>]: Boolean value that sets Windows Hello for Business as a method for signing into Windows.

DATARECOVERYCERTIFICATE <IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate>: Windows Information Protection DataRecoveryCertificate
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Certificate <Byte[]>]: Data recovery Certificate
  [Description <String>]: Data recovery Certificate description
  [ExpirationDateTime <DateTime?>]: Data recovery Certificate expiration datetime
  [SubjectName <String>]: Data recovery Certificate subject name

ENTERPRISEINTERNALPROXYSERVERS <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: This is the comma-separated list of internal proxy servers. For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'. These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

ENTERPRISEIPRANGES <IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]>: Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to
  [DisplayName <String>]: Display name
  [Ranges <IMicrosoftGraphIPRange[]>]: Collection of ip ranges

ENTERPRISENETWORKDOMAINNAMES <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

ENTERPRISEPROTECTEDDOMAINNAMES <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: List of enterprise domains to be protected
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

ENTERPRISEPROXIEDDOMAINS <IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]>: Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
  [DisplayName <String>]: Display name
  [ProxiedDomains <IMicrosoftGraphProxiedDomain[]>]: Collection of proxied domains
    [IPAddressOrFqdn <String>]: The IP address or FQDN
    [Proxy <String>]: Proxy IP or FQDN

ENTERPRISEPROXYSERVERS <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: This is a list of proxy servers. Any server not on this list is considered non-enterprise
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

EXEMPTAPPLOCKERFILES <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>: Another way to input exempt apps through xml files
  [Id <String>]: Read-only.
  [DisplayName <String>]: The friendly name
  [File <Byte[]>]: File as a byte array
  [FileHash <String>]: SHA256 hash of the file
  [Version <String>]: Version of the entity.

EXEMPTAPPS <IMicrosoftGraphWindowsInformationProtectionApp[]>: Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data.
  [Denied <Boolean?>]: If true, app is denied protection or exemption.
  [Description <String>]: The app's description.
  [DisplayName <String>]: App display name.
  [ProductName <String>]: The product name.
  [PublisherName <String>]: The publisher name

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction

NEUTRALDOMAINRESOURCES <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: List of domain names that can used for work or personal resource
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources

PROTECTEDAPPLOCKERFILES <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>: Another way to input protected apps through xml files
  [Id <String>]: Read-only.
  [DisplayName <String>]: The friendly name
  [File <Byte[]>]: File as a byte array
  [FileHash <String>]: SHA256 hash of the file
  [Version <String>]: Version of the entity.

PROTECTEDAPPS <IMicrosoftGraphWindowsInformationProtectionApp[]>: Protected applications can access enterprise data and the data handled by those applications are protected with encryption
  [Denied <Boolean?>]: If true, app is denied protection or exemption.
  [Description <String>]: The app's description.
  [DisplayName <String>]: App display name.
  [ProductName <String>]: The product name.
  [PublisherName <String>]: The publisher name

SMBAUTOENCRYPTEDFILEEXTENSIONS <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>: Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
  [DisplayName <String>]: Display name
  [Resources <String[]>]: Collection of resources
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgtwindowinformationprotectionpolicy
#>
function Update-MgDeviceAppMgtWindowInformationProtectionPolicy {
[Alias('Update-MgDeviceAppManagementWindowInformationProtectionPolicy')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of windowsInformationProtectionPolicy
    ${WindowsInformationProtectionPolicyId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionPolicy1]
    # Policy for Windows information protection without MDM
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]]
    # Navigation property to list of security groups targeted for policy.
    # To construct, see NOTES section for ASSIGNMENTS properties and create a hash table.
    ${Assignments},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Specifies whether to allow Azure RMS encryption for WIP
    ${AzureRightsManagementServicesAllowed},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time the policy was created.
    ${CreatedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate]
    # Windows Information Protection DataRecoveryCertificate
    # To construct, see NOTES section for DATARECOVERYCERTIFICATE properties and create a hash table.
    ${DataRecoveryCertificate},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Offline interval before app data is wiped (days)
    ${DaysWithoutContactBeforeUnenroll},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The policy's description.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Policy display name.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Possible values for WIP Protection enforcement levels
    ${EnforcementLevel},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Primary enterprise domain
    ${EnterpriseDomain},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]]
    # Sets the enterprise IP ranges that define the computers in the enterprise network.
    # Data that comes from those computers will be considered part of the enterprise and protected.
    # These locations will be considered a safe destination for enterprise data to be shared to
    # To construct, see NOTES section for ENTERPRISEIPRANGES properties and create a hash table.
    ${EnterpriseIPRanges},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets.
    # Default is false
    ${EnterpriseIPRangesAreAuthoritative},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # This is the comma-separated list of internal proxy servers.
    # For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'.
    # These proxies have been configured by the admin to connect to specific resources on the Internet.
    # They are considered to be enterprise network locations.
    # The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
    # To construct, see NOTES section for ENTERPRISEINTERNALPROXYSERVERS properties and create a hash table.
    ${EnterpriseInternalProxyServers},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # This is the list of domains that comprise the boundaries of the enterprise.
    # Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
    # To construct, see NOTES section for ENTERPRISENETWORKDOMAINNAMES properties and create a hash table.
    ${EnterpriseNetworkDomainNames},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # List of enterprise domains to be protected
    # To construct, see NOTES section for ENTERPRISEPROTECTEDDOMAINNAMES properties and create a hash table.
    ${EnterpriseProtectedDomainNames},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]]
    # Contains a list of Enterprise resource domains hosted in the cloud that need to be protected.
    # Connections to these resources are considered enterprise data.
    # If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80).
    # A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
    # To construct, see NOTES section for ENTERPRISEPROXIEDDOMAINS properties and create a hash table.
    ${EnterpriseProxiedDomains},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # This is a list of proxy servers.
    # Any server not on this list is considered non-enterprise
    # To construct, see NOTES section for ENTERPRISEPROXYSERVERS properties and create a hash table.
    ${EnterpriseProxyServers},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies.
    # Default is false
    ${EnterpriseProxyServersAreAuthoritative},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]]
    # Another way to input exempt apps through xml files
    # To construct, see NOTES section for EXEMPTAPPLOCKERFILES properties and create a hash table.
    ${ExemptAppLockerFiles},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionApp[]]
    # Exempt applications can also access enterprise data, but the data handled by those applications are not protected.
    # This is because some critical enterprise applications may have compatibility problems with encrypted data.
    # To construct, see NOTES section for EXEMPTAPPS properties and create a hash table.
    ${ExemptApps},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu.
    # Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app
    ${IconsVisible},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # This switch is for the Windows Search Indexer, to allow or disallow indexing of items
    ${IndexingEncryptedStoresOrItemsBlocked},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Indicates if the policy is deployed to any inclusion groups or not.
    ${IsAssigned},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the policy was modified.
    ${LastModifiedDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Enrollment url for the MDM
    ${MdmEnrollmentUrl},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Specifies the maximum amount of time (in minutes) allowed after the device is idle that will cause the device to become PIN or password locked.
    # Range is an integer X where 0 <= X <= 999.
    ${MinutesOfInactivityBeforeDeviceLock},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # List of domain names that can used for work or personal resource
    # To construct, see NOTES section for NEUTRALDOMAINRESOURCES properties and create a hash table.
    ${NeutralDomainResources},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Integer value that specifies the number of past PINs that can be associated to a user account that can't be reused.
    # The largest number you can configure for this policy setting is 50.
    # The lowest number you can configure for this policy setting is 0.
    # If this policy is set to 0, then storage of previous PINs is not required.
    # This node was added in Windows 10, version 1511.
    # Default is 0.
    ${NumberOfPastPinsRemembered},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # The number of authentication failures allowed before the device will be wiped.
    # A value of 0 disables device wipe functionality.
    # Range is an integer X where 4 <= X <= 16 for desktop and 0 <= X <= 999 for mobile devices.
    ${PasswordMaximumAttemptCount},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Integer value specifies the period of time (in days) that a PIN can be used before the system requires the user to change it.
    # The largest number you can configure for this policy setting is 730.
    # The lowest number you can configure for this policy setting is 0.
    # If this policy is set to 0, then the user's PIN will never expire.
    # This node was added in Windows 10, version 1511.
    # Default is 0.
    ${PinExpirationDays},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Pin Character Requirements
    ${PinLowercaseLetters},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Integer value that sets the minimum number of characters required for the PIN.
    # Default value is 4.
    # The lowest number you can configure for this policy setting is 4.
    # The largest number you can configure must be less than the number configured in the Maximum PIN length policy setting or the number 127, whichever is the lowest.
    ${PinMinimumLength},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Pin Character Requirements
    ${PinSpecialCharacters},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Pin Character Requirements
    ${PinUppercaseLetters},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]]
    # Another way to input protected apps through xml files
    # To construct, see NOTES section for PROTECTEDAPPLOCKERFILES properties and create a hash table.
    ${ProtectedAppLockerFiles},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionApp[]]
    # Protected applications can access enterprise data and the data handled by those applications are protected with encryption
    # To construct, see NOTES section for PROTECTEDAPPS properties and create a hash table.
    ${ProtectedApps},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured
    ${ProtectionUnderLockConfigRequired},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # New property in RS2, pending documentation
    ${RevokeOnMdmHandoffDisabled},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # This policy controls whether to revoke the WIP keys when a device unenrolls from the management service.
    # If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment.
    # If the keys are not revoked, there will be no revoked file cleanup subsequently.
    ${RevokeOnUnenrollDisabled},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # TemplateID GUID to use for RMS encryption.
    # The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access
    ${RightsManagementServicesTemplateId},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionResourceCollection[]]
    # Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
    # To construct, see NOTES section for SMBAUTOENCRYPTEDFILEEXTENSIONS properties and create a hash table.
    ${SmbAutoEncryptedFileExtensions},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Version of the entity.
    ${Version},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Boolean value that sets Windows Hello for Business as a method for signing into Windows.
    ${WindowsHelloForBusinessBlocked},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtWindowInformationProtectionPolicy_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtWindowInformationProtectionPolicy_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtWindowInformationProtectionPolicy_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgtWindowInformationProtectionPolicy_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Update deviceAppManagement
.Description
Update deviceAppManagement

.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAppManagement1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

ANDROIDMANAGEDAPPPROTECTIONS <IMicrosoftGraphAndroidManagedAppProtection1[]>: Android managed app policies.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>]: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    [Id <String>]: Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
  [AllowedDataStorageLocations <String[]>]: Data storage locations where a user may store managed data.
  [AllowedInboundDataTransferSources <String>]: Data can be transferred from/to these classes of apps
  [AllowedOutboundClipboardSharingLevel <String>]: Represents the level to which the device's clipboard may be shared between apps
  [AllowedOutboundDataTransferDestinations <String>]: Data can be transferred from/to these classes of apps
  [ContactSyncBlocked <Boolean?>]: Indicates whether contacts can be synced to the user's device.
  [DataBackupBlocked <Boolean?>]: Indicates whether the backup of a managed app's data is blocked.
  [DeviceComplianceRequired <Boolean?>]: Indicates whether device compliance is required.
  [DisableAppPinIfDevicePinIsSet <Boolean?>]: Indicates whether use of the app pin is required if the device pin is set.
  [FingerprintBlocked <Boolean?>]: Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
  [ManagedBrowser <String>]: Type of managed browser
  [ManagedBrowserToOpenLinksRequired <Boolean?>]: Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
  [MaximumPinRetries <Int32?>]: Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
  [MinimumPinLength <Int32?>]: Minimum pin length required for an app-level pin if PinRequired is set to True
  [MinimumRequiredAppVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumRequiredOSVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumWarningAppVersion <String>]: Versions less than the specified version will result in warning message on the managed app.
  [MinimumWarningOSVersion <String>]: Versions less than the specified version will result in warning message on the managed app from accessing company data.
  [OrganizationalCredentialsRequired <Boolean?>]: Indicates whether organizational credentials are required for app use.
  [PeriodBeforePinReset <TimeSpan?>]: TimePeriod before the all-level pin must be reset if PinRequired is set to True.
  [PeriodOfflineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is not connected to the internet.
  [PeriodOfflineBeforeWipeIsEnforced <TimeSpan?>]: The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
  [PeriodOnlineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is connected to the internet.
  [PinCharacterSet <String>]: Character set which is to be used for a user's app PIN
  [PinRequired <Boolean?>]: Indicates whether an app-level pin is required.
  [PrintBlocked <Boolean?>]: Indicates whether printing is allowed from managed apps.
  [SaveAsBlocked <Boolean?>]: Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
  [SimplePinBlocked <Boolean?>]: Indicates whether simplePin is blocked.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: Read-only.
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Id <String>]: Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.
  [CustomBrowserDisplayName <String>]: Friendly name of the preferred custom browser to open weblink on Android. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
  [CustomBrowserPackageId <String>]: Unique identifier of the preferred custom browser to open weblink on Android. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
  [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
  [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: Read-only.
    [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
    [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
      [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [DisplayName <String>]: Not yet documented
    [LastRefreshTime <DateTime?>]: Not yet documented
    [Version <String>]: Version of the entity.
  [DisableAppEncryptionIfDeviceEncryptionIsEnabled <Boolean?>]: When this setting is enabled, app level encryption is disabled if device level encryption is enabled
  [EncryptAppData <Boolean?>]: Indicates whether application data for managed apps should be encrypted
  [MinimumRequiredPatchVersion <String>]: Define the oldest required Android security patch level a user can have to gain secure access to the app.
  [MinimumWarningPatchVersion <String>]: Define the oldest recommended Android security patch level a user can have for secure access to the app.
  [ScreenCaptureBlocked <Boolean?>]: Indicates whether a managed user can take screen captures of managed apps

BODYPARAMETER <IMicrosoftGraphDeviceAppManagement1>: Singleton entity that acts as a container for all device app management functionality.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [AndroidManagedAppProtections <IMicrosoftGraphAndroidManagedAppProtection1[]>]: Android managed app policies.
    [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>]: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
      [Id <String>]: Read-only.
      [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
        [(Any) <Object>]: This indicates any property can be added to this object.
    [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
    [AllowedDataStorageLocations <String[]>]: Data storage locations where a user may store managed data.
    [AllowedInboundDataTransferSources <String>]: Data can be transferred from/to these classes of apps
    [AllowedOutboundClipboardSharingLevel <String>]: Represents the level to which the device's clipboard may be shared between apps
    [AllowedOutboundDataTransferDestinations <String>]: Data can be transferred from/to these classes of apps
    [ContactSyncBlocked <Boolean?>]: Indicates whether contacts can be synced to the user's device.
    [DataBackupBlocked <Boolean?>]: Indicates whether the backup of a managed app's data is blocked.
    [DeviceComplianceRequired <Boolean?>]: Indicates whether device compliance is required.
    [DisableAppPinIfDevicePinIsSet <Boolean?>]: Indicates whether use of the app pin is required if the device pin is set.
    [FingerprintBlocked <Boolean?>]: Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
    [ManagedBrowser <String>]: Type of managed browser
    [ManagedBrowserToOpenLinksRequired <Boolean?>]: Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
    [MaximumPinRetries <Int32?>]: Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
    [MinimumPinLength <Int32?>]: Minimum pin length required for an app-level pin if PinRequired is set to True
    [MinimumRequiredAppVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
    [MinimumRequiredOSVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
    [MinimumWarningAppVersion <String>]: Versions less than the specified version will result in warning message on the managed app.
    [MinimumWarningOSVersion <String>]: Versions less than the specified version will result in warning message on the managed app from accessing company data.
    [OrganizationalCredentialsRequired <Boolean?>]: Indicates whether organizational credentials are required for app use.
    [PeriodBeforePinReset <TimeSpan?>]: TimePeriod before the all-level pin must be reset if PinRequired is set to True.
    [PeriodOfflineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is not connected to the internet.
    [PeriodOfflineBeforeWipeIsEnforced <TimeSpan?>]: The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
    [PeriodOnlineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is connected to the internet.
    [PinCharacterSet <String>]: Character set which is to be used for a user's app PIN
    [PinRequired <Boolean?>]: Indicates whether an app-level pin is required.
    [PrintBlocked <Boolean?>]: Indicates whether printing is allowed from managed apps.
    [SaveAsBlocked <Boolean?>]: Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
    [SimplePinBlocked <Boolean?>]: Indicates whether simplePin is blocked.
    [CreatedDateTime <DateTime?>]: The date and time the policy was created.
    [Description <String>]: The policy's description.
    [DisplayName <String>]: Policy display name.
    [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
    [Version <String>]: Version of the entity.
    [Id <String>]: Read-only.
    [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
      [Id <String>]: Read-only.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
        [(Any) <Object>]: This indicates any property can be added to this object.
      [Version <String>]: Version of the entity.
    [CustomBrowserDisplayName <String>]: Friendly name of the preferred custom browser to open weblink on Android. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
    [CustomBrowserPackageId <String>]: Unique identifier of the preferred custom browser to open weblink on Android. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
    [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
    [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: Read-only.
      [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
      [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
        [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
        [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [DisplayName <String>]: Not yet documented
      [LastRefreshTime <DateTime?>]: Not yet documented
      [Version <String>]: Version of the entity.
    [DisableAppEncryptionIfDeviceEncryptionIsEnabled <Boolean?>]: When this setting is enabled, app level encryption is disabled if device level encryption is enabled
    [EncryptAppData <Boolean?>]: Indicates whether application data for managed apps should be encrypted
    [MinimumRequiredPatchVersion <String>]: Define the oldest required Android security patch level a user can have to gain secure access to the app.
    [MinimumWarningPatchVersion <String>]: Define the oldest recommended Android security patch level a user can have for secure access to the app.
    [ScreenCaptureBlocked <Boolean?>]: Indicates whether a managed user can take screen captures of managed apps
  [DefaultManagedAppProtections <IMicrosoftGraphDefaultManagedAppProtection1[]>]: Default managed app policies.
    [AllowedDataStorageLocations <String[]>]: Data storage locations where a user may store managed data.
    [AllowedInboundDataTransferSources <String>]: Data can be transferred from/to these classes of apps
    [AllowedOutboundClipboardSharingLevel <String>]: Represents the level to which the device's clipboard may be shared between apps
    [AllowedOutboundDataTransferDestinations <String>]: Data can be transferred from/to these classes of apps
    [ContactSyncBlocked <Boolean?>]: Indicates whether contacts can be synced to the user's device.
    [DataBackupBlocked <Boolean?>]: Indicates whether the backup of a managed app's data is blocked.
    [DeviceComplianceRequired <Boolean?>]: Indicates whether device compliance is required.
    [DisableAppPinIfDevicePinIsSet <Boolean?>]: Indicates whether use of the app pin is required if the device pin is set.
    [FingerprintBlocked <Boolean?>]: Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
    [ManagedBrowser <String>]: Type of managed browser
    [ManagedBrowserToOpenLinksRequired <Boolean?>]: Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
    [MaximumPinRetries <Int32?>]: Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
    [MinimumPinLength <Int32?>]: Minimum pin length required for an app-level pin if PinRequired is set to True
    [MinimumRequiredAppVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
    [MinimumRequiredOSVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
    [MinimumWarningAppVersion <String>]: Versions less than the specified version will result in warning message on the managed app.
    [MinimumWarningOSVersion <String>]: Versions less than the specified version will result in warning message on the managed app from accessing company data.
    [OrganizationalCredentialsRequired <Boolean?>]: Indicates whether organizational credentials are required for app use.
    [PeriodBeforePinReset <TimeSpan?>]: TimePeriod before the all-level pin must be reset if PinRequired is set to True.
    [PeriodOfflineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is not connected to the internet.
    [PeriodOfflineBeforeWipeIsEnforced <TimeSpan?>]: The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
    [PeriodOnlineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is connected to the internet.
    [PinCharacterSet <String>]: Character set which is to be used for a user's app PIN
    [PinRequired <Boolean?>]: Indicates whether an app-level pin is required.
    [PrintBlocked <Boolean?>]: Indicates whether printing is allowed from managed apps.
    [SaveAsBlocked <Boolean?>]: Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
    [SimplePinBlocked <Boolean?>]: Indicates whether simplePin is blocked.
    [CreatedDateTime <DateTime?>]: The date and time the policy was created.
    [Description <String>]: The policy's description.
    [DisplayName <String>]: Policy display name.
    [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
    [Version <String>]: Version of the entity.
    [Id <String>]: Read-only.
    [AppDataEncryptionType <String>]: Represents the level to which app data is encrypted for managed apps
    [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [CustomSettings <IMicrosoftGraphKeyValuePair[]>]: A set of string key and string value pairs to be sent to the affected users, unalterned by this service
      [Name <String>]: Name for this key-value pair
      [Value <String>]: Value for this key-value pair
    [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
    [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [DisableAppEncryptionIfDeviceEncryptionIsEnabled <Boolean?>]: When this setting is enabled, app level encryption is disabled if device level encryption is enabled. (Android only)
    [EncryptAppData <Boolean?>]: Indicates whether managed-app data should be encrypted. (Android only)
    [FaceIdBlocked <Boolean?>]: Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True. (iOS Only)
    [MinimumRequiredPatchVersion <String>]: Define the oldest required Android security patch level a user can have to gain secure access to the app. (Android only)
    [MinimumRequiredSdkVersion <String>]: Versions less than the specified version will block the managed app from accessing company data. (iOS Only)
    [MinimumWarningPatchVersion <String>]: Define the oldest recommended Android security patch level a user can have for secure access to the app. (Android only)
    [ScreenCaptureBlocked <Boolean?>]: Indicates whether screen capture is blocked. (Android only)
  [IosManagedAppProtections <IMicrosoftGraphIosManagedAppProtection1[]>]: iOS managed app policies.
    [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>]: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
    [AllowedDataStorageLocations <String[]>]: Data storage locations where a user may store managed data.
    [AllowedInboundDataTransferSources <String>]: Data can be transferred from/to these classes of apps
    [AllowedOutboundClipboardSharingLevel <String>]: Represents the level to which the device's clipboard may be shared between apps
    [AllowedOutboundDataTransferDestinations <String>]: Data can be transferred from/to these classes of apps
    [ContactSyncBlocked <Boolean?>]: Indicates whether contacts can be synced to the user's device.
    [DataBackupBlocked <Boolean?>]: Indicates whether the backup of a managed app's data is blocked.
    [DeviceComplianceRequired <Boolean?>]: Indicates whether device compliance is required.
    [DisableAppPinIfDevicePinIsSet <Boolean?>]: Indicates whether use of the app pin is required if the device pin is set.
    [FingerprintBlocked <Boolean?>]: Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
    [ManagedBrowser <String>]: Type of managed browser
    [ManagedBrowserToOpenLinksRequired <Boolean?>]: Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
    [MaximumPinRetries <Int32?>]: Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
    [MinimumPinLength <Int32?>]: Minimum pin length required for an app-level pin if PinRequired is set to True
    [MinimumRequiredAppVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
    [MinimumRequiredOSVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
    [MinimumWarningAppVersion <String>]: Versions less than the specified version will result in warning message on the managed app.
    [MinimumWarningOSVersion <String>]: Versions less than the specified version will result in warning message on the managed app from accessing company data.
    [OrganizationalCredentialsRequired <Boolean?>]: Indicates whether organizational credentials are required for app use.
    [PeriodBeforePinReset <TimeSpan?>]: TimePeriod before the all-level pin must be reset if PinRequired is set to True.
    [PeriodOfflineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is not connected to the internet.
    [PeriodOfflineBeforeWipeIsEnforced <TimeSpan?>]: The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
    [PeriodOnlineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is connected to the internet.
    [PinCharacterSet <String>]: Character set which is to be used for a user's app PIN
    [PinRequired <Boolean?>]: Indicates whether an app-level pin is required.
    [PrintBlocked <Boolean?>]: Indicates whether printing is allowed from managed apps.
    [SaveAsBlocked <Boolean?>]: Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
    [SimplePinBlocked <Boolean?>]: Indicates whether simplePin is blocked.
    [CreatedDateTime <DateTime?>]: The date and time the policy was created.
    [Description <String>]: The policy's description.
    [DisplayName <String>]: Policy display name.
    [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
    [Version <String>]: Version of the entity.
    [Id <String>]: Read-only.
    [AppDataEncryptionType <String>]: Represents the level to which app data is encrypted for managed apps
    [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [CustomBrowserProtocol <String>]: A custom browser protocol to open weblink on iOS. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
    [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
    [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [FaceIdBlocked <Boolean?>]: Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True.
    [MinimumRequiredSdkVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [IsEnabledForMicrosoftStoreForBusiness <Boolean?>]: Whether the account is enabled for syncing applications from the Microsoft Store for Business.
  [ManagedAppPolicies <IMicrosoftGraphManagedAppPolicy1[]>]: Managed app policies.
    [Id <String>]: Read-only.
    [CreatedDateTime <DateTime?>]: The date and time the policy was created.
    [Description <String>]: The policy's description.
    [DisplayName <String>]: Policy display name.
    [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
    [Version <String>]: Version of the entity.
  [ManagedAppRegistrations <IMicrosoftGraphManagedAppRegistration1[]>]: The managed app registrations.
    [Id <String>]: Read-only.
    [AppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [ApplicationVersion <String>]: App version
    [AppliedPolicies <IMicrosoftGraphManagedAppPolicy1[]>]: Zero or more policys already applied on the registered app when it last synchronized with managment service.
    [CreatedDateTime <DateTime?>]: Date and time of creation
    [DeviceName <String>]: Host device name
    [DeviceTag <String>]: App management SDK generated tag, which helps relate apps hosted on the same device. Not guaranteed to relate apps in all conditions.
    [DeviceType <String>]: Host device type
    [FlaggedReasons <String[]>]: Zero or more reasons an app registration is flagged. E.g. app running on rooted device
    [IntendedPolicies <IMicrosoftGraphManagedAppPolicy1[]>]: Zero or more policies admin intended for the app as of now.
    [LastSyncDateTime <DateTime?>]: Date and time of last the app synced with management service.
    [ManagementSdkVersion <String>]: App management SDK version
    [Operations <IMicrosoftGraphManagedAppOperation[]>]: Zero or more long running operations triggered on the app registration.
      [Id <String>]: Read-only.
      [DisplayName <String>]: The operation name.
      [LastModifiedDateTime <DateTime?>]: The last time the app operation was modified.
      [State <String>]: The current state of the operation
      [Version <String>]: Version of the entity.
    [PlatformVersion <String>]: Operating System version
    [UserId <String>]: The user Id to who this app registration belongs.
    [Version <String>]: Version of the entity.
  [ManagedAppStatuses <IMicrosoftGraphManagedAppStatus[]>]: The managed app statuses.
    [Id <String>]: Read-only.
    [DisplayName <String>]: Friendly name of the status report.
    [Version <String>]: Version of the entity.
  [ManagedEBooks <IMicrosoftGraphManagedEBook1[]>]: The Managed eBook.
    [Id <String>]: Read-only.
    [Assignments <IMicrosoftGraphManagedEBookAssignment1[]>]: The list of assignments for this eBook.
      [Id <String>]: Read-only.
      [InstallIntent <String>]: Possible values for the install intent chosen by the admin.
      [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [CreatedDateTime <DateTime?>]: The date and time when the eBook file was created.
    [Description <String>]: Description.
    [DeviceStates <IMicrosoftGraphDeviceInstallState[]>]: The list of installation states for this eBook.
      [Id <String>]: Read-only.
      [DeviceId <String>]: Device Id.
      [DeviceName <String>]: Device name.
      [ErrorCode <String>]: The error code for install failures.
      [InstallState <String>]: Possible values for install state.
      [LastSyncDateTime <DateTime?>]: Last sync date and time.
      [OSDescription <String>]: OS Description.
      [OSVersion <String>]: OS Version.
      [UserName <String>]: Device User Name.
    [DisplayName <String>]: Name of the eBook.
    [InformationUrl <String>]: The more information Url.
    [InstallSummary <IMicrosoftGraphEBookInstallSummary>]: Contains properties for the installation summary of a book for a device.
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: Read-only.
      [FailedDeviceCount <Int32?>]: Number of Devices that have failed to install this book.
      [FailedUserCount <Int32?>]: Number of Users that have 1 or more device that failed to install this book.
      [InstalledDeviceCount <Int32?>]: Number of Devices that have successfully installed this book.
      [InstalledUserCount <Int32?>]: Number of Users whose devices have all succeeded to install this book.
      [NotInstalledDeviceCount <Int32?>]: Number of Devices that does not have this book installed.
      [NotInstalledUserCount <Int32?>]: Number of Users that did not install this book.
    [LargeCover <IMicrosoftGraphMimeContent>]: Contains properties for a generic mime content.
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Type <String>]: Indicates the content mime type.
      [Value <Byte[]>]: The byte array that contains the actual content.
    [LastModifiedDateTime <DateTime?>]: The date and time when the eBook was last modified.
    [PrivacyInformationUrl <String>]: The privacy statement Url.
    [PublishedDateTime <DateTime?>]: The date and time when the eBook was published.
    [Publisher <String>]: Publisher.
    [UserStateSummary <IMicrosoftGraphUserInstallStateSummary[]>]: The list of installation states for this eBook.
      [Id <String>]: Read-only.
      [DeviceStates <IMicrosoftGraphDeviceInstallState[]>]: The install state of the eBook.
      [FailedDeviceCount <Int32?>]: Failed Device Count.
      [InstalledDeviceCount <Int32?>]: Installed Device Count.
      [NotInstalledDeviceCount <Int32?>]: Not installed device count.
      [UserName <String>]: User name.
  [MdmWindowsInformationProtectionPolicies <IMicrosoftGraphMdmWindowsInformationProtectionPolicy1[]>]: Windows information protection for apps running on devices which are MDM enrolled.
    [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>]: Navigation property to list of security groups targeted for policy.
    [AzureRightsManagementServicesAllowed <Boolean?>]: Specifies whether to allow Azure RMS encryption for WIP
    [DataRecoveryCertificate <IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate>]: Windows Information Protection DataRecoveryCertificate
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Certificate <Byte[]>]: Data recovery Certificate
      [Description <String>]: Data recovery Certificate description
      [ExpirationDateTime <DateTime?>]: Data recovery Certificate expiration datetime
      [SubjectName <String>]: Data recovery Certificate subject name
    [EnforcementLevel <String>]: Possible values for WIP Protection enforcement levels
    [EnterpriseDomain <String>]: Primary enterprise domain
    [EnterpriseIPRanges <IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]>]: Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to
      [DisplayName <String>]: Display name
      [Ranges <IMicrosoftGraphIPRange[]>]: Collection of ip ranges
    [EnterpriseIPRangesAreAuthoritative <Boolean?>]: Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets. Default is false
    [EnterpriseInternalProxyServers <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is the comma-separated list of internal proxy servers. For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'. These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
      [DisplayName <String>]: Display name
      [Resources <String[]>]: Collection of resources
    [EnterpriseNetworkDomainNames <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
    [EnterpriseProtectedDomainNames <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: List of enterprise domains to be protected
    [EnterpriseProxiedDomains <IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]>]: Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
      [DisplayName <String>]: Display name
      [ProxiedDomains <IMicrosoftGraphProxiedDomain[]>]: Collection of proxied domains
        [IPAddressOrFqdn <String>]: The IP address or FQDN
        [Proxy <String>]: Proxy IP or FQDN
    [EnterpriseProxyServers <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is a list of proxy servers. Any server not on this list is considered non-enterprise
    [EnterpriseProxyServersAreAuthoritative <Boolean?>]: Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies. Default is false
    [ExemptAppLockerFiles <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>]: Another way to input exempt apps through xml files
      [Id <String>]: Read-only.
      [DisplayName <String>]: The friendly name
      [File <Byte[]>]: File as a byte array
      [FileHash <String>]: SHA256 hash of the file
      [Version <String>]: Version of the entity.
    [ExemptApps <IMicrosoftGraphWindowsInformationProtectionApp[]>]: Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data.
      [Denied <Boolean?>]: If true, app is denied protection or exemption.
      [Description <String>]: The app's description.
      [DisplayName <String>]: App display name.
      [ProductName <String>]: The product name.
      [PublisherName <String>]: The publisher name
    [IconsVisible <Boolean?>]: Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu. Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app
    [IndexingEncryptedStoresOrItemsBlocked <Boolean?>]: This switch is for the Windows Search Indexer, to allow or disallow indexing of items
    [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
    [NeutralDomainResources <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: List of domain names that can used for work or personal resource
    [ProtectedAppLockerFiles <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>]: Another way to input protected apps through xml files
    [ProtectedApps <IMicrosoftGraphWindowsInformationProtectionApp[]>]: Protected applications can access enterprise data and the data handled by those applications are protected with encryption
    [ProtectionUnderLockConfigRequired <Boolean?>]: Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured
    [RevokeOnUnenrollDisabled <Boolean?>]: This policy controls whether to revoke the WIP keys when a device unenrolls from the management service. If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment. If the keys are not revoked, there will be no revoked file cleanup subsequently.
    [RightsManagementServicesTemplateId <String>]: TemplateID GUID to use for RMS encryption. The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access
    [SmbAutoEncryptedFileExtensions <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
    [CreatedDateTime <DateTime?>]: The date and time the policy was created.
    [Description <String>]: The policy's description.
    [DisplayName <String>]: Policy display name.
    [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
    [Version <String>]: Version of the entity.
    [Id <String>]: Read-only.
  [MicrosoftStoreForBusinessLanguage <String>]: The locale information used to sync applications from the Microsoft Store for Business. Cultures that are specific to a country/region. The names of these cultures follow RFC 4646 (Windows Vista and later). The format is -<country/regioncode2>, where  is a lowercase two-letter code derived from ISO 639-1 and <country/regioncode2> is an uppercase two-letter code derived from ISO 3166. For example, en-US for English (United States) is a specific culture.
  [MicrosoftStoreForBusinessLastCompletedApplicationSyncTime <DateTime?>]: The last time an application sync from the Microsoft Store for Business was completed.
  [MicrosoftStoreForBusinessLastSuccessfulSyncDateTime <DateTime?>]: The last time the apps from the Microsoft Store for Business were synced successfully for the account.
  [MobileAppCategories <IMicrosoftGraphMobileAppCategory[]>]: The mobile app categories.
    [Id <String>]: Read-only.
    [DisplayName <String>]: The name of the app category.
    [LastModifiedDateTime <DateTime?>]: The date and time the mobileAppCategory was last modified.
  [MobileAppConfigurations <IMicrosoftGraphManagedDeviceMobileAppConfiguration1[]>]: The Managed Device Mobile Application Configurations.
    [Id <String>]: Read-only.
    [Assignments <IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment1[]>]: The list of group assignemenets for app configration.
      [Id <String>]: Read-only.
      [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [CreatedDateTime <DateTime?>]: DateTime the object was created.
    [Description <String>]: Admin provided description of the Device Configuration.
    [DeviceStatusSummary <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary1>]: Contains properties, inherited properties and actions for an MDM mobile app configuration device status summary.
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: Read-only.
      [ConfigurationVersion <Int32?>]: Version of the policy for that overview
      [ErrorCount <Int32?>]: Number of error devices
      [FailedCount <Int32?>]: Number of failed devices
      [LastUpdateDateTime <DateTime?>]: Last update time
      [NotApplicableCount <Int32?>]: Number of not applicable devices
      [PendingCount <Int32?>]: Number of pending devices
      [SuccessCount <Int32?>]: Number of succeeded devices
    [DeviceStatuses <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus1[]>]: List of ManagedDeviceMobileAppConfigurationDeviceStatus.
      [Id <String>]: Read-only.
      [ComplianceGracePeriodExpirationDateTime <DateTime?>]: The DateTime when device compliance grace period expires
      [DeviceDisplayName <String>]: Device name of the DevicePolicyStatus.
      [DeviceModel <String>]: The device model that is being reported
      [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
      [Status <String>]: complianceStatus
      [UserName <String>]: The User Name that is being reported
      [UserPrincipalName <String>]: UserPrincipalName.
    [DisplayName <String>]: Admin provided name of the device configuration.
    [LastModifiedDateTime <DateTime?>]: DateTime the object was last modified.
    [TargetedMobileApps <String[]>]: the associated app.
    [UserStatusSummary <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary1>]: Contains properties, inherited properties and actions for an MDM mobile app configuration user status summary.
      [(Any) <Object>]: This indicates any property can be added to this object.
      [Id <String>]: Read-only.
      [ConfigurationVersion <Int32?>]: Version of the policy for that overview
      [ErrorCount <Int32?>]: Number of error Users
      [FailedCount <Int32?>]: Number of failed Users
      [LastUpdateDateTime <DateTime?>]: Last update time
      [NotApplicableCount <Int32?>]: Number of not applicable users
      [PendingCount <Int32?>]: Number of pending Users
      [SuccessCount <Int32?>]: Number of succeeded Users
    [UserStatuses <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus[]>]: List of ManagedDeviceMobileAppConfigurationUserStatus.
      [Id <String>]: Read-only.
      [DevicesCount <Int32?>]: Devices count for that user.
      [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
      [Status <String>]: complianceStatus
      [UserDisplayName <String>]: User name of the DevicePolicyStatus.
      [UserPrincipalName <String>]: UserPrincipalName.
    [Version <Int32?>]: Version of the device configuration.
  [MobileApps <IMicrosoftGraphMobileApp1[]>]: The mobile apps.
    [Id <String>]: Read-only.
    [Assignments <IMicrosoftGraphMobileAppAssignment1[]>]: The list of group assignments for this mobile app.
      [Id <String>]: Read-only.
      [Intent <String>]: Possible values for the install intent chosen by the admin.
      [Settings <IMicrosoftGraphMobileAppAssignmentSettings>]: Abstract class to contain properties used to assign a mobile app to a group.
        [(Any) <Object>]: This indicates any property can be added to this object.
      [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
    [Categories <IMicrosoftGraphMobileAppCategory[]>]: The list of categories for this app.
    [CreatedDateTime <DateTime?>]: The date and time the app was created.
    [Description <String>]: The description of the app.
    [Developer <String>]: The developer of the app.
    [DisplayName <String>]: The admin provided or imported title of the app.
    [InformationUrl <String>]: The more information Url.
    [IsFeatured <Boolean?>]: The value indicating whether the app is marked as featured by the admin.
    [LargeIcon <IMicrosoftGraphMimeContent>]: Contains properties for a generic mime content.
    [LastModifiedDateTime <DateTime?>]: The date and time the app was last modified.
    [Notes <String>]: Notes for the app.
    [Owner <String>]: The owner of the app.
    [PrivacyInformationUrl <String>]: The privacy statement Url.
    [Publisher <String>]: The publisher of the app.
    [PublishingState <String>]: Indicates the publishing state of an app.
  [TargetedManagedAppConfigurations <IMicrosoftGraphTargetedManagedAppConfiguration1[]>]: Targeted managed app configurations.
    [CustomSettings <IMicrosoftGraphKeyValuePair[]>]: A set of string key and string value pairs to be sent to apps for users to whom the configuration is scoped, unalterned by this service
    [CreatedDateTime <DateTime?>]: The date and time the policy was created.
    [Description <String>]: The policy's description.
    [DisplayName <String>]: Policy display name.
    [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
    [Version <String>]: Version of the entity.
    [Id <String>]: Read-only.
    [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>]: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
    [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
  [VppTokens <IMicrosoftGraphVppToken1[]>]: List of Vpp tokens for this organization.
    [Id <String>]: Read-only.
    [AppleId <String>]: The apple Id associated with the given Apple Volume Purchase Program Token.
    [AutomaticallyUpdateApps <Boolean?>]: Whether or not apps for the VPP token will be automatically updated.
    [CountryOrRegion <String>]: Whether or not apps for the VPP token will be automatically updated.
    [ExpirationDateTime <DateTime?>]: The expiration date time of the Apple Volume Purchase Program Token.
    [LastModifiedDateTime <DateTime?>]: Last modification date time associated with the Apple Volume Purchase Program Token.
    [LastSyncDateTime <DateTime?>]: The last time when an application sync was done with the Apple volume purchase program service using the the Apple Volume Purchase Program Token.
    [LastSyncStatus <String>]: Possible sync statuses associated with an Apple Volume Purchase Program token.
    [OrganizationName <String>]: The organization associated with the Apple Volume Purchase Program Token
    [State <String>]: Possible states associated with an Apple Volume Purchase Program token.
    [Token <String>]: The Apple Volume Purchase Program Token string downloaded from the Apple Volume Purchase Program.
    [VppTokenAccountType <String>]: Possible types of an Apple Volume Purchase Program token.
  [WindowsInformationProtectionPolicies <IMicrosoftGraphWindowsInformationProtectionPolicy1[]>]: Windows information protection for apps running on devices which are not MDM enrolled.
    [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>]: Navigation property to list of security groups targeted for policy.
    [AzureRightsManagementServicesAllowed <Boolean?>]: Specifies whether to allow Azure RMS encryption for WIP
    [DataRecoveryCertificate <IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate>]: Windows Information Protection DataRecoveryCertificate
    [EnforcementLevel <String>]: Possible values for WIP Protection enforcement levels
    [EnterpriseDomain <String>]: Primary enterprise domain
    [EnterpriseIPRanges <IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]>]: Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to
    [EnterpriseIPRangesAreAuthoritative <Boolean?>]: Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets. Default is false
    [EnterpriseInternalProxyServers <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is the comma-separated list of internal proxy servers. For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'. These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
    [EnterpriseNetworkDomainNames <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
    [EnterpriseProtectedDomainNames <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: List of enterprise domains to be protected
    [EnterpriseProxiedDomains <IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]>]: Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
    [EnterpriseProxyServers <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is a list of proxy servers. Any server not on this list is considered non-enterprise
    [EnterpriseProxyServersAreAuthoritative <Boolean?>]: Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies. Default is false
    [ExemptAppLockerFiles <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>]: Another way to input exempt apps through xml files
    [ExemptApps <IMicrosoftGraphWindowsInformationProtectionApp[]>]: Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data.
    [IconsVisible <Boolean?>]: Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu. Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app
    [IndexingEncryptedStoresOrItemsBlocked <Boolean?>]: This switch is for the Windows Search Indexer, to allow or disallow indexing of items
    [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
    [NeutralDomainResources <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: List of domain names that can used for work or personal resource
    [ProtectedAppLockerFiles <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>]: Another way to input protected apps through xml files
    [ProtectedApps <IMicrosoftGraphWindowsInformationProtectionApp[]>]: Protected applications can access enterprise data and the data handled by those applications are protected with encryption
    [ProtectionUnderLockConfigRequired <Boolean?>]: Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured
    [RevokeOnUnenrollDisabled <Boolean?>]: This policy controls whether to revoke the WIP keys when a device unenrolls from the management service. If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment. If the keys are not revoked, there will be no revoked file cleanup subsequently.
    [RightsManagementServicesTemplateId <String>]: TemplateID GUID to use for RMS encryption. The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access
    [SmbAutoEncryptedFileExtensions <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
    [CreatedDateTime <DateTime?>]: The date and time the policy was created.
    [Description <String>]: The policy's description.
    [DisplayName <String>]: Policy display name.
    [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
    [Version <String>]: Version of the entity.
    [Id <String>]: Read-only.
    [DaysWithoutContactBeforeUnenroll <Int32?>]: Offline interval before app data is wiped (days)
    [MdmEnrollmentUrl <String>]: Enrollment url for the MDM
    [MinutesOfInactivityBeforeDeviceLock <Int32?>]: Specifies the maximum amount of time (in minutes) allowed after the device is idle that will cause the device to become PIN or password locked.   Range is an integer X where 0 <= X <= 999.
    [NumberOfPastPinsRemembered <Int32?>]: Integer value that specifies the number of past PINs that can be associated to a user account that can't be reused. The largest number you can configure for this policy setting is 50. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then storage of previous PINs is not required. This node was added in Windows 10, version 1511. Default is 0.
    [PasswordMaximumAttemptCount <Int32?>]: The number of authentication failures allowed before the device will be wiped. A value of 0 disables device wipe functionality. Range is an integer X where 4 <= X <= 16 for desktop and 0 <= X <= 999 for mobile devices.
    [PinExpirationDays <Int32?>]: Integer value specifies the period of time (in days) that a PIN can be used before the system requires the user to change it. The largest number you can configure for this policy setting is 730. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then the user's PIN will never expire. This node was added in Windows 10, version 1511. Default is 0.
    [PinLowercaseLetters <String>]: Pin Character Requirements
    [PinMinimumLength <Int32?>]: Integer value that sets the minimum number of characters required for the PIN. Default value is 4. The lowest number you can configure for this policy setting is 4. The largest number you can configure must be less than the number configured in the Maximum PIN length policy setting or the number 127, whichever is the lowest.
    [PinSpecialCharacters <String>]: Pin Character Requirements
    [PinUppercaseLetters <String>]: Pin Character Requirements
    [RevokeOnMdmHandoffDisabled <Boolean?>]: New property in RS2, pending documentation
    [WindowsHelloForBusinessBlocked <Boolean?>]: Boolean value that sets Windows Hello for Business as a method for signing into Windows.

DEFAULTMANAGEDAPPPROTECTIONS <IMicrosoftGraphDefaultManagedAppProtection1[]>: Default managed app policies.
  [AllowedDataStorageLocations <String[]>]: Data storage locations where a user may store managed data.
  [AllowedInboundDataTransferSources <String>]: Data can be transferred from/to these classes of apps
  [AllowedOutboundClipboardSharingLevel <String>]: Represents the level to which the device's clipboard may be shared between apps
  [AllowedOutboundDataTransferDestinations <String>]: Data can be transferred from/to these classes of apps
  [ContactSyncBlocked <Boolean?>]: Indicates whether contacts can be synced to the user's device.
  [DataBackupBlocked <Boolean?>]: Indicates whether the backup of a managed app's data is blocked.
  [DeviceComplianceRequired <Boolean?>]: Indicates whether device compliance is required.
  [DisableAppPinIfDevicePinIsSet <Boolean?>]: Indicates whether use of the app pin is required if the device pin is set.
  [FingerprintBlocked <Boolean?>]: Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
  [ManagedBrowser <String>]: Type of managed browser
  [ManagedBrowserToOpenLinksRequired <Boolean?>]: Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
  [MaximumPinRetries <Int32?>]: Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
  [MinimumPinLength <Int32?>]: Minimum pin length required for an app-level pin if PinRequired is set to True
  [MinimumRequiredAppVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumRequiredOSVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumWarningAppVersion <String>]: Versions less than the specified version will result in warning message on the managed app.
  [MinimumWarningOSVersion <String>]: Versions less than the specified version will result in warning message on the managed app from accessing company data.
  [OrganizationalCredentialsRequired <Boolean?>]: Indicates whether organizational credentials are required for app use.
  [PeriodBeforePinReset <TimeSpan?>]: TimePeriod before the all-level pin must be reset if PinRequired is set to True.
  [PeriodOfflineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is not connected to the internet.
  [PeriodOfflineBeforeWipeIsEnforced <TimeSpan?>]: The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
  [PeriodOnlineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is connected to the internet.
  [PinCharacterSet <String>]: Character set which is to be used for a user's app PIN
  [PinRequired <Boolean?>]: Indicates whether an app-level pin is required.
  [PrintBlocked <Boolean?>]: Indicates whether printing is allowed from managed apps.
  [SaveAsBlocked <Boolean?>]: Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
  [SimplePinBlocked <Boolean?>]: Indicates whether simplePin is blocked.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: Read-only.
  [AppDataEncryptionType <String>]: Represents the level to which app data is encrypted for managed apps
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Id <String>]: Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.
  [CustomSettings <IMicrosoftGraphKeyValuePair[]>]: A set of string key and string value pairs to be sent to the affected users, unalterned by this service
    [Name <String>]: Name for this key-value pair
    [Value <String>]: Value for this key-value pair
  [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
  [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: Read-only.
    [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
    [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
      [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [DisplayName <String>]: Not yet documented
    [LastRefreshTime <DateTime?>]: Not yet documented
    [Version <String>]: Version of the entity.
  [DisableAppEncryptionIfDeviceEncryptionIsEnabled <Boolean?>]: When this setting is enabled, app level encryption is disabled if device level encryption is enabled. (Android only)
  [EncryptAppData <Boolean?>]: Indicates whether managed-app data should be encrypted. (Android only)
  [FaceIdBlocked <Boolean?>]: Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True. (iOS Only)
  [MinimumRequiredPatchVersion <String>]: Define the oldest required Android security patch level a user can have to gain secure access to the app. (Android only)
  [MinimumRequiredSdkVersion <String>]: Versions less than the specified version will block the managed app from accessing company data. (iOS Only)
  [MinimumWarningPatchVersion <String>]: Define the oldest recommended Android security patch level a user can have for secure access to the app. (Android only)
  [ScreenCaptureBlocked <Boolean?>]: Indicates whether screen capture is blocked. (Android only)

IOSMANAGEDAPPPROTECTIONS <IMicrosoftGraphIosManagedAppProtection1[]>: iOS managed app policies.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>]: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    [Id <String>]: Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
  [AllowedDataStorageLocations <String[]>]: Data storage locations where a user may store managed data.
  [AllowedInboundDataTransferSources <String>]: Data can be transferred from/to these classes of apps
  [AllowedOutboundClipboardSharingLevel <String>]: Represents the level to which the device's clipboard may be shared between apps
  [AllowedOutboundDataTransferDestinations <String>]: Data can be transferred from/to these classes of apps
  [ContactSyncBlocked <Boolean?>]: Indicates whether contacts can be synced to the user's device.
  [DataBackupBlocked <Boolean?>]: Indicates whether the backup of a managed app's data is blocked.
  [DeviceComplianceRequired <Boolean?>]: Indicates whether device compliance is required.
  [DisableAppPinIfDevicePinIsSet <Boolean?>]: Indicates whether use of the app pin is required if the device pin is set.
  [FingerprintBlocked <Boolean?>]: Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.
  [ManagedBrowser <String>]: Type of managed browser
  [ManagedBrowserToOpenLinksRequired <Boolean?>]: Indicates whether internet links should be opened in the managed browser app, or any custom browser specified by CustomBrowserProtocol (for iOS) or CustomBrowserPackageId/CustomBrowserDisplayName (for Android)
  [MaximumPinRetries <Int32?>]: Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.
  [MinimumPinLength <Int32?>]: Minimum pin length required for an app-level pin if PinRequired is set to True
  [MinimumRequiredAppVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumRequiredOSVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.
  [MinimumWarningAppVersion <String>]: Versions less than the specified version will result in warning message on the managed app.
  [MinimumWarningOSVersion <String>]: Versions less than the specified version will result in warning message on the managed app from accessing company data.
  [OrganizationalCredentialsRequired <Boolean?>]: Indicates whether organizational credentials are required for app use.
  [PeriodBeforePinReset <TimeSpan?>]: TimePeriod before the all-level pin must be reset if PinRequired is set to True.
  [PeriodOfflineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is not connected to the internet.
  [PeriodOfflineBeforeWipeIsEnforced <TimeSpan?>]: The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.
  [PeriodOnlineBeforeAccessCheck <TimeSpan?>]: The period after which access is checked when the device is connected to the internet.
  [PinCharacterSet <String>]: Character set which is to be used for a user's app PIN
  [PinRequired <Boolean?>]: Indicates whether an app-level pin is required.
  [PrintBlocked <Boolean?>]: Indicates whether printing is allowed from managed apps.
  [SaveAsBlocked <Boolean?>]: Indicates whether users may use the 'Save As' menu item to save a copy of protected files.
  [SimplePinBlocked <Boolean?>]: Indicates whether simplePin is blocked.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: Read-only.
  [AppDataEncryptionType <String>]: Represents the level to which app data is encrypted for managed apps
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Id <String>]: Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.
  [CustomBrowserProtocol <String>]: A custom browser protocol to open weblink on iOS. When this property is configured, ManagedBrowserToOpenLinksRequired should be true.
  [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
  [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: Read-only.
    [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
    [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
      [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [DisplayName <String>]: Not yet documented
    [LastRefreshTime <DateTime?>]: Not yet documented
    [Version <String>]: Version of the entity.
  [FaceIdBlocked <Boolean?>]: Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True.
  [MinimumRequiredSdkVersion <String>]: Versions less than the specified version will block the managed app from accessing company data.

MANAGEDAPPPOLICIES <IMicrosoftGraphManagedAppPolicy1[]>: Managed app policies.
  [Id <String>]: Read-only.
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.

MANAGEDAPPREGISTRATIONS <IMicrosoftGraphManagedAppRegistration1[]>: The managed app registrations.
  [Id <String>]: Read-only.
  [AppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [(Any) <Object>]: This indicates any property can be added to this object.
  [ApplicationVersion <String>]: App version
  [AppliedPolicies <IMicrosoftGraphManagedAppPolicy1[]>]: Zero or more policys already applied on the registered app when it last synchronized with managment service.
    [Id <String>]: Read-only.
    [CreatedDateTime <DateTime?>]: The date and time the policy was created.
    [Description <String>]: The policy's description.
    [DisplayName <String>]: Policy display name.
    [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
    [Version <String>]: Version of the entity.
  [CreatedDateTime <DateTime?>]: Date and time of creation
  [DeviceName <String>]: Host device name
  [DeviceTag <String>]: App management SDK generated tag, which helps relate apps hosted on the same device. Not guaranteed to relate apps in all conditions.
  [DeviceType <String>]: Host device type
  [FlaggedReasons <String[]>]: Zero or more reasons an app registration is flagged. E.g. app running on rooted device
  [IntendedPolicies <IMicrosoftGraphManagedAppPolicy1[]>]: Zero or more policies admin intended for the app as of now.
  [LastSyncDateTime <DateTime?>]: Date and time of last the app synced with management service.
  [ManagementSdkVersion <String>]: App management SDK version
  [Operations <IMicrosoftGraphManagedAppOperation[]>]: Zero or more long running operations triggered on the app registration.
    [Id <String>]: Read-only.
    [DisplayName <String>]: The operation name.
    [LastModifiedDateTime <DateTime?>]: The last time the app operation was modified.
    [State <String>]: The current state of the operation
    [Version <String>]: Version of the entity.
  [PlatformVersion <String>]: Operating System version
  [UserId <String>]: The user Id to who this app registration belongs.
  [Version <String>]: Version of the entity.

MANAGEDAPPSTATUSES <IMicrosoftGraphManagedAppStatus[]>: The managed app statuses.
  [Id <String>]: Read-only.
  [DisplayName <String>]: Friendly name of the status report.
  [Version <String>]: Version of the entity.

MANAGEDEBOOKS <IMicrosoftGraphManagedEBook1[]>: The Managed eBook.
  [Id <String>]: Read-only.
  [Assignments <IMicrosoftGraphManagedEBookAssignment1[]>]: The list of assignments for this eBook.
    [Id <String>]: Read-only.
    [InstallIntent <String>]: Possible values for the install intent chosen by the admin.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [CreatedDateTime <DateTime?>]: The date and time when the eBook file was created.
  [Description <String>]: Description.
  [DeviceStates <IMicrosoftGraphDeviceInstallState[]>]: The list of installation states for this eBook.
    [Id <String>]: Read-only.
    [DeviceId <String>]: Device Id.
    [DeviceName <String>]: Device name.
    [ErrorCode <String>]: The error code for install failures.
    [InstallState <String>]: Possible values for install state.
    [LastSyncDateTime <DateTime?>]: Last sync date and time.
    [OSDescription <String>]: OS Description.
    [OSVersion <String>]: OS Version.
    [UserName <String>]: Device User Name.
  [DisplayName <String>]: Name of the eBook.
  [InformationUrl <String>]: The more information Url.
  [InstallSummary <IMicrosoftGraphEBookInstallSummary>]: Contains properties for the installation summary of a book for a device.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: Read-only.
    [FailedDeviceCount <Int32?>]: Number of Devices that have failed to install this book.
    [FailedUserCount <Int32?>]: Number of Users that have 1 or more device that failed to install this book.
    [InstalledDeviceCount <Int32?>]: Number of Devices that have successfully installed this book.
    [InstalledUserCount <Int32?>]: Number of Users whose devices have all succeeded to install this book.
    [NotInstalledDeviceCount <Int32?>]: Number of Devices that does not have this book installed.
    [NotInstalledUserCount <Int32?>]: Number of Users that did not install this book.
  [LargeCover <IMicrosoftGraphMimeContent>]: Contains properties for a generic mime content.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Type <String>]: Indicates the content mime type.
    [Value <Byte[]>]: The byte array that contains the actual content.
  [LastModifiedDateTime <DateTime?>]: The date and time when the eBook was last modified.
  [PrivacyInformationUrl <String>]: The privacy statement Url.
  [PublishedDateTime <DateTime?>]: The date and time when the eBook was published.
  [Publisher <String>]: Publisher.
  [UserStateSummary <IMicrosoftGraphUserInstallStateSummary[]>]: The list of installation states for this eBook.
    [Id <String>]: Read-only.
    [DeviceStates <IMicrosoftGraphDeviceInstallState[]>]: The install state of the eBook.
    [FailedDeviceCount <Int32?>]: Failed Device Count.
    [InstalledDeviceCount <Int32?>]: Installed Device Count.
    [NotInstalledDeviceCount <Int32?>]: Not installed device count.
    [UserName <String>]: User name.

MDMWINDOWSINFORMATIONPROTECTIONPOLICIES <IMicrosoftGraphMdmWindowsInformationProtectionPolicy1[]>: Windows information protection for apps running on devices which are MDM enrolled.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>]: Navigation property to list of security groups targeted for policy.
    [Id <String>]: Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [AzureRightsManagementServicesAllowed <Boolean?>]: Specifies whether to allow Azure RMS encryption for WIP
  [DataRecoveryCertificate <IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate>]: Windows Information Protection DataRecoveryCertificate
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Certificate <Byte[]>]: Data recovery Certificate
    [Description <String>]: Data recovery Certificate description
    [ExpirationDateTime <DateTime?>]: Data recovery Certificate expiration datetime
    [SubjectName <String>]: Data recovery Certificate subject name
  [EnforcementLevel <String>]: Possible values for WIP Protection enforcement levels
  [EnterpriseDomain <String>]: Primary enterprise domain
  [EnterpriseIPRanges <IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]>]: Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to
    [DisplayName <String>]: Display name
    [Ranges <IMicrosoftGraphIPRange[]>]: Collection of ip ranges
  [EnterpriseIPRangesAreAuthoritative <Boolean?>]: Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets. Default is false
  [EnterpriseInternalProxyServers <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is the comma-separated list of internal proxy servers. For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'. These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
    [DisplayName <String>]: Display name
    [Resources <String[]>]: Collection of resources
  [EnterpriseNetworkDomainNames <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
  [EnterpriseProtectedDomainNames <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: List of enterprise domains to be protected
  [EnterpriseProxiedDomains <IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]>]: Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
    [DisplayName <String>]: Display name
    [ProxiedDomains <IMicrosoftGraphProxiedDomain[]>]: Collection of proxied domains
      [IPAddressOrFqdn <String>]: The IP address or FQDN
      [Proxy <String>]: Proxy IP or FQDN
  [EnterpriseProxyServers <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is a list of proxy servers. Any server not on this list is considered non-enterprise
  [EnterpriseProxyServersAreAuthoritative <Boolean?>]: Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies. Default is false
  [ExemptAppLockerFiles <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>]: Another way to input exempt apps through xml files
    [Id <String>]: Read-only.
    [DisplayName <String>]: The friendly name
    [File <Byte[]>]: File as a byte array
    [FileHash <String>]: SHA256 hash of the file
    [Version <String>]: Version of the entity.
  [ExemptApps <IMicrosoftGraphWindowsInformationProtectionApp[]>]: Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data.
    [Denied <Boolean?>]: If true, app is denied protection or exemption.
    [Description <String>]: The app's description.
    [DisplayName <String>]: App display name.
    [ProductName <String>]: The product name.
    [PublisherName <String>]: The publisher name
  [IconsVisible <Boolean?>]: Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu. Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app
  [IndexingEncryptedStoresOrItemsBlocked <Boolean?>]: This switch is for the Windows Search Indexer, to allow or disallow indexing of items
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
  [NeutralDomainResources <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: List of domain names that can used for work or personal resource
  [ProtectedAppLockerFiles <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>]: Another way to input protected apps through xml files
  [ProtectedApps <IMicrosoftGraphWindowsInformationProtectionApp[]>]: Protected applications can access enterprise data and the data handled by those applications are protected with encryption
  [ProtectionUnderLockConfigRequired <Boolean?>]: Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured
  [RevokeOnUnenrollDisabled <Boolean?>]: This policy controls whether to revoke the WIP keys when a device unenrolls from the management service. If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment. If the keys are not revoked, there will be no revoked file cleanup subsequently.
  [RightsManagementServicesTemplateId <String>]: TemplateID GUID to use for RMS encryption. The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access
  [SmbAutoEncryptedFileExtensions <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: Read-only.

MOBILEAPPCATEGORIES <IMicrosoftGraphMobileAppCategory[]>: The mobile app categories.
  [Id <String>]: Read-only.
  [DisplayName <String>]: The name of the app category.
  [LastModifiedDateTime <DateTime?>]: The date and time the mobileAppCategory was last modified.

MOBILEAPPCONFIGURATIONS <IMicrosoftGraphManagedDeviceMobileAppConfiguration1[]>: The Managed Device Mobile Application Configurations.
  [Id <String>]: Read-only.
  [Assignments <IMicrosoftGraphManagedDeviceMobileAppConfigurationAssignment1[]>]: The list of group assignemenets for app configration.
    [Id <String>]: Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [CreatedDateTime <DateTime?>]: DateTime the object was created.
  [Description <String>]: Admin provided description of the Device Configuration.
  [DeviceStatusSummary <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary1>]: Contains properties, inherited properties and actions for an MDM mobile app configuration device status summary.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: Read-only.
    [ConfigurationVersion <Int32?>]: Version of the policy for that overview
    [ErrorCount <Int32?>]: Number of error devices
    [FailedCount <Int32?>]: Number of failed devices
    [LastUpdateDateTime <DateTime?>]: Last update time
    [NotApplicableCount <Int32?>]: Number of not applicable devices
    [PendingCount <Int32?>]: Number of pending devices
    [SuccessCount <Int32?>]: Number of succeeded devices
  [DeviceStatuses <IMicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus1[]>]: List of ManagedDeviceMobileAppConfigurationDeviceStatus.
    [Id <String>]: Read-only.
    [ComplianceGracePeriodExpirationDateTime <DateTime?>]: The DateTime when device compliance grace period expires
    [DeviceDisplayName <String>]: Device name of the DevicePolicyStatus.
    [DeviceModel <String>]: The device model that is being reported
    [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
    [Status <String>]: complianceStatus
    [UserName <String>]: The User Name that is being reported
    [UserPrincipalName <String>]: UserPrincipalName.
  [DisplayName <String>]: Admin provided name of the device configuration.
  [LastModifiedDateTime <DateTime?>]: DateTime the object was last modified.
  [TargetedMobileApps <String[]>]: the associated app.
  [UserStatusSummary <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary1>]: Contains properties, inherited properties and actions for an MDM mobile app configuration user status summary.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: Read-only.
    [ConfigurationVersion <Int32?>]: Version of the policy for that overview
    [ErrorCount <Int32?>]: Number of error Users
    [FailedCount <Int32?>]: Number of failed Users
    [LastUpdateDateTime <DateTime?>]: Last update time
    [NotApplicableCount <Int32?>]: Number of not applicable users
    [PendingCount <Int32?>]: Number of pending Users
    [SuccessCount <Int32?>]: Number of succeeded Users
  [UserStatuses <IMicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus[]>]: List of ManagedDeviceMobileAppConfigurationUserStatus.
    [Id <String>]: Read-only.
    [DevicesCount <Int32?>]: Devices count for that user.
    [LastReportedDateTime <DateTime?>]: Last modified date time of the policy report.
    [Status <String>]: complianceStatus
    [UserDisplayName <String>]: User name of the DevicePolicyStatus.
    [UserPrincipalName <String>]: UserPrincipalName.
  [Version <Int32?>]: Version of the device configuration.

MOBILEAPPS <IMicrosoftGraphMobileApp1[]>: The mobile apps.
  [Id <String>]: Read-only.
  [Assignments <IMicrosoftGraphMobileAppAssignment1[]>]: The list of group assignments for this mobile app.
    [Id <String>]: Read-only.
    [Intent <String>]: Possible values for the install intent chosen by the admin.
    [Settings <IMicrosoftGraphMobileAppAssignmentSettings>]: Abstract class to contain properties used to assign a mobile app to a group.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [Categories <IMicrosoftGraphMobileAppCategory[]>]: The list of categories for this app.
    [Id <String>]: Read-only.
    [DisplayName <String>]: The name of the app category.
    [LastModifiedDateTime <DateTime?>]: The date and time the mobileAppCategory was last modified.
  [CreatedDateTime <DateTime?>]: The date and time the app was created.
  [Description <String>]: The description of the app.
  [Developer <String>]: The developer of the app.
  [DisplayName <String>]: The admin provided or imported title of the app.
  [InformationUrl <String>]: The more information Url.
  [IsFeatured <Boolean?>]: The value indicating whether the app is marked as featured by the admin.
  [LargeIcon <IMicrosoftGraphMimeContent>]: Contains properties for a generic mime content.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Type <String>]: Indicates the content mime type.
    [Value <Byte[]>]: The byte array that contains the actual content.
  [LastModifiedDateTime <DateTime?>]: The date and time the app was last modified.
  [Notes <String>]: Notes for the app.
  [Owner <String>]: The owner of the app.
  [PrivacyInformationUrl <String>]: The privacy statement Url.
  [Publisher <String>]: The publisher of the app.
  [PublishingState <String>]: Indicates the publishing state of an app.

TARGETEDMANAGEDAPPCONFIGURATIONS <IMicrosoftGraphTargetedManagedAppConfiguration1[]>: Targeted managed app configurations.
  [CustomSettings <IMicrosoftGraphKeyValuePair[]>]: A set of string key and string value pairs to be sent to apps for users to whom the configuration is scoped, unalterned by this service
    [Name <String>]: Name for this key-value pair
    [Value <String>]: Value for this key-value pair
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: Read-only.
  [Apps <IMicrosoftGraphManagedMobileApp[]>]: List of apps to which the policy is deployed.
    [Id <String>]: Read-only.
    [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
      [(Any) <Object>]: This indicates any property can be added to this object.
    [Version <String>]: Version of the entity.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>]: Navigation property to list of inclusion and exclusion groups to which the policy is deployed.
    [Id <String>]: Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [DeployedAppCount <Int32?>]: Count of apps to which the current policy is deployed.
  [DeploymentSummary <IMicrosoftGraphManagedAppPolicyDeploymentSummary>]: The ManagedAppEntity is the base entity type for all other entity types under app management workflow.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: Read-only.
    [ConfigurationDeployedUserCount <Int32?>]: Not yet documented
    [ConfigurationDeploymentSummaryPerApp <IMicrosoftGraphManagedAppPolicyDeploymentSummaryPerApp[]>]: Not yet documented
      [ConfigurationAppliedUserCount <Int32?>]: Number of users the policy is applied.
      [MobileAppIdentifier <IMicrosoftGraphMobileAppIdentifier>]: The identifier for a mobile app.
    [DisplayName <String>]: Not yet documented
    [LastRefreshTime <DateTime?>]: Not yet documented
    [Version <String>]: Version of the entity.
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.

VPPTOKENS <IMicrosoftGraphVppToken1[]>: List of Vpp tokens for this organization.
  [Id <String>]: Read-only.
  [AppleId <String>]: The apple Id associated with the given Apple Volume Purchase Program Token.
  [AutomaticallyUpdateApps <Boolean?>]: Whether or not apps for the VPP token will be automatically updated.
  [CountryOrRegion <String>]: Whether or not apps for the VPP token will be automatically updated.
  [ExpirationDateTime <DateTime?>]: The expiration date time of the Apple Volume Purchase Program Token.
  [LastModifiedDateTime <DateTime?>]: Last modification date time associated with the Apple Volume Purchase Program Token.
  [LastSyncDateTime <DateTime?>]: The last time when an application sync was done with the Apple volume purchase program service using the the Apple Volume Purchase Program Token.
  [LastSyncStatus <String>]: Possible sync statuses associated with an Apple Volume Purchase Program token.
  [OrganizationName <String>]: The organization associated with the Apple Volume Purchase Program Token
  [State <String>]: Possible states associated with an Apple Volume Purchase Program token.
  [Token <String>]: The Apple Volume Purchase Program Token string downloaded from the Apple Volume Purchase Program.
  [VppTokenAccountType <String>]: Possible types of an Apple Volume Purchase Program token.

WINDOWSINFORMATIONPROTECTIONPOLICIES <IMicrosoftGraphWindowsInformationProtectionPolicy1[]>: Windows information protection for apps running on devices which are not MDM enrolled.
  [Assignments <IMicrosoftGraphTargetedManagedAppPolicyAssignment1[]>]: Navigation property to list of security groups targeted for policy.
    [Id <String>]: Read-only.
    [Target <IMicrosoftGraphDeviceAndAppManagementAssignmentTarget1>]: Base type for assignment targets.
      [(Any) <Object>]: This indicates any property can be added to this object.
  [AzureRightsManagementServicesAllowed <Boolean?>]: Specifies whether to allow Azure RMS encryption for WIP
  [DataRecoveryCertificate <IMicrosoftGraphWindowsInformationProtectionDataRecoveryCertificate>]: Windows Information Protection DataRecoveryCertificate
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Certificate <Byte[]>]: Data recovery Certificate
    [Description <String>]: Data recovery Certificate description
    [ExpirationDateTime <DateTime?>]: Data recovery Certificate expiration datetime
    [SubjectName <String>]: Data recovery Certificate subject name
  [EnforcementLevel <String>]: Possible values for WIP Protection enforcement levels
  [EnterpriseDomain <String>]: Primary enterprise domain
  [EnterpriseIPRanges <IMicrosoftGraphWindowsInformationProtectionIPRangeCollection[]>]: Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to
    [DisplayName <String>]: Display name
    [Ranges <IMicrosoftGraphIPRange[]>]: Collection of ip ranges
  [EnterpriseIPRangesAreAuthoritative <Boolean?>]: Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets. Default is false
  [EnterpriseInternalProxyServers <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is the comma-separated list of internal proxy servers. For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'. These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies
    [DisplayName <String>]: Display name
    [Resources <String[]>]: Collection of resources
  [EnterpriseNetworkDomainNames <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to
  [EnterpriseProtectedDomainNames <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: List of enterprise domains to be protected
  [EnterpriseProxiedDomains <IMicrosoftGraphWindowsInformationProtectionProxiedDomainCollection[]>]: Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy
    [DisplayName <String>]: Display name
    [ProxiedDomains <IMicrosoftGraphProxiedDomain[]>]: Collection of proxied domains
      [IPAddressOrFqdn <String>]: The IP address or FQDN
      [Proxy <String>]: Proxy IP or FQDN
  [EnterpriseProxyServers <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: This is a list of proxy servers. Any server not on this list is considered non-enterprise
  [EnterpriseProxyServersAreAuthoritative <Boolean?>]: Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies. Default is false
  [ExemptAppLockerFiles <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>]: Another way to input exempt apps through xml files
    [Id <String>]: Read-only.
    [DisplayName <String>]: The friendly name
    [File <Byte[]>]: File as a byte array
    [FileHash <String>]: SHA256 hash of the file
    [Version <String>]: Version of the entity.
  [ExemptApps <IMicrosoftGraphWindowsInformationProtectionApp[]>]: Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data.
    [Denied <Boolean?>]: If true, app is denied protection or exemption.
    [Description <String>]: The app's description.
    [DisplayName <String>]: App display name.
    [ProductName <String>]: The product name.
    [PublisherName <String>]: The publisher name
  [IconsVisible <Boolean?>]: Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu. Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app
  [IndexingEncryptedStoresOrItemsBlocked <Boolean?>]: This switch is for the Windows Search Indexer, to allow or disallow indexing of items
  [IsAssigned <Boolean?>]: Indicates if the policy is deployed to any inclusion groups or not.
  [NeutralDomainResources <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: List of domain names that can used for work or personal resource
  [ProtectedAppLockerFiles <IMicrosoftGraphWindowsInformationProtectionAppLockerFile[]>]: Another way to input protected apps through xml files
  [ProtectedApps <IMicrosoftGraphWindowsInformationProtectionApp[]>]: Protected applications can access enterprise data and the data handled by those applications are protected with encryption
  [ProtectionUnderLockConfigRequired <Boolean?>]: Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured
  [RevokeOnUnenrollDisabled <Boolean?>]: This policy controls whether to revoke the WIP keys when a device unenrolls from the management service. If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment. If the keys are not revoked, there will be no revoked file cleanup subsequently.
  [RightsManagementServicesTemplateId <String>]: TemplateID GUID to use for RMS encryption. The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access
  [SmbAutoEncryptedFileExtensions <IMicrosoftGraphWindowsInformationProtectionResourceCollection[]>]: Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary
  [CreatedDateTime <DateTime?>]: The date and time the policy was created.
  [Description <String>]: The policy's description.
  [DisplayName <String>]: Policy display name.
  [LastModifiedDateTime <DateTime?>]: Last time the policy was modified.
  [Version <String>]: Version of the entity.
  [Id <String>]: Read-only.
  [DaysWithoutContactBeforeUnenroll <Int32?>]: Offline interval before app data is wiped (days)
  [MdmEnrollmentUrl <String>]: Enrollment url for the MDM
  [MinutesOfInactivityBeforeDeviceLock <Int32?>]: Specifies the maximum amount of time (in minutes) allowed after the device is idle that will cause the device to become PIN or password locked.   Range is an integer X where 0 <= X <= 999.
  [NumberOfPastPinsRemembered <Int32?>]: Integer value that specifies the number of past PINs that can be associated to a user account that can't be reused. The largest number you can configure for this policy setting is 50. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then storage of previous PINs is not required. This node was added in Windows 10, version 1511. Default is 0.
  [PasswordMaximumAttemptCount <Int32?>]: The number of authentication failures allowed before the device will be wiped. A value of 0 disables device wipe functionality. Range is an integer X where 4 <= X <= 16 for desktop and 0 <= X <= 999 for mobile devices.
  [PinExpirationDays <Int32?>]: Integer value specifies the period of time (in days) that a PIN can be used before the system requires the user to change it. The largest number you can configure for this policy setting is 730. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then the user's PIN will never expire. This node was added in Windows 10, version 1511. Default is 0.
  [PinLowercaseLetters <String>]: Pin Character Requirements
  [PinMinimumLength <Int32?>]: Integer value that sets the minimum number of characters required for the PIN. Default value is 4. The lowest number you can configure for this policy setting is 4. The largest number you can configure must be less than the number configured in the Maximum PIN length policy setting or the number 127, whichever is the lowest.
  [PinSpecialCharacters <String>]: Pin Character Requirements
  [PinUppercaseLetters <String>]: Pin Character Requirements
  [RevokeOnMdmHandoffDisabled <Boolean?>]: New property in RS2, pending documentation
  [WindowsHelloForBusinessBlocked <Boolean?>]: Boolean value that sets Windows Hello for Business as a method for signing into Windows.
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgdeviceappmgt
#>
function Update-MgDeviceAppMgt {
[Alias('Update-MgDeviceAppManagement')]
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceAppManagement1]
    # Singleton entity that acts as a container for all device app management functionality.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphAndroidManagedAppProtection1[]]
    # Android managed app policies.
    # To construct, see NOTES section for ANDROIDMANAGEDAPPPROTECTIONS properties and create a hash table.
    ${AndroidManagedAppProtections},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDefaultManagedAppProtection1[]]
    # Default managed app policies.
    # To construct, see NOTES section for DEFAULTMANAGEDAPPPROTECTIONS properties and create a hash table.
    ${DefaultManagedAppProtections},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphIosManagedAppProtection1[]]
    # iOS managed app policies.
    # To construct, see NOTES section for IOSMANAGEDAPPPROTECTIONS properties and create a hash table.
    ${IosManagedAppProtections},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether the account is enabled for syncing applications from the Microsoft Store for Business.
    ${IsEnabledForMicrosoftStoreForBusiness},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppPolicy1[]]
    # Managed app policies.
    # To construct, see NOTES section for MANAGEDAPPPOLICIES properties and create a hash table.
    ${ManagedAppPolicies},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppRegistration1[]]
    # The managed app registrations.
    # To construct, see NOTES section for MANAGEDAPPREGISTRATIONS properties and create a hash table.
    ${ManagedAppRegistrations},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedAppStatus[]]
    # The managed app statuses.
    # To construct, see NOTES section for MANAGEDAPPSTATUSES properties and create a hash table.
    ${ManagedAppStatuses},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedEBook1[]]
    # The Managed eBook.
    # To construct, see NOTES section for MANAGEDEBOOKS properties and create a hash table.
    ${ManagedEBooks},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMdmWindowsInformationProtectionPolicy1[]]
    # Windows information protection for apps running on devices which are MDM enrolled.
    # To construct, see NOTES section for MDMWINDOWSINFORMATIONPROTECTIONPOLICIES properties and create a hash table.
    ${MdmWindowsInformationProtectionPolicies},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The locale information used to sync applications from the Microsoft Store for Business.
    # Cultures that are specific to a country/region.
    # The names of these cultures follow RFC 4646 (Windows Vista and later).
    # The format is -<country/regioncode2>, where is a lowercase two-letter code derived from ISO 639-1 and <country/regioncode2> is an uppercase two-letter code derived from ISO 3166.
    # For example, en-US for English (United States) is a specific culture.
    ${MicrosoftStoreForBusinessLanguage},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The last time an application sync from the Microsoft Store for Business was completed.
    ${MicrosoftStoreForBusinessLastCompletedApplicationSyncTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The last time the apps from the Microsoft Store for Business were synced successfully for the account.
    ${MicrosoftStoreForBusinessLastSuccessfulSyncDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileAppCategory[]]
    # The mobile app categories.
    # To construct, see NOTES section for MOBILEAPPCATEGORIES properties and create a hash table.
    ${MobileAppCategories},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDeviceMobileAppConfiguration1[]]
    # The Managed Device Mobile Application Configurations.
    # To construct, see NOTES section for MOBILEAPPCONFIGURATIONS properties and create a hash table.
    ${MobileAppConfigurations},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphMobileApp1[]]
    # The mobile apps.
    # To construct, see NOTES section for MOBILEAPPS properties and create a hash table.
    ${MobileApps},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphTargetedManagedAppConfiguration1[]]
    # Targeted managed app configurations.
    # To construct, see NOTES section for TARGETEDMANAGEDAPPCONFIGURATIONS properties and create a hash table.
    ${TargetedManagedAppConfigurations},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphVppToken1[]]
    # List of Vpp tokens for this organization.
    # To construct, see NOTES section for VPPTOKENS properties and create a hash table.
    ${VppTokens},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphWindowsInformationProtectionPolicy1[]]
    # Windows information protection for apps running on devices which are not MDM enrolled.
    # To construct, see NOTES section for WINDOWSINFORMATIONPROTECTIONPOLICIES properties and create a hash table.
    ${WindowsInformationProtectionPolicies},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgt_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgDeviceAppMgt_UpdateExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The list of troubleshooting events for this user.
.Description
The list of troubleshooting events for this user.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceManagementTroubleshootingEvent1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphDeviceManagementTroubleshootingEvent1>: Event representing an general failure.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [CorrelationId <String>]: Id used for tracing the failure in the service.
  [EventDateTime <DateTime?>]: Time when the event occurred .

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mguserdevicemanagementtroubleshootingevent
#>
function Update-MgUserDeviceManagementTroubleshootingEvent {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of deviceManagementTroubleshootingEvent
    ${DeviceManagementTroubleshootingEventId},

    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of user
    ${UserId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceManagementTroubleshootingEvent1]
    # Event representing an general failure.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Id used for tracing the failure in the service.
    ${CorrelationId},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Time when the event occurred .
    ${EventDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserDeviceManagementTroubleshootingEvent_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserDeviceManagementTroubleshootingEvent_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserDeviceManagementTroubleshootingEvent_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserDeviceManagementTroubleshootingEvent_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Device category
.Description
Device category

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCategory2
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphDeviceCategory2>: Device categories provides a way to organize your devices. Using device categories, company administrators can define their own categories that make sense to their company. These categories can then be applied to a device in the Intune Azure console or selected by a user during device enrollment. You can filter reports and create dynamic Azure Active Directory device groups based on device categories.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [Description <String>]: Optional description for the device category.
  [DisplayName <String>]: Display name for the device category.

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgusermanageddevicecategory
#>
function Update-MgUserManagedDeviceCategory {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of user
    ${UserId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCategory2]
    # Device categories provides a way to organize your devices.
    # Using device categories, company administrators can define their own categories that make sense to their company.
    # These categories can then be applied to a device in the Intune Azure console or selected by a user during device enrollment.
    # You can filter reports and create dynamic Azure Active Directory device groups based on device categories.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Optional description for the device category.
    ${Description},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Display name for the device category.
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceCategory_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceCategory_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceCategory_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceCategory_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Device compliance policy states for this device.
.Description
Device compliance policy states for this device.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicyState1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphDeviceCompliancePolicyState1>: Device Compliance Policy State for a given device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [DisplayName <String>]: The name of the policy for this policyBase
  [PlatformType <String>]: Supported platform types for policies.
  [SettingCount <Int32?>]: Count of how many setting a policy holds
  [SettingStates <IMicrosoftGraphDeviceCompliancePolicySettingState1[]>]: 
    [CurrentValue <String>]: Current value of setting on device
    [ErrorCode <Int64?>]: Error code for the setting
    [ErrorDescription <String>]: Error description
    [InstanceDisplayName <String>]: Name of setting instance that is being reported.
    [Setting <String>]: The setting that is being reported
    [SettingName <String>]: Localized/user friendly setting name that is being reported
    [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
      [DisplayName <String>]: Not yet documented
      [Id <String>]: Not yet documented
      [SourceType <String>]: settingSourceType
    [State <String>]: complianceStatus
    [UserEmail <String>]: UserEmail
    [UserId <String>]: UserId
    [UserName <String>]: UserName
    [UserPrincipalName <String>]: UserPrincipalName.
  [State <String>]: complianceStatus
  [Version <Int32?>]: The version of the policy

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction

SETTINGSTATES <IMicrosoftGraphDeviceCompliancePolicySettingState1[]>: .
  [CurrentValue <String>]: Current value of setting on device
  [ErrorCode <Int64?>]: Error code for the setting
  [ErrorDescription <String>]: Error description
  [InstanceDisplayName <String>]: Name of setting instance that is being reported.
  [Setting <String>]: The setting that is being reported
  [SettingName <String>]: Localized/user friendly setting name that is being reported
  [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
    [DisplayName <String>]: Not yet documented
    [Id <String>]: Not yet documented
    [SourceType <String>]: settingSourceType
  [State <String>]: complianceStatus
  [UserEmail <String>]: UserEmail
  [UserId <String>]: UserId
  [UserName <String>]: UserName
  [UserPrincipalName <String>]: UserPrincipalName.
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgusermanageddevicecompliancepolicystate
#>
function Update-MgUserManagedDeviceCompliancePolicyState {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of deviceCompliancePolicyState
    ${DeviceCompliancePolicyStateId},

    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of user
    ${UserId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicyState1]
    # Device Compliance Policy State for a given device.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The name of the policy for this policyBase
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Supported platform types for policies.
    ${PlatformType},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Count of how many setting a policy holds
    ${SettingCount},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicySettingState1[]]
    # .
    # To construct, see NOTES section for SETTINGSTATES properties and create a hash table.
    ${SettingStates},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # complianceStatus
    ${State},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # The version of the policy
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceCompliancePolicyState_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceCompliancePolicyState_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceCompliancePolicyState_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceCompliancePolicyState_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Device configuration states for this device.
.Description
Device configuration states for this device.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationState1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphDeviceConfigurationState1>: Device Configuration State for a given device.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [DisplayName <String>]: The name of the policy for this policyBase
  [PlatformType <String>]: Supported platform types for policies.
  [SettingCount <Int32?>]: Count of how many setting a policy holds
  [SettingStates <IMicrosoftGraphDeviceConfigurationSettingState1[]>]: 
    [CurrentValue <String>]: Current value of setting on device
    [ErrorCode <Int64?>]: Error code for the setting
    [ErrorDescription <String>]: Error description
    [InstanceDisplayName <String>]: Name of setting instance that is being reported.
    [Setting <String>]: The setting that is being reported
    [SettingName <String>]: Localized/user friendly setting name that is being reported
    [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
      [DisplayName <String>]: Not yet documented
      [Id <String>]: Not yet documented
      [SourceType <String>]: settingSourceType
    [State <String>]: complianceStatus
    [UserEmail <String>]: UserEmail
    [UserId <String>]: UserId
    [UserName <String>]: UserName
    [UserPrincipalName <String>]: UserPrincipalName.
  [State <String>]: complianceStatus
  [Version <Int32?>]: The version of the policy

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction

SETTINGSTATES <IMicrosoftGraphDeviceConfigurationSettingState1[]>: .
  [CurrentValue <String>]: Current value of setting on device
  [ErrorCode <Int64?>]: Error code for the setting
  [ErrorDescription <String>]: Error description
  [InstanceDisplayName <String>]: Name of setting instance that is being reported.
  [Setting <String>]: The setting that is being reported
  [SettingName <String>]: Localized/user friendly setting name that is being reported
  [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
    [DisplayName <String>]: Not yet documented
    [Id <String>]: Not yet documented
    [SourceType <String>]: settingSourceType
  [State <String>]: complianceStatus
  [UserEmail <String>]: UserEmail
  [UserId <String>]: UserId
  [UserName <String>]: UserName
  [UserPrincipalName <String>]: UserPrincipalName.
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgusermanageddeviceconfigurationstate
#>
function Update-MgUserManagedDeviceConfigurationState {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of deviceConfigurationState
    ${DeviceConfigurationStateId},

    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of user
    ${UserId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationState1]
    # Device Configuration State for a given device.
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The name of the policy for this policyBase
    ${DisplayName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Supported platform types for policies.
    ${PlatformType},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # Count of how many setting a policy holds
    ${SettingCount},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationSettingState1[]]
    # .
    # To construct, see NOTES section for SETTINGSTATES properties and create a hash table.
    ${SettingStates},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # complianceStatus
    ${State},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int32]
    # The version of the policy
    ${Version},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceConfigurationState_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceConfigurationState_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceConfigurationState_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDeviceConfigurationState_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# ----------------------------------------------------------------------------------
#
# Copyright Microsoft Corporation
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ----------------------------------------------------------------------------------

<#
.Synopsis
The managed devices associated with the user.
.Description
The managed devices associated with the user.

.Inputs
Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity
.Inputs
Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDevice1
.Outputs
System.Boolean
.Notes
COMPLEX PARAMETER PROPERTIES

To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.

BODYPARAMETER <IMicrosoftGraphManagedDevice1>: Devices that are managed or pre-enrolled through Intune
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [ActivationLockBypassCode <String>]: Code that allows the Activation Lock on a device to be bypassed. This property is read-only.
  [AndroidSecurityPatchLevel <String>]: Android security patch level. This property is read-only.
  [AzureAdDeviceId <String>]: The unique identifier for the Azure Active Directory device. Read only. This property is read-only.
  [AzureAdRegistered <Boolean?>]: Whether the device is Azure Active Directory registered. This property is read-only.
  [ComplianceGracePeriodExpirationDateTime <DateTime?>]: The DateTime when device compliance grace period expires. This property is read-only.
  [ComplianceState <String>]: Compliance state.
  [ConfigurationManagerClientEnabledFeatures <IMicrosoftGraphConfigurationManagerClientEnabledFeatures1>]: configuration Manager client enabled features
    [(Any) <Object>]: This indicates any property can be added to this object.
    [CompliancePolicy <Boolean?>]: Whether compliance policy is managed by Intune
    [DeviceConfiguration <Boolean?>]: Whether device configuration is managed by Intune
    [Inventory <Boolean?>]: Whether inventory is managed by Intune
    [ModernApps <Boolean?>]: Whether modern application is managed by Intune
    [ResourceAccess <Boolean?>]: Whether resource access is managed by Intune
    [WindowsUpdateForBusiness <Boolean?>]: Whether Windows Update for Business is managed by Intune
  [DeviceActionResults <IMicrosoftGraphDeviceActionResult[]>]: List of ComplexType deviceActionResult objects. This property is read-only.
    [ActionName <String>]: Action name
    [ActionState <String>]: State of the action on the device
    [LastUpdatedDateTime <DateTime?>]: Time the action state was last updated
    [StartDateTime <DateTime?>]: Time the action was initiated
  [DeviceCategory <IMicrosoftGraphDeviceCategory2>]: Device categories provides a way to organize your devices. Using device categories, company administrators can define their own categories that make sense to their company. These categories can then be applied to a device in the Intune Azure console or selected by a user during device enrollment. You can filter reports and create dynamic Azure Active Directory device groups based on device categories.
    [(Any) <Object>]: This indicates any property can be added to this object.
    [Id <String>]: Read-only.
    [Description <String>]: Optional description for the device category.
    [DisplayName <String>]: Display name for the device category.
  [DeviceCategoryDisplayName <String>]: Device category display name. This property is read-only.
  [DeviceCompliancePolicyStates <IMicrosoftGraphDeviceCompliancePolicyState1[]>]: Device compliance policy states for this device.
    [Id <String>]: Read-only.
    [DisplayName <String>]: The name of the policy for this policyBase
    [PlatformType <String>]: Supported platform types for policies.
    [SettingCount <Int32?>]: Count of how many setting a policy holds
    [SettingStates <IMicrosoftGraphDeviceCompliancePolicySettingState1[]>]: 
      [CurrentValue <String>]: Current value of setting on device
      [ErrorCode <Int64?>]: Error code for the setting
      [ErrorDescription <String>]: Error description
      [InstanceDisplayName <String>]: Name of setting instance that is being reported.
      [Setting <String>]: The setting that is being reported
      [SettingName <String>]: Localized/user friendly setting name that is being reported
      [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
        [DisplayName <String>]: Not yet documented
        [Id <String>]: Not yet documented
        [SourceType <String>]: settingSourceType
      [State <String>]: complianceStatus
      [UserEmail <String>]: UserEmail
      [UserId <String>]: UserId
      [UserName <String>]: UserName
      [UserPrincipalName <String>]: UserPrincipalName.
    [State <String>]: complianceStatus
    [Version <Int32?>]: The version of the policy
  [DeviceConfigurationStates <IMicrosoftGraphDeviceConfigurationState1[]>]: Device configuration states for this device.
    [Id <String>]: Read-only.
    [DisplayName <String>]: The name of the policy for this policyBase
    [PlatformType <String>]: Supported platform types for policies.
    [SettingCount <Int32?>]: Count of how many setting a policy holds
    [SettingStates <IMicrosoftGraphDeviceConfigurationSettingState1[]>]: 
      [CurrentValue <String>]: Current value of setting on device
      [ErrorCode <Int64?>]: Error code for the setting
      [ErrorDescription <String>]: Error description
      [InstanceDisplayName <String>]: Name of setting instance that is being reported.
      [Setting <String>]: The setting that is being reported
      [SettingName <String>]: Localized/user friendly setting name that is being reported
      [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
      [State <String>]: complianceStatus
      [UserEmail <String>]: UserEmail
      [UserId <String>]: UserId
      [UserName <String>]: UserName
      [UserPrincipalName <String>]: UserPrincipalName.
    [State <String>]: complianceStatus
    [Version <Int32?>]: The version of the policy
  [DeviceEnrollmentType <String>]: Possible ways of adding a mobile device to management.
  [DeviceHealthAttestationState <IMicrosoftGraphDeviceHealthAttestationState>]: deviceHealthAttestationState
    [(Any) <Object>]: This indicates any property can be added to this object.
    [AttestationIdentityKey <String>]: TWhen an Attestation Identity Key (AIK) is present on a device, it indicates that the device has an endorsement key (EK) certificate.
    [BitLockerStatus <String>]: On or Off of BitLocker Drive Encryption
    [BootAppSecurityVersion <String>]: The security version number of the Boot Application
    [BootDebugging <String>]: When bootDebugging is enabled, the device is used in development and testing
    [BootManagerSecurityVersion <String>]: The security version number of the Boot Application
    [BootManagerVersion <String>]: The version of the Boot Manager
    [BootRevisionListInfo <String>]: The Boot Revision List that was loaded during initial boot on the attested device
    [CodeIntegrity <String>]: When code integrity is enabled, code execution is restricted to integrity verified code
    [CodeIntegrityCheckVersion <String>]: The version of the Boot Manager
    [CodeIntegrityPolicy <String>]: The Code Integrity policy that is controlling the security of the boot environment
    [ContentNamespaceUrl <String>]: The DHA report version. (Namespace version)
    [ContentVersion <String>]: The HealthAttestation state schema version
    [DataExcutionPolicy <String>]: DEP Policy defines a set of hardware and software technologies that perform additional checks on memory
    [DeviceHealthAttestationStatus <String>]: The DHA report version. (Namespace version)
    [EarlyLaunchAntiMalwareDriverProtection <String>]: ELAM provides protection for the computers in your network when they start up
    [HealthAttestationSupportedStatus <String>]: This attribute indicates if DHA is supported for the device
    [HealthStatusMismatchInfo <String>]: This attribute appears if DHA-Service detects an integrity issue
    [IssuedDateTime <DateTime?>]: The DateTime when device was evaluated or issued to MDM
    [LastUpdateDateTime <String>]: The Timestamp of the last update.
    [OperatingSystemKernelDebugging <String>]: When operatingSystemKernelDebugging is enabled, the device is used in development and testing
    [OperatingSystemRevListInfo <String>]: The Operating System Revision List that was loaded during initial boot on the attested device
    [Pcr0 <String>]: The measurement that is captured in PCR[0]
    [PcrHashAlgorithm <String>]: Informational attribute that identifies the HASH algorithm that was used by TPM
    [ResetCount <Int64?>]: The number of times a PC device has hibernated or resumed
    [RestartCount <Int64?>]: The number of times a PC device has rebooted
    [SafeMode <String>]: Safe mode is a troubleshooting option for Windows that starts your computer in a limited state
    [SecureBoot <String>]: When Secure Boot is enabled, the core components must have the correct cryptographic signatures
    [SecureBootConfigurationPolicyFingerPrint <String>]: Fingerprint of the Custom Secure Boot Configuration Policy
    [TestSigning <String>]: When test signing is allowed, the device does not enforce signature validation during boot
    [TpmVersion <String>]: The security version number of the Boot Application
    [VirtualSecureMode <String>]: VSM is a container that protects high value assets from a compromised kernel
    [WindowsPe <String>]: Operating system running with limited services that is used to prepare a computer for Windows
  [DeviceName <String>]: Name of the device. This property is read-only.
  [DeviceRegistrationState <String>]: Device registration status.
  [EasActivated <Boolean?>]: Whether the device is Exchange ActiveSync activated. This property is read-only.
  [EasActivationDateTime <DateTime?>]: Exchange ActivationSync activation time of the device. This property is read-only.
  [EasDeviceId <String>]: Exchange ActiveSync Id of the device. This property is read-only.
  [EmailAddress <String>]: Email(s) for the user associated with the device. This property is read-only.
  [EnrolledDateTime <DateTime?>]: Enrollment time of the device. This property is read-only.
  [EthernetMacAddress <String>]: Ethernet MAC. This property is read-only.
  [ExchangeAccessState <String>]: Device Exchange Access State.
  [ExchangeAccessStateReason <String>]: Device Exchange Access State Reason.
  [ExchangeLastSuccessfulSyncDateTime <DateTime?>]: Last time the device contacted Exchange. This property is read-only.
  [FreeStorageSpaceInBytes <Int64?>]: Free Storage in Bytes. This property is read-only.
  [Iccid <String>]: Integrated Circuit Card Identifier, it is A SIM card's unique identification number. This property is read-only.
  [Imei <String>]: IMEI. This property is read-only.
  [IsEncrypted <Boolean?>]: Device encryption status. This property is read-only.
  [IsSupervised <Boolean?>]: Device supervised status. This property is read-only.
  [JailBroken <String>]: whether the device is jail broken or rooted. This property is read-only.
  [LastSyncDateTime <DateTime?>]: The date and time that the device last completed a successful sync with Intune. This property is read-only.
  [ManagedDeviceName <String>]: Automatically generated name to identify a device. Can be overwritten to a user friendly name.
  [ManagedDeviceOwnerType <String>]: Owner type of device.
  [ManagementAgent <String>]: Management agent type.
  [Manufacturer <String>]: Manufacturer of the device. This property is read-only.
  [Meid <String>]: MEID. This property is read-only.
  [Model <String>]: Model of the device. This property is read-only.
  [Notes <String>]: Notes on the device created by IT Admin
  [OSVersion <String>]: Operating system version of the device. This property is read-only.
  [OperatingSystem <String>]: Operating system of the device. Windows, iOS, etc. This property is read-only.
  [PartnerReportedThreatState <String>]: Available health states for the Device Health API
  [PhoneNumber <String>]: Phone number of the device. This property is read-only.
  [PhysicalMemoryInBytes <Int64?>]: Total Memory in Bytes. This property is read-only.
  [RemoteAssistanceSessionErrorDetails <String>]: An error string that identifies issues when creating Remote Assistance session objects. This property is read-only.
  [RemoteAssistanceSessionUrl <String>]: Url that allows a Remote Assistance session to be established with the device. This property is read-only.
  [SerialNumber <String>]: SerialNumber. This property is read-only.
  [SubscriberCarrier <String>]: Subscriber Carrier. This property is read-only.
  [TotalStorageSpaceInBytes <Int64?>]: Total Storage in Bytes. This property is read-only.
  [Udid <String>]: Unique Device Identifier for iOS and macOS devices. This property is read-only.
  [UserDisplayName <String>]: User display name. This property is read-only.
  [UserId <String>]: Unique Identifier for the user associated with the device. This property is read-only.
  [UserPrincipalName <String>]: Device user principal name. This property is read-only.
  [WiFiMacAddress <String>]: Wi-Fi MAC. This property is read-only.

CONFIGURATIONMANAGERCLIENTENABLEDFEATURES <IMicrosoftGraphConfigurationManagerClientEnabledFeatures1>: configuration Manager client enabled features
  [(Any) <Object>]: This indicates any property can be added to this object.
  [CompliancePolicy <Boolean?>]: Whether compliance policy is managed by Intune
  [DeviceConfiguration <Boolean?>]: Whether device configuration is managed by Intune
  [Inventory <Boolean?>]: Whether inventory is managed by Intune
  [ModernApps <Boolean?>]: Whether modern application is managed by Intune
  [ResourceAccess <Boolean?>]: Whether resource access is managed by Intune
  [WindowsUpdateForBusiness <Boolean?>]: Whether Windows Update for Business is managed by Intune

DEVICEACTIONRESULTS <IMicrosoftGraphDeviceActionResult[]>: List of ComplexType deviceActionResult objects. This property is read-only.
  [ActionName <String>]: Action name
  [ActionState <String>]: State of the action on the device
  [LastUpdatedDateTime <DateTime?>]: Time the action state was last updated
  [StartDateTime <DateTime?>]: Time the action was initiated

DEVICECATEGORY <IMicrosoftGraphDeviceCategory2>: Device categories provides a way to organize your devices. Using device categories, company administrators can define their own categories that make sense to their company. These categories can then be applied to a device in the Intune Azure console or selected by a user during device enrollment. You can filter reports and create dynamic Azure Active Directory device groups based on device categories.
  [(Any) <Object>]: This indicates any property can be added to this object.
  [Id <String>]: Read-only.
  [Description <String>]: Optional description for the device category.
  [DisplayName <String>]: Display name for the device category.

DEVICECOMPLIANCEPOLICYSTATES <IMicrosoftGraphDeviceCompliancePolicyState1[]>: Device compliance policy states for this device.
  [Id <String>]: Read-only.
  [DisplayName <String>]: The name of the policy for this policyBase
  [PlatformType <String>]: Supported platform types for policies.
  [SettingCount <Int32?>]: Count of how many setting a policy holds
  [SettingStates <IMicrosoftGraphDeviceCompliancePolicySettingState1[]>]: 
    [CurrentValue <String>]: Current value of setting on device
    [ErrorCode <Int64?>]: Error code for the setting
    [ErrorDescription <String>]: Error description
    [InstanceDisplayName <String>]: Name of setting instance that is being reported.
    [Setting <String>]: The setting that is being reported
    [SettingName <String>]: Localized/user friendly setting name that is being reported
    [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
      [DisplayName <String>]: Not yet documented
      [Id <String>]: Not yet documented
      [SourceType <String>]: settingSourceType
    [State <String>]: complianceStatus
    [UserEmail <String>]: UserEmail
    [UserId <String>]: UserId
    [UserName <String>]: UserName
    [UserPrincipalName <String>]: UserPrincipalName.
  [State <String>]: complianceStatus
  [Version <Int32?>]: The version of the policy

DEVICECONFIGURATIONSTATES <IMicrosoftGraphDeviceConfigurationState1[]>: Device configuration states for this device.
  [Id <String>]: Read-only.
  [DisplayName <String>]: The name of the policy for this policyBase
  [PlatformType <String>]: Supported platform types for policies.
  [SettingCount <Int32?>]: Count of how many setting a policy holds
  [SettingStates <IMicrosoftGraphDeviceConfigurationSettingState1[]>]: 
    [CurrentValue <String>]: Current value of setting on device
    [ErrorCode <Int64?>]: Error code for the setting
    [ErrorDescription <String>]: Error description
    [InstanceDisplayName <String>]: Name of setting instance that is being reported.
    [Setting <String>]: The setting that is being reported
    [SettingName <String>]: Localized/user friendly setting name that is being reported
    [Sources <IMicrosoftGraphSettingSource[]>]: Contributing policies
      [DisplayName <String>]: Not yet documented
      [Id <String>]: Not yet documented
      [SourceType <String>]: settingSourceType
    [State <String>]: complianceStatus
    [UserEmail <String>]: UserEmail
    [UserId <String>]: UserId
    [UserName <String>]: UserName
    [UserPrincipalName <String>]: UserPrincipalName.
  [State <String>]: complianceStatus
  [Version <Int32?>]: The version of the policy

DEVICEHEALTHATTESTATIONSTATE <IMicrosoftGraphDeviceHealthAttestationState>: deviceHealthAttestationState
  [(Any) <Object>]: This indicates any property can be added to this object.
  [AttestationIdentityKey <String>]: TWhen an Attestation Identity Key (AIK) is present on a device, it indicates that the device has an endorsement key (EK) certificate.
  [BitLockerStatus <String>]: On or Off of BitLocker Drive Encryption
  [BootAppSecurityVersion <String>]: The security version number of the Boot Application
  [BootDebugging <String>]: When bootDebugging is enabled, the device is used in development and testing
  [BootManagerSecurityVersion <String>]: The security version number of the Boot Application
  [BootManagerVersion <String>]: The version of the Boot Manager
  [BootRevisionListInfo <String>]: The Boot Revision List that was loaded during initial boot on the attested device
  [CodeIntegrity <String>]: When code integrity is enabled, code execution is restricted to integrity verified code
  [CodeIntegrityCheckVersion <String>]: The version of the Boot Manager
  [CodeIntegrityPolicy <String>]: The Code Integrity policy that is controlling the security of the boot environment
  [ContentNamespaceUrl <String>]: The DHA report version. (Namespace version)
  [ContentVersion <String>]: The HealthAttestation state schema version
  [DataExcutionPolicy <String>]: DEP Policy defines a set of hardware and software technologies that perform additional checks on memory
  [DeviceHealthAttestationStatus <String>]: The DHA report version. (Namespace version)
  [EarlyLaunchAntiMalwareDriverProtection <String>]: ELAM provides protection for the computers in your network when they start up
  [HealthAttestationSupportedStatus <String>]: This attribute indicates if DHA is supported for the device
  [HealthStatusMismatchInfo <String>]: This attribute appears if DHA-Service detects an integrity issue
  [IssuedDateTime <DateTime?>]: The DateTime when device was evaluated or issued to MDM
  [LastUpdateDateTime <String>]: The Timestamp of the last update.
  [OperatingSystemKernelDebugging <String>]: When operatingSystemKernelDebugging is enabled, the device is used in development and testing
  [OperatingSystemRevListInfo <String>]: The Operating System Revision List that was loaded during initial boot on the attested device
  [Pcr0 <String>]: The measurement that is captured in PCR[0]
  [PcrHashAlgorithm <String>]: Informational attribute that identifies the HASH algorithm that was used by TPM
  [ResetCount <Int64?>]: The number of times a PC device has hibernated or resumed
  [RestartCount <Int64?>]: The number of times a PC device has rebooted
  [SafeMode <String>]: Safe mode is a troubleshooting option for Windows that starts your computer in a limited state
  [SecureBoot <String>]: When Secure Boot is enabled, the core components must have the correct cryptographic signatures
  [SecureBootConfigurationPolicyFingerPrint <String>]: Fingerprint of the Custom Secure Boot Configuration Policy
  [TestSigning <String>]: When test signing is allowed, the device does not enforce signature validation during boot
  [TpmVersion <String>]: The security version number of the Boot Application
  [VirtualSecureMode <String>]: VSM is a container that protects high value assets from a compromised kernel
  [WindowsPe <String>]: Operating system running with limited services that is used to prepare a computer for Windows

INPUTOBJECT <IDevicesCorporateManagementIdentity>: Identity Parameter
  [AndroidManagedAppProtectionId <String>]: key: id of androidManagedAppProtection
  [AppLogCollectionRequestId <String>]: key: id of appLogCollectionRequest
  [AssignmentFilterEvaluationStatusDetailsId <String>]: key: id of assignmentFilterEvaluationStatusDetails
  [BundleId <String>]: Usage: bundleId={bundleId}
  [Count <Int64?>]: Usage: count={count}
  [DefaultManagedAppProtectionId <String>]: key: id of defaultManagedAppProtection
  [DeviceAppManagementTaskId <String>]: key: id of deviceAppManagementTask
  [DeviceCompliancePolicyStateId <String>]: key: id of deviceCompliancePolicyState
  [DeviceConfigurationStateId <String>]: key: id of deviceConfigurationState
  [DeviceEnrollmentConfigurationId <String>]: key: id of deviceEnrollmentConfiguration
  [DeviceId <String>]: Usage: deviceId={deviceId}
  [DeviceInstallStateId <String>]: key: id of deviceInstallState
  [DeviceLogCollectionResponseId <String>]: key: id of deviceLogCollectionResponse
  [DeviceManagementTroubleshootingEventId <String>]: key: id of deviceManagementTroubleshootingEvent
  [EnrollmentConfigurationAssignmentId <String>]: key: id of enrollmentConfigurationAssignment
  [EnterpriseCodeSigningCertificateId <String>]: key: id of enterpriseCodeSigningCertificate
  [IosLobAppProvisioningConfigurationAssignmentId <String>]: key: id of iosLobAppProvisioningConfigurationAssignment
  [IosLobAppProvisioningConfigurationId <String>]: key: id of iosLobAppProvisioningConfiguration
  [IosManagedAppProtectionId <String>]: key: id of iosManagedAppProtection
  [ManagedAppOperationId <String>]: key: id of managedAppOperation
  [ManagedAppPolicyId <String>]: key: id of managedAppPolicy
  [ManagedAppRegistrationId <String>]: key: id of managedAppRegistration
  [ManagedAppStatusId <String>]: key: id of managedAppStatus
  [ManagedDeviceId <String>]: key: id of managedDevice
  [ManagedDeviceMobileAppConfigurationAssignmentId <String>]: key: id of managedDeviceMobileAppConfigurationAssignment
  [ManagedDeviceMobileAppConfigurationDeviceStatusId <String>]: key: id of managedDeviceMobileAppConfigurationDeviceStatus
  [ManagedDeviceMobileAppConfigurationId <String>]: key: id of managedDeviceMobileAppConfiguration
  [ManagedDeviceMobileAppConfigurationStateId <String>]: key: id of managedDeviceMobileAppConfigurationState
  [ManagedDeviceMobileAppConfigurationUserStatusId <String>]: key: id of managedDeviceMobileAppConfigurationUserStatus
  [ManagedEBookAssignmentId <String>]: key: id of managedEBookAssignment
  [ManagedEBookCategoryId <String>]: key: id of managedEBookCategory
  [ManagedEBookId <String>]: key: id of managedEBook
  [ManagedMobileAppId <String>]: key: id of managedMobileApp
  [MdmWindowsInformationProtectionPolicyId <String>]: key: id of mdmWindowsInformationProtectionPolicy
  [MobileAppAssignmentId <String>]: key: id of mobileAppAssignment
  [MobileAppCategoryId <String>]: key: id of mobileAppCategory
  [MobileAppId <String>]: key: id of mobileApp
  [MobileAppInstallStatusId <String>]: key: id of mobileAppInstallStatus
  [MobileAppIntentAndStateId <String>]: key: id of mobileAppIntentAndState
  [MobileAppProvisioningConfigGroupAssignmentId <String>]: key: id of mobileAppProvisioningConfigGroupAssignment
  [MobileAppRelationshipId <String>]: key: id of mobileAppRelationship
  [MobileAppTroubleshootingEventId <String>]: key: id of mobileAppTroubleshootingEvent
  [OfficeClientConfigurationAssignmentId <String>]: key: id of officeClientConfigurationAssignment
  [OfficeClientConfigurationId <String>]: key: id of officeClientConfiguration
  [PolicySetAssignmentId <String>]: key: id of policySetAssignment
  [PolicySetId <String>]: key: id of policySet
  [PolicySetItemId <String>]: key: id of policySetItem
  [SecurityBaselineSettingStateId <String>]: key: id of securityBaselineSettingState
  [SecurityBaselineStateId <String>]: key: id of securityBaselineState
  [SideLoadingKeyId <String>]: key: id of sideLoadingKey
  [Status <String>]: Usage: status={status}
  [TargetedManagedAppConfigurationId <String>]: key: id of targetedManagedAppConfiguration
  [TargetedManagedAppPolicyAssignmentId <String>]: key: id of targetedManagedAppPolicyAssignment
  [UserAppInstallStatusId <String>]: key: id of userAppInstallStatus
  [UserId <String>]: key: id of user
  [UserInstallStateSummaryId <String>]: key: id of userInstallStateSummary
  [UserPrincipalName <String>]: Usage: userPrincipalName={userPrincipalName}
  [VppTokenId <String>]: key: id of vppToken
  [WindowsDefenderApplicationControlSupplementalPolicyAssignmentId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyAssignment
  [WindowsDefenderApplicationControlSupplementalPolicyDeploymentStatusId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicyDeploymentStatus
  [WindowsDefenderApplicationControlSupplementalPolicyId <String>]: key: id of windowsDefenderApplicationControlSupplementalPolicy
  [WindowsDeviceMalwareStateId <String>]: key: id of windowsDeviceMalwareState
  [WindowsInformationProtectionDeviceRegistrationId <String>]: key: id of windowsInformationProtectionDeviceRegistration
  [WindowsInformationProtectionPolicyId <String>]: key: id of windowsInformationProtectionPolicy
  [WindowsInformationProtectionWipeActionId <String>]: key: id of windowsInformationProtectionWipeAction
.Link
https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devices.corporatemanagement/update-mgusermanageddevice
#>
function Update-MgUserManagedDevice {
[OutputType([System.Boolean])]
[CmdletBinding(DefaultParameterSetName='UpdateExpanded1', PositionalBinding=$false, SupportsShouldProcess, ConfirmImpact='Medium')]
[Microsoft.Graph.PowerShell.Profile('v1.0')]
param(
    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of managedDevice
    ${ManagedDeviceId},

    [Parameter(ParameterSetName='Update1', Mandatory)]
    [Parameter(ParameterSetName='UpdateExpanded1', Mandatory)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [System.String]
    # key: id of user
    ${UserId},

    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Path')]
    [Microsoft.Graph.PowerShell.Models.IDevicesCorporateManagementIdentity]
    # Identity Parameter
    # To construct, see NOTES section for INPUTOBJECT properties and create a hash table.
    ${InputObject},

    [Parameter(ParameterSetName='Update1', Mandatory, ValueFromPipeline)]
    [Parameter(ParameterSetName='UpdateViaIdentity1', Mandatory, ValueFromPipeline)]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphManagedDevice1]
    # Devices that are managed or pre-enrolled through Intune
    # To construct, see NOTES section for BODYPARAMETER properties and create a hash table.
    ${BodyParameter},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Code that allows the Activation Lock on a device to be bypassed.
    # This property is read-only.
    ${ActivationLockBypassCode},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Collections.Hashtable]
    # Additional Parameters
    ${AdditionalProperties},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Android security patch level.
    # This property is read-only.
    ${AndroidSecurityPatchLevel},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # The unique identifier for the Azure Active Directory device.
    # Read only.
    # This property is read-only.
    ${AzureAdDeviceId},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether the device is Azure Active Directory registered.
    # This property is read-only.
    ${AzureAdRegistered},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The DateTime when device compliance grace period expires.
    # This property is read-only.
    ${ComplianceGracePeriodExpirationDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Compliance state.
    ${ComplianceState},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphConfigurationManagerClientEnabledFeatures1]
    # configuration Manager client enabled features
    # To construct, see NOTES section for CONFIGURATIONMANAGERCLIENTENABLEDFEATURES properties and create a hash table.
    ${ConfigurationManagerClientEnabledFeatures},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceActionResult[]]
    # List of ComplexType deviceActionResult objects.
    # This property is read-only.
    # To construct, see NOTES section for DEVICEACTIONRESULTS properties and create a hash table.
    ${DeviceActionResults},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCategory2]
    # Device categories provides a way to organize your devices.
    # Using device categories, company administrators can define their own categories that make sense to their company.
    # These categories can then be applied to a device in the Intune Azure console or selected by a user during device enrollment.
    # You can filter reports and create dynamic Azure Active Directory device groups based on device categories.
    # To construct, see NOTES section for DEVICECATEGORY properties and create a hash table.
    ${DeviceCategory},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device category display name.
    # This property is read-only.
    ${DeviceCategoryDisplayName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceCompliancePolicyState1[]]
    # Device compliance policy states for this device.
    # To construct, see NOTES section for DEVICECOMPLIANCEPOLICYSTATES properties and create a hash table.
    ${DeviceCompliancePolicyStates},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceConfigurationState1[]]
    # Device configuration states for this device.
    # To construct, see NOTES section for DEVICECONFIGURATIONSTATES properties and create a hash table.
    ${DeviceConfigurationStates},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Possible ways of adding a mobile device to management.
    ${DeviceEnrollmentType},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [Microsoft.Graph.PowerShell.Models.IMicrosoftGraphDeviceHealthAttestationState]
    # deviceHealthAttestationState
    # To construct, see NOTES section for DEVICEHEALTHATTESTATIONSTATE properties and create a hash table.
    ${DeviceHealthAttestationState},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Name of the device.
    # This property is read-only.
    ${DeviceName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device registration status.
    ${DeviceRegistrationState},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Whether the device is Exchange ActiveSync activated.
    # This property is read-only.
    ${EasActivated},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Exchange ActivationSync activation time of the device.
    # This property is read-only.
    ${EasActivationDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Exchange ActiveSync Id of the device.
    # This property is read-only.
    ${EasDeviceId},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Email(s) for the user associated with the device.
    # This property is read-only.
    ${EmailAddress},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Enrollment time of the device.
    # This property is read-only.
    ${EnrolledDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Ethernet MAC.
    # This property is read-only.
    ${EthernetMacAddress},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device Exchange Access State.
    ${ExchangeAccessState},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device Exchange Access State Reason.
    ${ExchangeAccessStateReason},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # Last time the device contacted Exchange.
    # This property is read-only.
    ${ExchangeLastSuccessfulSyncDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int64]
    # Free Storage in Bytes.
    # This property is read-only.
    ${FreeStorageSpaceInBytes},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Integrated Circuit Card Identifier, it is A SIM card's unique identification number.
    # This property is read-only.
    ${Iccid},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Read-only.
    ${Id},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # IMEI.
    # This property is read-only.
    ${Imei},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Device encryption status.
    # This property is read-only.
    ${IsEncrypted},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Management.Automation.SwitchParameter]
    # Device supervised status.
    # This property is read-only.
    ${IsSupervised},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # whether the device is jail broken or rooted.
    # This property is read-only.
    ${JailBroken},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.DateTime]
    # The date and time that the device last completed a successful sync with Intune.
    # This property is read-only.
    ${LastSyncDateTime},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Automatically generated name to identify a device.
    # Can be overwritten to a user friendly name.
    ${ManagedDeviceName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Owner type of device.
    ${ManagedDeviceOwnerType},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Management agent type.
    ${ManagementAgent},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Manufacturer of the device.
    # This property is read-only.
    ${Manufacturer},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # MEID.
    # This property is read-only.
    ${Meid},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Model of the device.
    # This property is read-only.
    ${Model},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Notes on the device created by IT Admin
    ${Notes},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Operating system version of the device.
    # This property is read-only.
    ${OSVersion},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Operating system of the device.
    # Windows, iOS, etc.
    # This property is read-only.
    ${OperatingSystem},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Available health states for the Device Health API
    ${PartnerReportedThreatState},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Phone number of the device.
    # This property is read-only.
    ${PhoneNumber},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int64]
    # Total Memory in Bytes.
    # This property is read-only.
    ${PhysicalMemoryInBytes},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # An error string that identifies issues when creating Remote Assistance session objects.
    # This property is read-only.
    ${RemoteAssistanceSessionErrorDetails},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Url that allows a Remote Assistance session to be established with the device.
    # This property is read-only.
    ${RemoteAssistanceSessionUrl},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # SerialNumber.
    # This property is read-only.
    ${SerialNumber},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Subscriber Carrier.
    # This property is read-only.
    ${SubscriberCarrier},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.Int64]
    # Total Storage in Bytes.
    # This property is read-only.
    ${TotalStorageSpaceInBytes},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Unique Device Identifier for iOS and macOS devices.
    # This property is read-only.
    ${Udid},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # User display name.
    # This property is read-only.
    ${UserDisplayName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Unique Identifier for the user associated with the device.
    # This property is read-only.
    ${UserId1},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Device user principal name.
    # This property is read-only.
    ${UserPrincipalName},

    [Parameter(ParameterSetName='UpdateExpanded1')]
    [Parameter(ParameterSetName='UpdateViaIdentityExpanded1')]
    [Microsoft.Graph.PowerShell.Category('Body')]
    [System.String]
    # Wi-Fi MAC.
    # This property is read-only.
    ${WiFiMacAddress},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Wait for .NET debugger to attach
    ${Break},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be appended to the front of the pipeline
    ${HttpPipelineAppend},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [Microsoft.Graph.PowerShell.Runtime.SendAsyncStep[]]
    # SendAsync Pipeline Steps to be prepended to the front of the pipeline
    ${HttpPipelinePrepend},

    [Parameter()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Returns true when the command succeeds
    ${PassThru},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Uri]
    # The URI for the proxy server to use
    ${Proxy},

    [Parameter(DontShow)]
    [ValidateNotNull()]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.PSCredential]
    # Credentials for a proxy server to use for the remote call
    ${ProxyCredential},

    [Parameter(DontShow)]
    [Microsoft.Graph.PowerShell.Category('Runtime')]
    [System.Management.Automation.SwitchParameter]
    # Use the default credentials for the proxy
    ${ProxyUseDefaultCredentials}
)

begin {
    try {
        $outBuffer = $null
        if ($PSBoundParameters.TryGetValue('OutBuffer', [ref]$outBuffer)) {
            $PSBoundParameters['OutBuffer'] = 1
        }
        $parameterSet = $PSCmdlet.ParameterSetName
        $mapping = @{
            Update1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDevice_Update1';
            UpdateExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDevice_UpdateExpanded1';
            UpdateViaIdentity1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDevice_UpdateViaIdentity1';
            UpdateViaIdentityExpanded1 = 'Microsoft.Graph.Devices.CorporateManagement.private\Update-MgUserManagedDevice_UpdateViaIdentityExpanded1';
        }
        $wrappedCmd = $ExecutionContext.InvokeCommand.GetCommand(($mapping[$parameterSet]), [System.Management.Automation.CommandTypes]::Cmdlet)
        $scriptCmd = {& $wrappedCmd @PSBoundParameters}
        $steppablePipeline = $scriptCmd.GetSteppablePipeline($MyInvocation.CommandOrigin)
        $steppablePipeline.Begin($PSCmdlet)
    } catch {
        throw
    }
}

process {
    try {
        $steppablePipeline.Process($_)
    } catch {
        throw
    }
}

end {
    try {
        $steppablePipeline.End()
    } catch {
        throw
    }
}
}

# SIG # Begin signature block
# MIIjkgYJKoZIhvcNAQcCoIIjgzCCI38CAQExDzANBglghkgBZQMEAgEFADB5Bgor
# BgEEAYI3AgEEoGswaTA0BgorBgEEAYI3AgEeMCYCAwEAAAQQH8w7YFlLCE63JNLG
# KX7zUQIBAAIBAAIBAAIBAAIBADAxMA0GCWCGSAFlAwQCAQUABCAJ6SFSzlqloL5s
# MlWWMQD14c2q+lLaWfQLUSdxE5Ch9aCCDYEwggX/MIID56ADAgECAhMzAAAB32vw
# LpKnSrTQAAAAAAHfMA0GCSqGSIb3DQEBCwUAMH4xCzAJBgNVBAYTAlVTMRMwEQYD
# VQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNy
# b3NvZnQgQ29ycG9yYXRpb24xKDAmBgNVBAMTH01pY3Jvc29mdCBDb2RlIFNpZ25p
# bmcgUENBIDIwMTEwHhcNMjAxMjE1MjEzMTQ1WhcNMjExMjAyMjEzMTQ1WjB0MQsw
# CQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9u
# ZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMR4wHAYDVQQDExVNaWNy
# b3NvZnQgQ29ycG9yYXRpb24wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB
# AQC2uxlZEACjqfHkuFyoCwfL25ofI9DZWKt4wEj3JBQ48GPt1UsDv834CcoUUPMn
# s/6CtPoaQ4Thy/kbOOg/zJAnrJeiMQqRe2Lsdb/NSI2gXXX9lad1/yPUDOXo4GNw
# PjXq1JZi+HZV91bUr6ZjzePj1g+bepsqd/HC1XScj0fT3aAxLRykJSzExEBmU9eS
# yuOwUuq+CriudQtWGMdJU650v/KmzfM46Y6lo/MCnnpvz3zEL7PMdUdwqj/nYhGG
# 3UVILxX7tAdMbz7LN+6WOIpT1A41rwaoOVnv+8Ua94HwhjZmu1S73yeV7RZZNxoh
# EegJi9YYssXa7UZUUkCCA+KnAgMBAAGjggF+MIIBejAfBgNVHSUEGDAWBgorBgEE
# AYI3TAgBBggrBgEFBQcDAzAdBgNVHQ4EFgQUOPbML8IdkNGtCfMmVPtvI6VZ8+Mw
# UAYDVR0RBEkwR6RFMEMxKTAnBgNVBAsTIE1pY3Jvc29mdCBPcGVyYXRpb25zIFB1
# ZXJ0byBSaWNvMRYwFAYDVQQFEw0yMzAwMTIrNDYzMDA5MB8GA1UdIwQYMBaAFEhu
# ZOVQBdOCqhc3NyK1bajKdQKVMFQGA1UdHwRNMEswSaBHoEWGQ2h0dHA6Ly93d3cu
# bWljcm9zb2Z0LmNvbS9wa2lvcHMvY3JsL01pY0NvZFNpZ1BDQTIwMTFfMjAxMS0w
# Ny0wOC5jcmwwYQYIKwYBBQUHAQEEVTBTMFEGCCsGAQUFBzAChkVodHRwOi8vd3d3
# Lm1pY3Jvc29mdC5jb20vcGtpb3BzL2NlcnRzL01pY0NvZFNpZ1BDQTIwMTFfMjAx
# MS0wNy0wOC5jcnQwDAYDVR0TAQH/BAIwADANBgkqhkiG9w0BAQsFAAOCAgEAnnqH
# tDyYUFaVAkvAK0eqq6nhoL95SZQu3RnpZ7tdQ89QR3++7A+4hrr7V4xxmkB5BObS
# 0YK+MALE02atjwWgPdpYQ68WdLGroJZHkbZdgERG+7tETFl3aKF4KpoSaGOskZXp
# TPnCaMo2PXoAMVMGpsQEQswimZq3IQ3nRQfBlJ0PoMMcN/+Pks8ZTL1BoPYsJpok
# t6cql59q6CypZYIwgyJ892HpttybHKg1ZtQLUlSXccRMlugPgEcNZJagPEgPYni4
# b11snjRAgf0dyQ0zI9aLXqTxWUU5pCIFiPT0b2wsxzRqCtyGqpkGM8P9GazO8eao
# mVItCYBcJSByBx/pS0cSYwBBHAZxJODUqxSXoSGDvmTfqUJXntnWkL4okok1FiCD
# Z4jpyXOQunb6egIXvkgQ7jb2uO26Ow0m8RwleDvhOMrnHsupiOPbozKroSa6paFt
# VSh89abUSooR8QdZciemmoFhcWkEwFg4spzvYNP4nIs193261WyTaRMZoceGun7G
# CT2Rl653uUj+F+g94c63AhzSq4khdL4HlFIP2ePv29smfUnHtGq6yYFDLnT0q/Y+
# Di3jwloF8EWkkHRtSuXlFUbTmwr/lDDgbpZiKhLS7CBTDj32I0L5i532+uHczw82
# oZDmYmYmIUSMbZOgS65h797rj5JJ6OkeEUJoAVwwggd6MIIFYqADAgECAgphDpDS
# AAAAAAADMA0GCSqGSIb3DQEBCwUAMIGIMQswCQYDVQQGEwJVUzETMBEGA1UECBMK
# V2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0
# IENvcnBvcmF0aW9uMTIwMAYDVQQDEylNaWNyb3NvZnQgUm9vdCBDZXJ0aWZpY2F0
# ZSBBdXRob3JpdHkgMjAxMTAeFw0xMTA3MDgyMDU5MDlaFw0yNjA3MDgyMTA5MDla
# MH4xCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdS
# ZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xKDAmBgNVBAMT
# H01pY3Jvc29mdCBDb2RlIFNpZ25pbmcgUENBIDIwMTEwggIiMA0GCSqGSIb3DQEB
# AQUAA4ICDwAwggIKAoICAQCr8PpyEBwurdhuqoIQTTS68rZYIZ9CGypr6VpQqrgG
# OBoESbp/wwwe3TdrxhLYC/A4wpkGsMg51QEUMULTiQ15ZId+lGAkbK+eSZzpaF7S
# 35tTsgosw6/ZqSuuegmv15ZZymAaBelmdugyUiYSL+erCFDPs0S3XdjELgN1q2jz
# y23zOlyhFvRGuuA4ZKxuZDV4pqBjDy3TQJP4494HDdVceaVJKecNvqATd76UPe/7
# 4ytaEB9NViiienLgEjq3SV7Y7e1DkYPZe7J7hhvZPrGMXeiJT4Qa8qEvWeSQOy2u
# M1jFtz7+MtOzAz2xsq+SOH7SnYAs9U5WkSE1JcM5bmR/U7qcD60ZI4TL9LoDho33
# X/DQUr+MlIe8wCF0JV8YKLbMJyg4JZg5SjbPfLGSrhwjp6lm7GEfauEoSZ1fiOIl
# XdMhSz5SxLVXPyQD8NF6Wy/VI+NwXQ9RRnez+ADhvKwCgl/bwBWzvRvUVUvnOaEP
# 6SNJvBi4RHxF5MHDcnrgcuck379GmcXvwhxX24ON7E1JMKerjt/sW5+v/N2wZuLB
# l4F77dbtS+dJKacTKKanfWeA5opieF+yL4TXV5xcv3coKPHtbcMojyyPQDdPweGF
# RInECUzF1KVDL3SV9274eCBYLBNdYJWaPk8zhNqwiBfenk70lrC8RqBsmNLg1oiM
# CwIDAQABo4IB7TCCAekwEAYJKwYBBAGCNxUBBAMCAQAwHQYDVR0OBBYEFEhuZOVQ
# BdOCqhc3NyK1bajKdQKVMBkGCSsGAQQBgjcUAgQMHgoAUwB1AGIAQwBBMAsGA1Ud
# DwQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFHItOgIxkEO5FAVO
# 4eqnxzHRI4k0MFoGA1UdHwRTMFEwT6BNoEuGSWh0dHA6Ly9jcmwubWljcm9zb2Z0
# LmNvbS9wa2kvY3JsL3Byb2R1Y3RzL01pY1Jvb0NlckF1dDIwMTFfMjAxMV8wM18y
# Mi5jcmwwXgYIKwYBBQUHAQEEUjBQME4GCCsGAQUFBzAChkJodHRwOi8vd3d3Lm1p
# Y3Jvc29mdC5jb20vcGtpL2NlcnRzL01pY1Jvb0NlckF1dDIwMTFfMjAxMV8wM18y
# Mi5jcnQwgZ8GA1UdIASBlzCBlDCBkQYJKwYBBAGCNy4DMIGDMD8GCCsGAQUFBwIB
# FjNodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtpb3BzL2RvY3MvcHJpbWFyeWNw
# cy5odG0wQAYIKwYBBQUHAgIwNB4yIB0ATABlAGcAYQBsAF8AcABvAGwAaQBjAHkA
# XwBzAHQAYQB0AGUAbQBlAG4AdAAuIB0wDQYJKoZIhvcNAQELBQADggIBAGfyhqWY
# 4FR5Gi7T2HRnIpsLlhHhY5KZQpZ90nkMkMFlXy4sPvjDctFtg/6+P+gKyju/R6mj
# 82nbY78iNaWXXWWEkH2LRlBV2AySfNIaSxzzPEKLUtCw/WvjPgcuKZvmPRul1LUd
# d5Q54ulkyUQ9eHoj8xN9ppB0g430yyYCRirCihC7pKkFDJvtaPpoLpWgKj8qa1hJ
# Yx8JaW5amJbkg/TAj/NGK978O9C9Ne9uJa7lryft0N3zDq+ZKJeYTQ49C/IIidYf
# wzIY4vDFLc5bnrRJOQrGCsLGra7lstnbFYhRRVg4MnEnGn+x9Cf43iw6IGmYslmJ
# aG5vp7d0w0AFBqYBKig+gj8TTWYLwLNN9eGPfxxvFX1Fp3blQCplo8NdUmKGwx1j
# NpeG39rz+PIWoZon4c2ll9DuXWNB41sHnIc+BncG0QaxdR8UvmFhtfDcxhsEvt9B
# xw4o7t5lL+yX9qFcltgA1qFGvVnzl6UJS0gQmYAf0AApxbGbpT9Fdx41xtKiop96
# eiL6SJUfq/tHI4D1nvi/a7dLl+LrdXga7Oo3mXkYS//WsyNodeav+vyL6wuA6mk7
# r/ww7QRMjt/fdW1jkT3RnVZOT7+AVyKheBEyIXrvQQqxP/uozKRdwaGIm1dxVk5I
# RcBCyZt2WwqASGv9eZ/BvW1taslScxMNelDNMYIVZzCCFWMCAQEwgZUwfjELMAkG
# A1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQx
# HjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEoMCYGA1UEAxMfTWljcm9z
# b2Z0IENvZGUgU2lnbmluZyBQQ0EgMjAxMQITMwAAAd9r8C6Sp0q00AAAAAAB3zAN
# BglghkgBZQMEAgEFAKCBrjAZBgkqhkiG9w0BCQMxDAYKKwYBBAGCNwIBBDAcBgor
# BgEEAYI3AgELMQ4wDAYKKwYBBAGCNwIBFTAvBgkqhkiG9w0BCQQxIgQgR19sHyuK
# toYsjiMhblzZcpsKy1WDXrsRVr3uqR8V+e8wQgYKKwYBBAGCNwIBDDE0MDKgFIAS
# AE0AaQBjAHIAbwBzAG8AZgB0oRqAGGh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbTAN
# BgkqhkiG9w0BAQEFAASCAQByzqTxfJbfSLtv8g3NG699P+9PQHiNet51ERRi/8eG
# 2/6huI/DtaC56mqXT9XQ9Ssz3jC5XPwJlkMI/maQi3zWl8RcC3/WNpvfac7n36O+
# oTjlfKNRhYbVLj1txEg93OrGox94rqkaAEGfwCab55YCBAxqH1PcaIEghHWf7vfy
# M+butXikg2Z5cQUUTj5G1W+6DRSpqJRYZf7jUhAL6TMKva8yfNE5RIwaIrWav/MK
# BcJP18PTGb2QKeGKwMwo6sIOkMk4K3r87SupX/q8fHUjMkVpS9kSrg4RBNTB8p+E
# QdJRawum51x100et8JxS9KdtWr1nvns1Hs4hJgjJNtUcoYIS8TCCEu0GCisGAQQB
# gjcDAwExghLdMIIS2QYJKoZIhvcNAQcCoIISyjCCEsYCAQMxDzANBglghkgBZQME
# AgEFADCCAVUGCyqGSIb3DQEJEAEEoIIBRASCAUAwggE8AgEBBgorBgEEAYRZCgMB
# MDEwDQYJYIZIAWUDBAIBBQAEIAVrOEEZ9zqHSHEGoO+mzkb2+Km9W2nBgyCvWoEJ
# 5rYlAgZhb3XZ58EYEzIwMjExMDI3MDcxMTI0Ljg2OVowBIACAfSggdSkgdEwgc4x
# CzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRt
# b25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xKTAnBgNVBAsTIE1p
# Y3Jvc29mdCBPcGVyYXRpb25zIFB1ZXJ0byBSaWNvMSYwJAYDVQQLEx1UaGFsZXMg
# VFNTIEVTTjowQTU2LUUzMjktNEQ0RDElMCMGA1UEAxMcTWljcm9zb2Z0IFRpbWUt
# U3RhbXAgU2VydmljZaCCDkQwggT1MIID3aADAgECAhMzAAABW3ywujRnN8GnAAAA
# AAFbMA0GCSqGSIb3DQEBCwUAMHwxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNo
# aW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29y
# cG9yYXRpb24xJjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1lLVN0YW1wIFBDQSAyMDEw
# MB4XDTIxMDExNDE5MDIxNloXDTIyMDQxMTE5MDIxNlowgc4xCzAJBgNVBAYTAlVT
# MRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQK
# ExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xKTAnBgNVBAsTIE1pY3Jvc29mdCBPcGVy
# YXRpb25zIFB1ZXJ0byBSaWNvMSYwJAYDVQQLEx1UaGFsZXMgVFNTIEVTTjowQTU2
# LUUzMjktNEQ0RDElMCMGA1UEAxMcTWljcm9zb2Z0IFRpbWUtU3RhbXAgU2Vydmlj
# ZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMgkf6Xs9dqhesumLltn
# l6lwjiD1jh+Ipz/6j5q5CQzSnbaVuo4KiCiSpr5WtqqVlD7nT/3WX6V6vcpNQV5c
# dtVVwafNpLn3yF+fRNoUWh1Q9u8XGiSX8YzVS8q68JPFiRO4HMzMpLCaSjcfQZId
# 6CiukyLQruKnSFwdGhMxE7GCayaQ8ZDyEPHs/C2x4AAYMFsVOssSdR8jb8fzAek3
# SNlZtVKd0Kb8io+3XkQ54MvUXV9cVL1/eDdXVVBBqOhHzoJsy+c2y/s3W+gEX8Qb
# 9O/bjBkR6hIaOwEAw7Nu40/TMVfwXJ7g5R/HNXCt7c4IajNN4W+CugeysLnYbqRm
# W+kCAwEAAaOCARswggEXMB0GA1UdDgQWBBRl5y01iG23UyBdTH/15TnJmLqrLjAf
# BgNVHSMEGDAWgBTVYzpcijGQ80N7fEYbxTNoWoVtVTBWBgNVHR8ETzBNMEugSaBH
# hkVodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpL2NybC9wcm9kdWN0cy9NaWNU
# aW1TdGFQQ0FfMjAxMC0wNy0wMS5jcmwwWgYIKwYBBQUHAQEETjBMMEoGCCsGAQUF
# BzAChj5odHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtpL2NlcnRzL01pY1RpbVN0
# YVBDQV8yMDEwLTA3LTAxLmNydDAMBgNVHRMBAf8EAjAAMBMGA1UdJQQMMAoGCCsG
# AQUFBwMIMA0GCSqGSIb3DQEBCwUAA4IBAQCnM2s7phMamc4QdVolrO1ZXRiDMUVd
# gu9/yq8g7kIVl+fklUV2Vlout6+fpOqAGnewMtwenFtagVhVJ8Hau8Nwk+IAhB0B
# 04DobNDw7v4KETARf8KN8gTH6B7RjHhreMDWg7icV0Dsoj8MIA8AirWlwf4nr8pK
# H0n2rETseBJDWc3dbU0ITJEH1RzFhGkW7IzNPQCO165Tp7NLnXp4maZzoVx8PyiO
# NO6fyDZr0yqVuh9OqWH+fPZYQ/YYFyhxy+hHWOuqYpc83Phn1vA0Ae1+Wn4bne6Z
# GjPxRI6sxsMIkdBXD0HJLyN7YfSrbOVAYwjYWOHresGZuvoEaEgDRWUrMIIGcTCC
# BFmgAwIBAgIKYQmBKgAAAAAAAjANBgkqhkiG9w0BAQsFADCBiDELMAkGA1UEBhMC
# VVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNV
# BAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEyMDAGA1UEAxMpTWljcm9zb2Z0IFJv
# b3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDIwMTAwHhcNMTAwNzAxMjEzNjU1WhcN
# MjUwNzAxMjE0NjU1WjB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3Rv
# bjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0
# aW9uMSYwJAYDVQQDEx1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAxMDCCASIw
# DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKkdDbx3EYo6IOz8E5f1+n9plGt0
# VBDVpQoAgoX77XxoSyxfxcPlYcJ2tz5mK1vwFVMnBDEfQRsalR3OCROOfGEwWbEw
# RA/xYIiEVEMM1024OAizQt2TrNZzMFcmgqNFDdDq9UeBzb8kYDJYYEbyWEeGMoQe
# dGFnkV+BVLHPk0ySwcSmXdFhE24oxhr5hoC732H8RsEnHSRnEnIaIYqvS2SJUGKx
# Xf13Hz3wV3WsvYpCTUBR0Q+cBj5nf/VmwAOWRH7v0Ev9buWayrGo8noqCjHw2k4G
# kbaICDXoeByw6ZnNPOcvRLqn9NxkvaQBwSAJk3jN/LzAyURdXhacAQVPIk0CAwEA
# AaOCAeYwggHiMBAGCSsGAQQBgjcVAQQDAgEAMB0GA1UdDgQWBBTVYzpcijGQ80N7
# fEYbxTNoWoVtVTAZBgkrBgEEAYI3FAIEDB4KAFMAdQBiAEMAQTALBgNVHQ8EBAMC
# AYYwDwYDVR0TAQH/BAUwAwEB/zAfBgNVHSMEGDAWgBTV9lbLj+iiXGJo0T2UkFvX
# zpoYxDBWBgNVHR8ETzBNMEugSaBHhkVodHRwOi8vY3JsLm1pY3Jvc29mdC5jb20v
# cGtpL2NybC9wcm9kdWN0cy9NaWNSb29DZXJBdXRfMjAxMC0wNi0yMy5jcmwwWgYI
# KwYBBQUHAQEETjBMMEoGCCsGAQUFBzAChj5odHRwOi8vd3d3Lm1pY3Jvc29mdC5j
# b20vcGtpL2NlcnRzL01pY1Jvb0NlckF1dF8yMDEwLTA2LTIzLmNydDCBoAYDVR0g
# AQH/BIGVMIGSMIGPBgkrBgEEAYI3LgMwgYEwPQYIKwYBBQUHAgEWMWh0dHA6Ly93
# d3cubWljcm9zb2Z0LmNvbS9QS0kvZG9jcy9DUFMvZGVmYXVsdC5odG0wQAYIKwYB
# BQUHAgIwNB4yIB0ATABlAGcAYQBsAF8AUABvAGwAaQBjAHkAXwBTAHQAYQB0AGUA
# bQBlAG4AdAAuIB0wDQYJKoZIhvcNAQELBQADggIBAAfmiFEN4sbgmD+BcQM9naOh
# IW+z66bM9TG+zwXiqf76V20ZMLPCxWbJat/15/B4vceoniXj+bzta1RXCCtRgkQS
# +7lTjMz0YBKKdsxAQEGb3FwX/1z5Xhc1mCRWS3TvQhDIr79/xn/yN31aPxzymXlK
# kVIArzgPF/UveYFl2am1a+THzvbKegBvSzBEJCI8z+0DpZaPWSm8tv0E4XCfMkon
# /VWvL/625Y4zu2JfmttXQOnxzplmkIz/amJ/3cVKC5Em4jnsGUpxY517IW3DnKOi
# PPp/fZZqkHimbdLhnPkd/DjYlPTGpQqWhqS9nhquBEKDuLWAmyI4ILUl5WTs9/S/
# fmNZJQ96LjlXdqJxqgaKD4kWumGnEcua2A5HmoDF0M2n0O99g/DhO3EJ3110mCII
# YdqwUB5vvfHhAN/nMQekkzr3ZUd46PioSKv33nJ+YWtvd6mBy6cJrDm77MbL2IK0
# cs0d9LiFAR6A+xuJKlQ5slvayA1VmXqHczsI5pgt6o3gMy4SKfXAL1QnIffIrE7a
# KLixqduWsqdCosnPGUFN4Ib5KpqjEWYw07t0MkvfY3v1mYovG8chr1m1rtxEPJdQ
# cdeh0sVV42neV8HR3jDA/czmTfsNv11P6Z0eGTgvvM9YBS7vDaBQNdrvCScc1bN+
# NR4Iuto229Nfj950iEkSoYIC0jCCAjsCAQEwgfyhgdSkgdEwgc4xCzAJBgNVBAYT
# AlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYD
# VQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xKTAnBgNVBAsTIE1pY3Jvc29mdCBP
# cGVyYXRpb25zIFB1ZXJ0byBSaWNvMSYwJAYDVQQLEx1UaGFsZXMgVFNTIEVTTjow
# QTU2LUUzMjktNEQ0RDElMCMGA1UEAxMcTWljcm9zb2Z0IFRpbWUtU3RhbXAgU2Vy
# dmljZaIjCgEBMAcGBSsOAwIaAxUACrtBbqYy0r+YGLtUaFVRW/Yh7qaggYMwgYCk
# fjB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
# UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSYwJAYDVQQD
# Ex1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAxMDANBgkqhkiG9w0BAQUFAAIF
# AOUjLpMwIhgPMjAyMTEwMjcwNTQ5MDdaGA8yMDIxMTAyODA1NDkwN1owdzA9Bgor
# BgEEAYRZCgQBMS8wLTAKAgUA5SMukwIBADAKAgEAAgISCAIB/zAHAgEAAgIRQDAK
# AgUA5SSAEwIBADA2BgorBgEEAYRZCgQCMSgwJjAMBgorBgEEAYRZCgMCoAowCAIB
# AAIDB6EgoQowCAIBAAIDAYagMA0GCSqGSIb3DQEBBQUAA4GBAFXwcaZcFnqB1GM5
# yPJ+5++2Lm2HpySjdrw4JiDD0DX7iosF/iWcHTIX6P36GmaIaaig26RTGdomttYT
# DdsgHXZf8FPur5U5tjCsq3KPPt/6KXpZWphJ4k+BRDbebqiaypDN7reDcdBfict4
# UY7/p0RCGdxaSmvwDWzFDrKlnpMHMYIDDTCCAwkCAQEwgZMwfDELMAkGA1UEBhMC
# VVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNV
# BAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEmMCQGA1UEAxMdTWljcm9zb2Z0IFRp
# bWUtU3RhbXAgUENBIDIwMTACEzMAAAFbfLC6NGc3wacAAAAAAVswDQYJYIZIAWUD
# BAIBBQCgggFKMBoGCSqGSIb3DQEJAzENBgsqhkiG9w0BCRABBDAvBgkqhkiG9w0B
# CQQxIgQgIpCkrDt3coJU7fK27dCbkIA7Ne1+igZ8PbmQkF3GRb0wgfoGCyqGSIb3
# DQEJEAIvMYHqMIHnMIHkMIG9BCDJIuCpKGMRh4lCGucGPHCNJ7jq9MTbe3mQ2FtS
# ZLCFGTCBmDCBgKR+MHwxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9u
# MRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRp
# b24xJjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1lLVN0YW1wIFBDQSAyMDEwAhMzAAAB
# W3ywujRnN8GnAAAAAAFbMCIEIK99JMbUHXHp5o7WYacv2DvoTxKBdO8WVNnSGgpN
# 0hhkMA0GCSqGSIb3DQEBCwUABIIBAIEQy28lO5uGOSRGqCvoyMLjViVaRSYEaYCK
# aTbkmhMUcTWrTS1CBhngTOZXKX1lVw5ht8IsYD+CgSlmLNaP95svRPH1r0q7FCak
# Vxv9qY+KI9+k+nAi5DNhfcu012YRQIaZgDxEtuxB3P7zMGDSA7o2MfjvswmXZY0N
# AQVLaGT+zbCU+cQVAyg0r8sxCYhRTN/G+QVOBIYPu5DtFHGIoeBmtFPnP8tkFjlm
# F60XqnG/SqQaQvI1Rlf27WhS3EtM5fwLO8Zo2z7+Vo7cq801v4LEtGwIa8S0AeoI
# RQEL/YzQdCxeNGcYGhHIlrUOmCQY9kaqS8J4emwJkTX0W/uCtrg=
# SIG # End signature block
